# AS3 parser is pre-compiled using nodejs and
# requires node 4.8.0 for compatibility with BIG-IP.
image: $DOCKER_URL/node:4.8.0

stages:
  - build
  - post build
  - docs

# This inherits all the jobs defined in the parent template
# Override variables in this project as needed
# include:
# adds atg-shared-checks stage and jobs
# adds atg_shared_checks_result job to test stage
#  - project: automation-toolchain/atg-shared-templates
#    file: security/base.gitlab-ci.yml

variables:
  DOCS_BUILD_DIR: "docs/_build/html"
  GIT_DEPTH: "10"
  SECRET_DETECTION_EXCLUDED_PATHS: "docs/**/*.rst,test/*,*examples/*/*.json,properties.json,assets/css/*.css,schema/**/*.json,src/schema/**/*.json"



build_api_docs:
  image: $DOCKER_URL/node:12
  stage: build
  needs: []
  script:
    # install packages
    - npm install
    # generate docs
    - npm run make-api-docs
    - mkdir apidocs && mv redoc-static.html apidocs/index.html
  tags:
    - cm-official-docker-executor
  artifacts:
    name: docs
    paths:
      - apidocs


# DOCS
create_docs:
  image: ${CONTAINTHEDOCS_IMAGE}
  stage: post build
  allow_failure: true
  needs:
    - build_api_docs
  script:
    - npm ci --no-optional
    - npm run build-schema
    - node scripts/build/schema-to-rst.js
    - node scripts/build/create-examples-collection.js
    - if [ "$CI_COMMIT_REF_NAME" = "docs-staging" ] || [ "$CI_COMMIT_REF_NAME" = "docs-0.0" ] || [ "$CI_COMMIT_REF_NAME" = "docs-latest" ] || [ "$CI_COMMIT_REF_NAME" = "docs-3.13.1" ] || [ "$CI_COMMIT_REF_NAME" = "docs-3.5.1" ]; then
    -   rm -rf docs/_templates
    - fi
    - npm install mocha@10.2
    - make html
    - API_DOCS_INDEX=${DOCS_BUILD_DIR}/refguide/apidocs.html
    - cp apidocs/index.html ${API_DOCS_INDEX}

    - echo "Checking grammar and style"
    # Runs the grammar check on everything except the /docs/drafts directory
    - vale --glob='*.rst' .
    - echo "Checking links"
    # - make linkcheck

    # build developer documentation (optional)
    - if [ "$CI_COMMIT_REF_NAME" = "master" ]; then
    -   npm install --registry $NPM_REGISTRY_URL -g jsdoc
    -   jsdoc src/nodejs/* -d contributing
    - fi
  tags:
    - cm-official-docker-executor
  artifacts:
    expire_in: 1 week
    name: sphinx-docs_$CI_BUILD_REF
    paths:
      - docs/_build/html
      - contributing
      - examples/as3.examples.collection.json


# Publish docs to clouddocs.f5.com
docs_to_production:
  image: ${CONTAINTHEDOCS_IMAGE}
  stage: docs
  environment:
    name: production
    url: https://clouddocs.f5.com/products/extensions/f5-appsvcs-extension/latest
  only:
  # Currently will only deploy to clouddocs.f5.com on commits to docs-latest
  # fill in desired release branch name and uncomment to add deployment from a branch
    - docs-latest
  tags:
    - cm-official-docker-executor
  needs:
    - create_docs
  script:
  # Uncomment and set to create desired version format
    - aws s3 sync docs/_build/html s3://clouddocs.f5.com/products/extensions/f5-appsvcs-extension/latest
    - aws s3 cp versions.json s3://clouddocs.f5.com/products/extensions/f5-appsvcs-extension/versions.json
    # create invalidation to clear cloudfront cache
    # - aws cloudfront create-invalidation --distribution-id $AWS_DIST --paths /products/extensions/f5-appsvcs-extension/latest
