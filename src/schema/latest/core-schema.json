{
    "$id": "urn:uuid:f83d84a1-b27b-441a-ae32-314b3de3315a",
    "$schema": "http://json-schema.org/draft-07/schema#",

    "title": "ADC",
    "description": "A declarative configuration for an ADC such as F5 BIG-IP",
    "type": "object",

    "properties": {
        "class": {
            "title": "Class",
            "description": "Indicates this JSON document is an ADC declaration",
            "type": "string",
            "const": "ADC"
        },
        "$schema": {
            "description": "URL of schema against which to validate. Used by validation in your local environment only (via Visual Studio Code, for example)",
            "type": "string",
            "format": "uri"
        },
        "updateMode": {
            "title": "Update mode",
            "description": "When set to 'selective' (default) BIG-IP AS3 does not modify Tenants not referenced in the declaration.  Otherwise ('complete') BIG-IP AS3 removes unreferenced Tenants.",
            "type": "string",
            "enum": [ "complete", "selective" ],
            "default": "selective"
        },
        "schemaVersion": {
            "title": "Schema version",
            "description": "Version of ADC Declaration schema this declaration uses",
            "type": "string",
            "anyOf": [
                {
                    "description": "Any version of AS3.",
                    "pattern": "^3[.]([0-9]|[1234][0-9])($|[.][0-9]+$)"
                },
                {
                    "description": "The current version of AS3.",
                    "const": "3.49.0"
                }
            ]
        },
        "id": {
            "title": "Declaration ID",
            "description": "Unique identifier for this declaration (max 255 printable chars with no spaces, quotation marks, angle brackets, nor backslashes)",
            "type": "string",
            "pattern": "^[^\\x00-\\x20\\x22'<>\\x5c^`|\\x7f]*$",
            "minLength": 0,
            "maxLength": 255
        },
        "target": {
            "title": "Target Device",
            "description": "Trusted target for config when configuring with BIG-IQ",
            "type": "object",
            "properties": {
                "hostname": {
                    "title": "Host Name",
                    "description": "Host name of managed device to be configured",
                    "type": "string"
                },
                "address": {
                    "title": "IP Address",
                    "description": "IP address of managed device to be configured",
                    "type": "string",
                    "format": "f5ip"
                }
            },
            "maxProperties": 1
        },
        "label": { "$ref": "#/definitions/Label" },
        "remark": { "$ref": "#/definitions/Remark" },
        "constants": {
            "title": "Constants",
            "description": "Declaration metadata and/or named values for (re-)use by declaration objects",
            "type": "object",

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "Constants",
                    "default": "Constants"
                },

                "version": {
                    "title": "Declaration version",
                    "description": "Version number of declaration; update when you change contents but not ID (optional but recommended)",
                    "type": [ "number", "string" ]
                },
                "timestamp": {
                    "title": "Declaration timestamp",
                    "description": "Date+time (this version of) declaration was created (optional but recommended)",
                    "type": "string",
                    "format": "date-time"
                }
            },
            "additionalProperties": {
                "type": [
                    "boolean", "integer", "number",
                    "string", "array", "object"
                ],

                "if": {
                    "type": "object",
                    "required": [ "protected", "ciphertext" ]
                },
                "then": {
                    "properties": {
                        "allowReuse": {
                            "title": "Allow reuse",
                            "description": "If true (default), different declaration objects may reuse a cryptogram, WHICH MAY POSE A SECURITY RISK!",
                            "type": "boolean",
                            "default": true
                        }
                    },
                    "additionalProperties": false,
                    "allOf": [
                        { "$ref": "#/definitions/JWE" }
                    ]
                }
            },
            "propertyNames": {
                "pattern": "^[A-Za-z][0-9A-Za-z_]*$",
                "maxLength": 64
            }
        },

        "Common": {
            "title": "Common tenant",
            "description": "Special tenant Common holds objects other tenants can share",
            "type": "object",

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "Tenant",
                    "default": "Tenant"
                },
                "label": { "$ref": "#/definitions/Label" },
                "remark": { "$ref": "#/definitions/Remark" },
                "verifiers": {
                    "title": "Verifiers",
                    "description": "Data (in 'key':'value' properties) used to verify automated tests.  Ordinary declarations do not need this",
                    "type": "object"
                },

                "enable": {
                    "title": "Enable",
                    "description": "If declared, you must enable the Common tenant",
                    "type": "boolean",
                    "const": true
                },
                "Shared": { "$ref": "#/definitions/Application_Shared" },

                "constants": { "$ref": "#/definitions/Constants" },
                "controls": { "$ref": "#/definitions/Controls" },
                "optimisticLockKey": {
                    "title": "Optimistic lock key",
                    "description": "When you deploy a declaration with a non-empty 'key' value here, that activates an optimistic lock on changes to this Tenant.  If the key in your declaration does not match the key BIG-IP AS3 computes for the most-recent previous declaration, then BIG-IP AS3 will NOT update this Tenant and will return an error code.  To use optimistic locking, first retrieve a declaration using option 'showHash=true' to get the current per-Tenant keys.  Make any changes you desire, then deploy your updated declaration.  Deployment of each Tenant with a key will succeed only if that Tenant has not been modified since the time you retrieved the declaration.  (To overwrite all previous changes to a Tenant simply do NOT include any opportunistic-lock key for that Tenant when you deploy a declaration.  That is the default.)  Note that only keys computed by BIG-IP AS3 may be used here-- you cannot generate your own. If 'showHash=true' is used on a POST then the optimisticLockKey will be shown as a part of the output (This helps to avoid the need to do a GET request).",
                    "type": "string",
                    "maxLength": 128,
                    "default": ""
                }
            },
            "additionalProperties": false
        },

        "controls": {
            "$ref": "#/definitions/Controls"
        },

        "scratch": {
            "title": "f5 scratch",
            "description": "Holds some system data during declaration processing",
            "type": "string",
            "readOnly": true
        }
    },

    "additionalProperties": { "$ref": "#/definitions/Tenant" },
    "propertyNames": {
        "oneOf": [
            {
                "pattern": "^[A-Za-z][0-9A-Za-z_.-]*$",
                "maxLength": 190
            },
            {
                "enum": ["$schema"]
            }
        ]
    },
    "required": [ "class", "schemaVersion" ],

    "definitions": {
        "Include": {
            "title": "Include",
            "description": "Defines inclusion of one part of the schema into another",
            "type": "object",
            "properties": {
                "include": {
                    "description": "Keyword to allow for inclusion of one part of the declaration into another",
                    "oneOf": [
                        {
                            "type": "string",
                            "format": "f5pointer"
                        },
                        {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "f5pointer"
                            }
                        }
                    ],
                    "f5PostProcess": {
                        "tag": "include",
                        "data": "object"
                    }
                }
            }
        },

        "Tenant": {
            "title": "Tenant",
            "description": "Declares a Tenant",
            "type": "object",

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "Tenant"
                },
                "label": { "$ref": "#/definitions/Label" },
                "remark": { "$ref": "#/definitions/Remark" },
                "verifiers": {
                    "title": "Verifiers",
                    "description": "Data (in 'key':'value' properties) used to verify automated tests.  Ordinary declarations do not need this",
                    "type": "object"
                },
                "enable": {
                    "title": "Enable",
                    "description": "Tenant handles traffic only when enabled (default)",
                    "type": "boolean",
                    "default": true
                },
                "defaultRouteDomain": {
                    "title": "Default route domain",
                    "description": "Using the route-domain ID, this property selects the default route domain for IP traffic to and from this Tenant's application resources (note: affects declared IP addresses which do not include a %RD route-domain specifier).  You must choose an existing route domain--this option cannot create one.  Route domain 0 (default) is always available",
                    "$comment": "TMSH forces this value to be an integer",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535,
                    "default": 0,
                    "f5PostProcess": {
                        "tag": "bigComponent",
                        "data": ["query net route-domain"]
                    }
                },
                "Shared": { "$ref": "#/definitions/Application_Shared" },

                "constants": { "$ref": "#/definitions/Constants" },
                "controls": { "$ref": "#/definitions/Controls" },

                "optimisticLockKey": {
                    "title": "Optimistic lock key",
                    "description": "When you deploy a declaration with a non-empty 'key' value here, that activates an optimistic lock on changes to this Tenant.  If the key in your declaration does not match the key BIG-IP AS3 computes for the most-recent previous declaration, then BIG-IP AS3 will NOT update this Tenant and will return an error code.  To use optimistic locking, first retrieve a declaration using option 'showHash=true' to get the current per-Tenant keys.  Make any changes you desire, then deploy your updated declaration.  Deployment of each Tenant with a key will succeed only if that Tenant has not been modified since the time you retrieved the declaration.  (To overwrite all previous changes to a Tenant simply do NOT include any opportunistic-lock key for that Tenant when you deploy a declaration.  That is the default.)  Note that only keys computed by BIG-IP AS3 may be used here-- you cannot generate your own. If 'showHash=true' is used on a POST then the optimisticLockKey will be shown as a part of the output (This helps to avoid the need to do a GET request).",
                    "type": "string",
                    "maxLength": 128,
                    "default": ""
                }
            },

            "additionalProperties": { "$ref": "#/definitions/Application" },
            "propertyNames": {
                "pattern": "^[A-Za-z][0-9A-Za-z_.-]*$",
                "maxLength": 190
            },
            "required": [ "class" ]
        },


        "Application_Shared": {
            "title": "Shared Application",
            "description": "Special application Shared holds objects other applications can share",
            "type": "object",

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "Application"
                },
                "template": {
                    "title": "Template Name",
                    "description": "Shared Application template is always generic",
                    "type": "string",
                    "const": "shared"
                },
                "enable": {
                    "title": "Enable",
                    "description": "If declared, you must enable the Shared Application",
                    "type": "boolean",
                    "const": true,
                    "default": true
                }
            },

            "allOf": [
                { "$ref": "#/definitions/Application" }
            ],

            "required": [ "class", "template" ]
        },


        "Application": {
            "title": "Application",
            "description": "Application declaration main schema",
            "type": "object",

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "Application"
                },
                "label": { "$ref": "#/definitions/Label" },
                "remark": { "$ref": "#/definitions/Remark" },

                "template": {
                    "title": "Template Name",
                    "description": "Each application type has certain required and default elements and selects appropriate setup of various ADC/Security features",
                    "type": "string",
                    "default": "generic"
                },
                "schemaOverlay": {
                    "title": "Schema Overlay",
                    "description": "BIG-IQ name for a supplemental validation schema is applied to the Application class definition before the main BIG-IP AS3 schema",
                    "type": "string"
                },
                "enable": {
                    "title": "Enable",
                    "description": "Application handles traffic only when enabled (default)",
                    "type": "boolean",
                    "default": true
                },
                "constants": { "$ref": "#/definitions/Constants" },
                "serviceMain": {
                    "description": "Primary service of the application"
                }
            },

            "additionalProperties": {
                "$comment": "Generated by schema build system"
            },

            "propertyNames": {
                "pattern": "^[A-Za-z]([0-9A-Za-z_.-]{0,188}[0-9A-Za-z_.])?$",
                "maxLength": 190
            },

            "allOf": [
                {
                    "if": {
                        "required": ["template"],
                        "properties": { "template": { "const": "https" } }
                    },
                    "then": { "$ref": "#/definitions/Template_https" }
                },
                {
                    "if": {
                        "required": ["template"],
                        "properties": { "template": { "const": "http" } }
                    },
                    "then": { "$ref": "#/definitions/Template_http" }
                },
                {
                    "if": {
                        "required": ["template"],
                        "properties": { "template": { "const": "tcp" } }
                    },
                    "then": { "$ref": "#/definitions/Template_tcp" }
                },
                {
                    "if": {
                        "required": ["template"],
                        "properties": { "template": { "const": "udp" } }
                    },
                    "then": { "$ref": "#/definitions/Template_udp" }
                },
                {
                    "if": {
                        "required": ["template"],
                        "properties": { "template": { "const": "sctp" } }
                    },
                    "then": { "$ref": "#/definitions/Template_sctp" }
                },
                {
                    "if": {
                        "required": ["template"],
                        "properties": { "template": { "const": "l4" } }
                    },
                    "then": { "$ref": "#/definitions/Template_l4" }
                },
                {
                    "if": {
                        "required": ["template"],
                        "properties": { "template": { "const": "generic" } }
                    },
                    "then": { "$ref": "#/definitions/Template_generic" }
                }
            ],

            "required": [ "class" ]
        },


        "Template_https": {
            "title": "HTTPS application",
            "description": "Declares an HTTPS application",
            "type": "object",
            "properties": {
                "serviceMain": { "$ref": "#/definitions/Service_HTTPS" }
            },
            "required": [ "serviceMain" ]
        },


        "Template_http": {
            "title": "HTTP application",
            "description": "Declares an HTTP application",
            "type": "object",
            "properties": {
                "serviceMain": { "$ref": "#/definitions/Service_HTTP" }
            },
            "required": [ "serviceMain" ]
        },


        "Template_tcp": {
            "title": "TCP application",
            "description": "Declares a TCP application",
            "type": "object",
            "properties": {
                "serviceMain": { "$ref": "#/definitions/Service_TCP" }
            },
            "required": [ "serviceMain" ]
        },


        "Template_udp": {
            "title": "UDP application",
            "description": "Declares a UDP application",
            "type": "object",
            "properties": {
                "serviceMain": { "$ref": "#/definitions/Service_UDP" }
            },
            "required": [ "serviceMain" ]
        },


        "Template_sctp": {
            "title": "SCTP application",
            "description": "Declares a SCTP application",
            "type": "object",
            "properties": {
                "serviceMain": { "$ref": "#/definitions/Service_SCTP" }
            },
            "required": [ "serviceMain" ]
        },


        "Template_l4": {
            "title": "L4 application",
            "description": "Declares a L4 application",
            "type": "object",
            "properties": {
                "serviceMain": { "$ref": "#/definitions/Service_L4" }
            },
            "required": [ "serviceMain" ]
        },


        "Template_generic": {
            "title": "Generic application",
            "description": "Declares a generic application",
            "type": "object",
            "properties": {
                "template": {
                    "title": "Template Name",
                    "description": "In addition to 'generic' and 'shared' other values may appear here for extensibility",
                    "type": "string"
                },
                "serviceMain": { "$ref": "#/definitions/Service_Generic" }
            }
        },


        "Service_HTTP": {
            "title": "Service_HTTP",
            "description": "HTTP virtual server",
            "type": "object",

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "Service_HTTP"
                },
                "virtualPort": {
                    "title": "Virtual server TCP port",
                    "description": "Default 80 is well-known HTTP port. Accepts either an integer or a reference to a Firewall_Port_List that contains the ports on which to listen. Firewall_Port_List is only supported on BIG-IP 14.1 and later. If a Firewall_Port_List is provided, BIG-IP AS3 will create a traffic-matching-criteria for the virtual.",
                    "oneOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Pointer_Port_List"
                                },
                                {
                                    "f5PostProcess": {
                                        "tag": "minVersion",
                                        "data": {
                                            "version": "14.1",
                                            "strict": true
                                        }
                                    }
                                }
                            ]
                        }
                    ],
                    "default": 80
                }
            },

            "allOf": [
                { "$ref": "#/definitions/Service_HTTP_Core" }
            ],

            "dependencies": {
                "serverTLS": { "not": {} },
                "profileConnectivity": {
                    "oneOf": [
                        {
                            "required": [
                                "profileAccess"
                            ]
                        },
                        {
                            "required": [
                                "policyIAM"
                            ]
                        }
                    ]
                },
                "policyPerRequestAccess": {
                    "oneOf": [
                        {
                            "required": [
                                "profileAccess"
                            ]
                        },
                        {
                            "required": [
                                "policyIAM"
                            ]
                        }
                    ]
                }
            },
            "required": [ "class" ]
        },


        "Service_HTTPS": {
            "title": "Service_HTTPS",
            "description": "HTTPS (HTTP+TLS) virtual server",
            "type": "object",

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "Service_HTTPS"
                },
                "virtualPort": {
                    "title": "Virtual server TCP port",
                    "description": "Default 443 is well-known HTTPS port. Accepts either an integer or a reference to a Firewall_Port_List that contains the ports on which to listen. Firewall_Port_List is only supported on BIG-IP 14.1 and later. If a Firewall_Port_List is provided, BIG-IP AS3 will create a traffic-matching-criteria for the virtual.",
                    "oneOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Pointer_Port_List"
                                },
                                {
                                    "f5PostProcess": {
                                        "tag": "minVersion",
                                        "data": {
                                            "version": "14.1",
                                            "strict": true
                                        }
                                    }
                                }
                            ]
                        }
                    ],
                    "default": 443
                },
                "redirect80": {
                    "title": "Redirect HTTP",
                    "description": "If true, BIG-IP AS3 redirects HTTP traffic to any virtualAddress on port 80 to virtualPort",
                    "type": "boolean",
                    "default": true
                },
                "profileHTTP2": {
                    "title": "HTTP/2 profile",
                    "type": ["string", "object"],
                    "description": "HTTP/2 profile; name of built-in or else BIG-IP AS3 pointer",
                    "oneOf": [
                        {
                            "type": "string",
                            "enum": [ "basic" ]
                        },
                        {
                            "$ref": "#/definitions/Pointer_HTTP2_Profile"
                        },
                        {
                            "type": "object",
                            "properties": {
                                "ingress": {
                                    "type": "object",
                                    "description": "Ingress (client-side context) HTTP2 profile. This property is available on BIGIP 14.1 and above.",
                                    "allOf": [
                                        {
                                            "$ref": "#/definitions/Pointer_HTTP2_Profile"
                                        }
                                    ]
                                },
                                "egress": {
                                    "type": "object",
                                    "description": "Egress (server-side context) HTTP2 profile. This property is available on BIGIP 14.1 and above.",
                                    "allOf": [
                                        {
                                            "$ref": "#/definitions/Pointer_HTTP2_Profile"
                                        }
                                    ]
                                }
                            },
                            "minProperties": 1,
                            "maxProperties": 1,
                            "additionalProperties": false
                        }
                    ]
                }
            },

            "allOf": [
                { "$ref": "#/definitions/Service_HTTP_Core" }
            ],

            "dependencies": {
                "serverTLS": {
                    "properties": { "serverTLS": { "minLength": 1 } }
                }
            },
            "required": [ "class", "serverTLS" ]
        },

        "Service_HTTP_Core": {
            "title": "HTTP VS core",
            "type": "object",
            "description": "Core attributes of HTTP(S) virtual server",

            "properties": {
                "persistenceMethods": {
                    "title": "Persistence methods",
                    "description": "Default 'cookie' is generally good. Use 'persistenceMethods: []' for no persistence.",
                    "type": "array",
                    "items": { "$ref": "#/definitions/Basic_Persist" },
                    "default": [ "cookie" ]
                },
                "profileAnalytics": {
                    "$ref": "#/definitions/Pointer_Analytics_Profile"
                },
                "profileAnalyticsTcp": {
                    "$ref": "#/definitions/Pointer_Analytics_TCP_Profile"
                },
                "profileHTTP": {
                    "title": "HTTP profile",
                    "description": "HTTP profile; name of built-in or else BIG-IP AS3 pointer",
                    "oneOf": [
                        {
                            "type": "string",
                            "enum": [ "basic" ]
                        },
                        {
                            "$ref": "#/definitions/Pointer_HTTP_Profile"
                        }
                    ],
                    "default": "basic"
                },
                "profileHTTPCompression": {
                    "title": "HTTP compression profile",
                    "description": "HTTP compression profile; name of built-in or else BIG-IP AS3 pointer",

                    "if": { "not": { "type": "object" } },
                    "then": {
                        "type": "string",
                        "enum": [ "basic", "wan" ]
                    },
                    "else": {
                        "type": "object",
                        "properties": {
                            "use": {
                                "title": "Use",
                                "description": "BIG-IP AS3 pointer to HTTP compression profile declaration",
                                "type": "string",
                                "minLength": 1,
                                "f5PostProcess": {
                                    "tag": "pointer",
                                    "data": {
                                        "properties": {
                                            "class": { "const": "HTTP_Compress" }
                                        },
                                        "required": [ "class" ]
                                    }
                                }
                            },
                            "bigip": {
                                "title": "BIG-IP HTTP compression profile",
                                "description": "Pathname of existing BIG-IP HTTP compression profile",
                                "type": "string",
                                "format": "f5bigip"
                            }
                        },
                        "additionalProperties": false,
                        "minProperties": 1,
                        "maxProperties": 1,
                        "f5PostProcess": {
                            "tag": "bigComponent",
                            "data": ["query ltm profile http-compression"]
                        }
                    }
                },
                "profileHTTPAcceleration": {
                    "title": "Web acceleration profile",
                    "description": "Web acceleration profile; name of built-in or else BIG-IP AS3 pointer",

                    "if": { "not": { "type": "object" } },
                    "then": {
                        "type": "string",
                        "enum": [ "basic" ]
                    },
                    "else": {
                        "$ref": "#/definitions/Pointer_HTTP_Acceleration_Profile"
                    }
                },
                "profileHTML": {
                    "$ref": "#/definitions/Pointer_HTML_Profile"
                },
                "profileMultiplex": {
                    "title": "Multiplex profile",
                    "description": "Multiplex (OneConnect) profile; name of built-in or else BIG-IP AS3 pointer",
                    "if": { "not": { "type": "object" } },
                    "then": {
                        "type": "string",
                        "enum": [ "basic" ]
                    },
                    "else": {
                        "$ref": "#/definitions/Pointer_Multiplex_Profile"
                    }
                },
                "profileNTLM": {
                    "$ref": "#/definitions/Pointer_NTLM_Profile"
                },
                "policyWAF": {
                    "$ref": "#/definitions/Pointer_WAF_Policy"
                },
                "policyIAM": {
                    "title": "IAM policy",
                    "description": "BIG-IP AS3 pointer to IAM (APM) policy declaration",
                    "allOf": [
                        {
                            "f5PostProcess": {
                                "tag": "modules",
                                "data": ["apm"]
                            }
                        },
                        {
                            "$ref": "#/definitions/Pointer_Access_Profile"
                        }
                    ]
                },
                "profileFPS": {
                    "description": "FPS Profile to attach to service",
                    "allOf": [
                        {
                            "f5PostProcess": {
                                "tag": "modules",
                                "data": ["fps"]
                            }
                        },
                        {
                            "$ref": "#/definitions/Pointer_FPS_Profile"
                        }
                    ]
                },
                "profileRequestAdapt": {
                    "$ref": "#/definitions/Pointer_Request_Adapt_Profile"
                },
                "profileResponseAdapt": {
                    "$ref": "#/definitions/Pointer_Response_Adapt_Profile"
                },
                "profileAccess": {
                    "title": "Access profile",
                    "allOf": [
                        {
                            "f5PostProcess": {
                                "tag": "modules",
                                "data": ["apm"]
                            }
                        },
                        { "$ref": "#/definitions/Pointer_Access_Profile" }
                    ]
                },
                "profileConnectivity": {
                    "title": "Connectivity profile",
                    "allOf": [
                        {
                            "f5PostProcess": {
                                "tag": "modules",
                                "data": ["apm"]
                            }
                        },
                        { "$ref": "#/definitions/Pointer_Connectivity_Profile" }
                    ]
                },
                "policyPerRequestAccess": {
                    "title": "Per Request Access Policy",
                    "allOf": [
                        {
                            "f5PostProcess": {
                                "tag": "modules",
                                "data": ["apm"]
                            }
                        },
                        { "$ref": "#/definitions/Pointer_Per_Request_Access_Policy" }
                    ]
                },
                "profileVdi": {
                    "title": "VDI profile",
                    "description": "VDI profile to attach to service.",
                    "allOf": [
                        {
                            "f5PostProcess": {
                                "tag": "modules",
                                "data": ["apm"]
                            }
                        },
                        { "$ref": "#/definitions/Pointer_VDI_Profile" }
                    ]
                },
                "profileApiProtection": {
                    "title": "API Protection Profile",
                    "description": "API protection profile to attach to service. This property is available on BIGIP 14.1 and above.",
                    "allOf": [
                        {
                            "f5PostProcess": {
                                "tag": "modules",
                                "data": ["apm", "asm"]
                            }
                        },
                        { "$ref": "#/definitions/Pointer_API_Protection_Profile" }
                    ]
                },
                "profileDOS": {
                    "$ref": "#/definitions/Pointer_DOS_Profile"
                },
                "profileBotDefense": {
                    "description": "Attaches a Bot Defense profile to the service. This property is available on BIGIP 14.1 and above.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/Pointer_Bot_Defense_Profile"
                        }
                    ]
                },
                "profileWebSocket": {
                    "description": "Attaches a WebSocket profile to the Service.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/Pointer_WebSocket_Profile"
                        }
                    ]
                }
            },

            "allOf": [
                {
                    "if" : {
                        "properties" : {
                            "policyIAM": {}
                        },
                        "required": [ "policyIAM" ]
                    },
                    "then": {
                        "not": {
                            "properties": {
                                "profileAccess": {}
                            },
                            "required": [ "profileAccess" ]
                        }
                    }
                },
                { "$ref": "#/definitions/Service_TCP_Core" }
            ],

            "required": [ "class" ]
        },


        "Service_TCP": {
            "title": "Service_TCP",
            "description": "Declares a TCP virtual server (w/optional TLS)",
            "type": "object",

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "Service_TCP"
                },
                "mqttEnabled": {
                    "title": "MQTT profile",
                    "description": "Attaches the MQTT profile /Common/mqtt.  MQTT profiles have no configurable properties.",
                    "type": "boolean",
                    "default": false
                },
                "persistenceMethods": {
                    "title": "Persistence methods",
                    "description": "Default 'source-address' is generally good. Use 'persistenceMethods: []' for no persistence.",
                    "type": "array",
                    "items": { "$ref": "#/definitions/Basic_Persist" },
                    "default": [ "source-address" ]
                },
                "profileSIP": {
                    "$ref": "#/definitions/Pointer_SIP_Profile"
                },
                "profileFTP": {
                    "$ref": "#/definitions/Pointer_FTP_Profile"
                },
                "profileILX": {
                    "$ref": "#/definitions/Pointer_ILX_Profile"
                },
                "profilePPTP": {
                    "$ref": "#/definitions/Pointer_PPTP_Profile"
                },
                "profileRTSP": {
                    "$ref": "#/definitions/Pointer_RTSP_Profile"
                },
                "profileSOCKS": {
                    "$ref": "#/definitions/Pointer_SOCKS_Profile"
                },
                "profileICAP": {
                    "$ref": "#/definitions/Pointer_ICAP_Profile"
                }
            },

            "allOf": [
                { "$ref": "#/definitions/Service_TCP_Core" }
            ],
            "required": [ "class" ],
            "if": {
                "not": {
                    "properties": {
                        "virtualType": { "const": "internal" }
                    }
                }
            },
            "then": {
                "required": [ "virtualPort" ],
                "not": {
                    "required": [ "profileICAP" ]
                }
            }
        },


        "Service_TCP_Core": {
            "title": "Service_TCP core",
            "description": "Core attributes of TCP virtual server",
            "type": "object",

            "properties": {
                "virtualType": {
                    "title": "Virtual addresses",
                    "description": "Type of the virtual",
                    "type": "string",
                    "enum": [ "standard", "internal" ],
                    "default": "standard"
                },
                "virtualPort": {
                    "title": "virtual server TCP port",
                    "description": "Accepts either an integer or a reference to a Firewall_Port_List that contains the ports on which to listen. Firewall_Port_List is only supported on BIG-IP 14.1 and later. If a Firewall_Port_List is provided, BIG-IP AS3 will create a traffic-matching-criteria for the virtual.",
                    "oneOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Pointer_Port_List"
                                },
                                {
                                    "f5PostProcess": {
                                        "tag": "minVersion",
                                        "data": {
                                            "version": "14.1",
                                            "strict": true
                                        }
                                    }
                                }
                            ]
                        }
                    ],
                    "minimum": 0,
                    "maximum": 65535
                },
                "layer4": {
                    "title": "L4 protocol",
                    "description": "For TCP virtual server, Layer 4 protocol must be TCP",
                    "type": "string",
                    "const": "tcp",
                    "default": "tcp"
                },
                "profileFIX": {
                    "$ref": "#/definitions/Pointer_FIX_Profile"
                },
                "profileTCP": {
                    "title": "TCP profile",
                    "description": "TCP profile; name of built-in or else BIG-IP AS3 pointer",

                    "if": { "not": { "type": "object" } },
                    "then": {
                        "type": "string",
                        "enum": [ "normal", "lan", "wan", "mobile" ]
                    },
                    "else": {
                        "type": "object",
                        "properties": {
                            "use": {
                                "title": "Use",
                                "description": "BIG-IP AS3 pointer to TCP profile declaration for ingress and egress",
                                "type": "string",
                                "minLength": 1,
                                "f5PostProcess": {
                                    "tag": "pointer",
                                    "data": {
                                        "properties": {
                                            "class": { "const": "TCP_Profile" }
                                        },
                                        "required": [ "class" ]
                                    }
                                }
                            },
                            "bigip": {
                                "title": "BIG-IP TCP profile",
                                "description": "Pathname of existing BIG-IP TCP profile for both ingress and egress",
                                "type": "string",
                                "format": "f5bigip"
                            },
                            "ingress": {
                                "title": "Ingress profile",
                                "description": "Ingress (client-side context) TCP profile",
                                "if": { "not": { "type": "object" } },
                                "then": {
                                    "type": "string",
                                    "enum": [ "normal", "lan", "wan", "mobile" ],
                                    "default": "normal"
                                },
                                "else": {
                                    "type": "object",
                                    "properties": {
                                        "use": {
                                            "title": "Use",
                                            "description": "BIG-IP AS3 pointer to TCP profile declaration for incoming connections",
                                            "type": "string",
                                            "minLength": 1,
                                            "f5PostProcess": {
                                                "tag": "pointer",
                                                "data": {
                                                    "properties": {
                                                        "class": { "const": "TCP_Profile" }
                                                    },
                                                    "required": [ "class" ]
                                                }
                                            }
                                        },
                                        "bigip": {
                                            "title": "BIG-IP TCP profile",
                                            "description": "Pathname of existing BIG-IP TCP profile in client-side context",
                                            "type": "string",
                                            "format": "f5bigip"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "minProperties": 1,
                                    "maxProperties": 1
                                }
                            },
                            "egress": {
                                "title": "Egress TCP profile",
                                "description": "Egress (server-side context) TCP profile",
                                "if": { "not": { "type": "object" } },
                                "then": {
                                    "type": "string",
                                    "enum": [ "normal", "lan", "wan", "mobile" ],
                                    "default": "normal"
                                },
                                "else": {
                                    "type": "object",
                                    "properties": {
                                        "use": {
                                            "title": "Use",
                                            "description": "BIG-IP AS3 pointer to TCP profile declaration for outgoing connections",
                                            "type": "string",
                                            "minLength": 1,
                                            "f5PostProcess": {
                                                "tag": "pointer",
                                                "data": {
                                                    "properties": {
                                                        "class": { "const": "TCP_Profile" }
                                                    },
                                                    "required": [ "class" ]
                                                }
                                            }
                                        },
                                        "bigip": {
                                            "title": "BIG-IP server-side TCP profile",
                                            "description": "Pathname of existing BIG-IP TCP profile in server-side context",
                                            "type": "string",
                                            "format": "f5bigip"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "minProperties": 1,
                                    "maxProperties": 1
                                }
                            }
                        },
                        "additionalProperties": false,
                        "dependencies": {
                            "use":     { "minProperties": 1, "maxProperties": 1 },
                            "bigip":   { "minProperties": 1, "maxProperties": 1 },
                            "ingress": { "minProperties": 2, "maxProperties": 2 },
                            "egress":  { "minProperties": 2, "maxProperties": 2 }
                        },
                        "f5PostProcess": {
                            "tag": "bigComponent",
                            "data": ["query ltm profile tcp"]
                        }
                    },

                    "default": "normal"
                },
                "profileAnalyticsTcp": {
                    "$ref": "#/definitions/Pointer_Analytics_TCP_Profile"
                },
                "profileSSHProxy": {
                    "$ref": "#/definitions/Pointer_SSH_Proxy_Profile"
                },
                "serverTLS": {
                    "title": "TLS server",
                    "description": "BIG-IP AS3 pointer to TLS Server declaration",

                    "if": { "type": "string" },
                    "then": {
                        "minLength": 1,
                        "f5PostProcess": {
                            "tag": "pointer",
                            "data": {
                                "properties": {
                                    "class": { "const": "TLS_Server" }
                                },
                                "required": [ "class" ]
                            }
                        }
                    },
                    "else": {
                        "if": { "type": "object" },
                        "then": { "$ref": "#/definitions/Pointer_Existing_TLS_Server_Profile" },
                        "else": {
                            "type": "array",
                            "items": { "$ref": "#/definitions/Pointer_Existing_TLS_Server_Profile" }
                        }
                    }
                },
                "clientTLS": {
                    "title": "TLS client",
                    "description": "BIG-IP AS3 pointer to TLS Client declaration",

                    "if": { "type": "string" },
                    "then": {
                        "minLength": 1,
                        "f5PostProcess": {
                            "tag": "pointer",
                            "data": {
                                "properties": {
                                    "class": { "const": "TLS_Client" }
                                },
                                "required": [ "class" ]
                            }
                        }
                    },
                    "else": {
                        "if": { "type": "object" },
                        "then": { "$ref": "#/definitions/Pointer_Existing_TLS_Client_Profile" },
                        "else": {
                            "type": "array",
                            "items": { "$ref": "#/definitions/Pointer_Existing_TLS_Client_Profile" }
                        }
                    }
                },
                "policyEndpoint": {
                    "title": "Endpoint policy",
                    "description": "BIG-IP AS3 pointer to Endpoint policy declaration",

                    "if": { "type": "array" },
                    "then": {
                        "items": { "$ref": "#/definitions/Pointer_Endpoint_Policy" }
                    },
                    "else": {
                        "$ref": "#/definitions/Pointer_Endpoint_Policy"
                    }
                },
                "profileStream": {
                    "$ref": "#/definitions/Pointer_Stream_Profile"
                }
            },

            "allOf": [
                { "$ref": "#/definitions/Service_Core" }
            ]
        },


        "Service_UDP": {
            "title": "Service_UDP",
            "description": "Declares a UDP virtual server (w/optional (D)TLS)",
            "type": "object",

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "Service_UDP"
                },

                "persistenceMethods": {
                    "title": "Persistence methods",
                    "description": "Default 'source-address' is generally good. Use 'persistenceMethods: []' for no persistence.",
                    "type": "array",
                    "items": { "$ref": "#/definitions/Basic_Persist" },
                    "default": [ "source-address" ]
                }
            },

            "allOf": [
                { "$ref": "#/definitions/Service_UDP_Core" }
            ],
            "required": [ "class" ],

            "if": {
                "not": {
                    "properties": {
                        "virtualType": { "const": "internal" }
                    }
                }
            },
            "then": {
                "required": [ "virtualPort" ]
            },

            "dependencies": {
                "virtualType": {
                    "if": { "properties": { "virtualType": { "const": "stateless" } } },
                    "then": {
                        "properties" : {
                            "translateClientPort": { "const": false },
                            "translateServerPort": { "const": false }
                        },
                        "required": [ "pool" ]
                    }
                }
            }
        },


        "Service_UDP_Core": {
            "title": "Service_UDP core",
            "description": "Core attributes of UDP virtual server",
            "type": "object",

            "properties": {
                "virtualType": {
                    "title": "Virtual addresses",
                    "description": "Type of the virtual",
                    "type": "string",
                    "enum": [ "standard", "internal", "stateless" ],
                    "default": "standard"
                },
                "virtualPort": {
                    "title": "Virtual server UDP port",
                    "description": "Accepts either an integer or a reference to a Firewall_Port_List that contains the ports on which to listen. Firewall_Port_List is only supported on BIG-IP 14.1 and later. If a Firewall_Port_List is provided, BIG-IP AS3 will create a traffic-matching-criteria for the virtual.",
                    "oneOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Pointer_Port_List"
                                },
                                {
                                    "f5PostProcess": {
                                        "tag": "minVersion",
                                        "data": {
                                            "version": "14.1",
                                            "strict": true
                                        }
                                    }
                                }
                            ]
                        }
                    ],
                    "minimum": 0,
                    "maximum": 65535
                },
                "layer4": {
                    "title": "L4 protocol",
                    "description": "For UDP virtual server, Layer 4 protocol must be UDP",
                    "type": "string",
                    "const": "udp",
                    "default": "udp"
                },
                "profileUDP": {
                    "title": "UDP profile",
                    "description": "UDP profile; name of built-in or else BIG-IP AS3 pointer",

                    "if": { "not": { "type": "object" } },
                    "then": {
                        "type": "string",
                        "enum": [ "normal" ]
                    },
                    "else": {
                        "properties": {
                            "use": {
                                "title": "Use",
                                "description": "BIG-IP AS3 pointer to UDP profile declaration",
                                "type": "string",
                                "minLength": 1,
                                "f5PostProcess": {
                                    "tag": "pointer",
                                    "data": {
                                        "properties": {
                                            "class": { "const": "UDP_Profile" }
                                        },
                                        "required": [ "class" ]
                                    }
                                }
                            },
                            "bigip": {
                                "title": "BIG-IP UDP profile",
                                "description": "Pathname of existing BIG-IP UDP profile",
                                "type": "string",
                                "format": "f5bigip"
                            }
                        },
                        "additionalProperties": false,
                        "minProperties": 1,
                        "maxProperties": 1,
                        "f5PostProcess": {
                            "tag": "bigComponent",
                            "data": ["query ltm profile udp"]
                        }
                    },

                    "default": "normal"
                },
                "serverTLS": {
                    "title": "TLS server",
                    "description": "BIG-IP AS3 pointer to TLS Server declaration",

                    "if": { "type": "string" },
                    "then": {
                        "minLength": 1,
                        "f5PostProcess": {
                            "tag": "pointer",
                            "data": {
                                "properties": {
                                    "class": { "const": "TLS_Server" }
                                },
                                "required": [ "class" ]
                            }
                        }
                    },
                    "else": {
                        "if": { "type": "object" },
                        "then": { "$ref": "#/definitions/Pointer_Existing_TLS_Server_Profile" },
                        "else": {
                            "type": "array",
                            "items": { "$ref": "#/definitions/Pointer_Existing_TLS_Server_Profile" }
                        }
                    }
                },
                "clientTLS": {
                    "title": "TLS client",
                    "description": "BIG-IP AS3 pointer to TLS Client declaration",
                    "if": { "type": "string" },
                    "then": {
                        "minLength": 1,
                        "f5PostProcess": {
                            "tag": "pointer",
                            "data": {
                                "properties": {
                                    "class": { "const": "TLS_Client" }
                                },
                                "required": [ "class" ]
                            }
                        }
                    },
                    "else": {
                        "if": { "type": "object" },
                        "then": { "$ref": "#/definitions/Pointer_Existing_TLS_Client_Profile" },
                        "else": {
                            "type": "array",
                            "items": { "$ref": "#/definitions/Pointer_Existing_TLS_Client_Profile" }
                        }
                    }
                },
                "policyEndpoint": {
                    "title": "Endpoint policy",
                    "description": "BIG-IP AS3 pointer to Endpoint policy declaration",

                    "if": { "type": "array" },
                    "then": {
                        "items": { "$ref": "#/definitions/Pointer_Endpoint_Policy" }
                    },
                    "else": {
                        "$ref": "#/definitions/Pointer_Endpoint_Policy"
                    }
                },
                "profileRADIUS": {
                    "$ref": "#/definitions/Pointer_Radius_Profile"
                },
                "profileSIP": {
                    "$ref": "#/definitions/Pointer_SIP_Profile"
                },
                "profileTFTP": {
                    "$ref": "#/definitions/Pointer_TFTP_Profile"
                }
            },

            "allOf": [
                { "$ref": "#/definitions/Service_Core" }
            ]
        },

        "Service_SCTP": {
            "title": "Service_SCTP",
            "description": "Declares a SCTP virtual server",
            "type": "object",
            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "Service_SCTP"
                },
                "virtualPort": {
                    "title": "virtual server SCTP port",
                    "description": "Accepts either an integer or a reference to a Firewall_Port_List that contains the ports on which to listen. Firewall_Port_List is only supported on BIG-IP 14.1 and later. If a Firewall_Port_List is provided, BIG-IP AS3 will create a traffic-matching-criteria for the virtual.",
                    "oneOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Pointer_Port_List"
                                },
                                {
                                    "f5PostProcess": {
                                        "tag": "minVersion",
                                        "data": {
                                            "version": "14.1",
                                            "strict": true
                                        }
                                    }
                                }
                            ]
                        }
                    ],
                    "minimum": 0,
                    "maximum": 65535
                },
                "profileSCTP": {
                    "$ref": "#/definitions/Pointer_SCTP_Profile"
                },
                "layer4": {
                    "title": "L4 protocol",
                    "description": "For SCTP virtual server, Layer 4 protocol must be SCTP",
                    "type": "string",
                    "const": "sctp",
                    "default": "sctp"
                }
            },

            "allOf": [
                { "$ref": "#/definitions/Service_Core" }
            ],

            "required": [ "class", "virtualPort"]
        },


        "Service_L4": {
            "title": "Service_L4",
            "description": "Declares a L4 (FastL4) virtual server",
            "type": "object",

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "Service_L4"
                },

                "persistenceMethods": {
                    "title": "Persistence methods",
                    "description": "Default 'source-address' is generally good. Use 'persistenceMethods: []' for no persistence.",
                    "type": "array",
                    "items": { "$ref": "#/definitions/Basic_Persist" },
                    "default": [ "source-address" ]
                }
            },

            "allOf": [
                { "$ref": "#/definitions/Service_L4_Core" }
            ],
            "required": [ "class", "virtualPort" ],
            "not": { "required": [ "profileTrafficLog" ] }
        },


        "Service_Generic": {
            "title": "Service_Generic",
            "description": "Declares an 'Any IP' (IPOther) virtual server",
            "type": "object",

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "Service_Generic"
                },
                "layer4": {
                    "title": "L4 protocol",
                    "description": "The L4 protocol type for this virtual server",
                    "type": "string",
                    "default": "any"
                },
                "profileIPOther": {
                    "allOf": [
                        { "$ref": "#/definitions/Pointer_IP_Other_Profile" }
                    ],
                    "default": {
                        "bigip": "/Common/ipother"
                    }
                }
            },

            "allOf": [
                { "$ref": "#/definitions/Service_L4_Core" }
            ],
            "required": [ "class" ]
        },


        "Service_L4_Core": {
            "title": "Service_L4 core",
            "description": "Core attributes of L4 virtual server",
            "type": "object",

            "properties": {
                "virtualPort": {
                    "title": "virtual server TCP port",
                    "description": "Accepts either an integer or a reference to a Firewall_Port_List that contains the ports on which to listen. Firewall_Port_List is only supported on BIG-IP 14.1 and later. If a Firewall_Port_List is provided, BIG-IP AS3 will create a traffic-matching-criteria for the virtual.",
                    "oneOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Pointer_Port_List"
                                },
                                {
                                    "f5PostProcess": {
                                        "tag": "minVersion",
                                        "data": {
                                            "version": "14.1",
                                            "strict": true
                                        }
                                    }
                                }
                            ]
                        }
                    ],
                    "minimum": 0,
                    "maximum": 65535
                },
                "layer4": {
                    "title": "L4 protocol",
                    "description": "The L4 protocol type for this virtual server",
                    "type": "string",
                    "enum": ["any","tcp","udp","3pc","a/n","ah","argus","aris","ax.25",
                            "bbn-rcc","bna","br-sat-mon","cbt","cftp","chaos","compaq-peer","cphb","cpnx",
                            "crdup","crtp","dccp","dcn","ddp","ddx","dgp","dsr","egp",
                            "eigrp","emcon","encap","esp","etherip","fc","fire","ggp","gmtp",
                            "gre","hip","hmp","hopopt","i-nlsp","iatp","icmp","idpr","idpr-cmtp",
                            "idrp","ifmp","igmp","igp","il","ip","ipcomp","ipcv","ipencap",
                            "ipip","iplt","ippc","ipv6","ipv6-auth","ipv6-crypt","ipv6-frag","ipv6-icmp","ipv6-nonxt",
                            "ipv6-opts","ipv6-route","ipx-in-ip","irtp","isis","iso-ip","iso-tp4","kryptolan","l2tp",
                            "larp","leaf-1","leaf-2","manet","merit-inp","mfe-nsp","micp","mobile","mpls-in-ip",
                            "mtp","mux","narp","netblt","nsfnet-igp","nvp","ospf","pgm","pim",
                            "pipe","pnni","prm","ptp","pup","pvp","qnx","rdp","rsvp",
                            "rsvp-e2e-ignore","rvd","sat-expak","sat-mon","scc-sp","scps","sctp","sdrp","secure-vmtp",
                            "shim6","skip","sm","smp","snp","sprite-rpc","sps","srp","sscopmce",
                            "st","stp","sun-nd","swipe","tcf","tlsp","tp++","trunk-1","trunk-2",
                            "ttp","udplite","uti","vines","visa","vmtp","vrrp","wb-expak","wb-mon",
                            "wesp", "wsn", "xnet", "xns-idp", "xtp"],
                    "default": "tcp"
                },
                "profileFIX": {
                    "$ref": "#/definitions/Pointer_FIX_Profile"
                },
                "profileL4": {
                    "title": "L4 profile",
                    "description": "L4 profile; name of built-in or else BIG-IP AS3 pointer",

                    "if": { "not": { "type": "object" } },
                    "then": {
                        "type": "string",
                        "enum": [ "basic" ]
                    },
                    "else": {
                        "$ref": "#/definitions/Pointer_L4_Profile"
                    },

                    "default": "basic"
                },
                "profileAnalyticsTcp": {
                    "$ref": "#/definitions/Pointer_Analytics_TCP_Profile"
                }
            },

            "allOf": [
                { "$ref": "#/definitions/Service_Core" }
            ]
        },

        "Service_Forwarding": {
            "title": "Service_Forwarding",
            "description": "Attributes of a forwarding virtual server. ARP and ICMP Echo will be disabled on virtualAddresses by default.",
            "type": "object",

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "Service_Forwarding"
                },

                "forwardingType": {
                    "title": "Forwarding Type",
                    "description": "Controls whether the forwarding service uses IP or L2 forwarding",
                    "type": "string",
                    "enum": [ "ip", "l2" ]
                },
                "layer4": {
                    "title": "L4 protocol",
                    "description": "Layer 4 protocol",
                    "type": "string",
                    "default": "any"
                },
                "profileL4": {
                    "title": "L4 profile",
                    "description": "L4 profile; name of built-in or else BIG-IP AS3 pointer",

                    "if": { "not": { "type": "object" } },
                    "then": {
                        "type": "string",
                        "enum": [ "basic" ]
                    },
                    "else": {
                        "$ref": "#/definitions/Pointer_L4_Profile"
                    }
                }
            },

            "allOf": [
                {
                    "if": {
                        "properties": {
                            "forwardingType": {
                                "const": "ip"
                            }
                        }
                    },
                    "then": {
                        "properties": {
                            "translateServerPort": {
                                "type": "boolean",
                                "default": false,
                                "const": false
                            },
                            "translateServerAddress": {
                                "type": "boolean",
                                "default": false,
                                "const": false
                            }
                        }
                    }
                },
                {
                    "$ref": "#/definitions/Service_Core"
                }
            ],
            "required": ["class", "forwardingType"],
            "not": {
                "anyOf": [
                    { "required": ["fallbackPersistenceMethod"] },
                    { "required": ["persistenceMethods"] },
                    { "required": ["pool"] },
                    { "required": ["profileBotDefense"] },
                    { "required": ["profileDiameterEndpoint"] },
                    { "required": ["profileDNS"] },
                    { "required": ["profileIPOther"] },
                    { "required": ["profileProtocolInspection"] },
                    { "required": ["profileRewrite"] },
                    { "required": ["profileTrafficLog"] },
                    { "required": ["sourceAddress"] }
                ]
            }
        },

        "Service_Core": {
            "title": "Virtual-server core",
            "description": "Core attributes of a virtual server",
            "type": "object",

            "properties": {
                "label": { "$ref": "#/definitions/Label" },
                "remark": { "$ref": "#/definitions/Remark" },

                "virtualAddresses": {
                    "title": "Virtual addresses",
                    "description": "Accepts either an array or a reference to an Address_List which contains destination addresses to which this virtual will listen. To accept connections only from certain subnet(s), replace IP address in the provided array with array [IP-address, accept-from-subnet]. If you do this, you cannot also include the sourceAddress property. IP address in the provided array can also be replaced by a reference to a Service_Address. A reference to an Address_List is only supported on BIG-IP 14.1 and later. If an Address_List is provided, BIG-IP AS3 will create a traffic-matching-criteria for the virtual.",
                    "oneOf": [
                        {
                            "type": "array",
                            "f5PostProcess": {
                                "tag": "virtualAddress"
                            },
                            "items": {
                                "if": { "type": "string" },
                                "then": { "format": "f5ip" },
                                "else": {
                                    "if": { "type": "array" },
                                    "then": {
                                        "type": "array",
                                        "items": {
                                            "title": "Virtual address",
                                            "if": { "type": "string" },
                                            "then": { "format": "f5ip" },
                                            "else": {
                                                "$ref": "#/definitions/Pointer_Service_Address"
                                            }
                                        },
                                        "minItems": 2,
                                        "maxItems": 2,
                                        "uniqueItems": true
                                    },
                                    "else": {
                                        "$ref": "#/definitions/Pointer_Service_Address"
                                    }
                                }
                            },
                            "minItems": 1,
                            "uniqueItems": true
                        },
                        {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Pointer_Address_List"
                                },
                                {
                                    "f5PostProcess": {
                                        "tag": "minVersion",
                                        "data": {
                                            "version": "14.1",
                                            "strict": true
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                },
                "serviceDownImmediateAction": {
                    "title": "Service Down Immediate Action",
                    "description": "Specifies the immediate action the BIG-IP system should respond with upon the receipt of the initial client's SYN packet if the availability status of the virtual server is Offline or Unavailable. This is supported for the virtual server of Standard type and TCP protocol. The default value is none.",
                    "type": "string",
                    "enum": [
                        "none",
                        "drop",
                        "reset"
                    ],
                    "default": "none"
                },
                "shareAddresses": {
                    "title": "Share addresses",
                    "description": "A user set boolean that indicates whether the virtualAddresses should be added to or checked for /Common instead of the tenant. This value defaults to false, and so will put the virtualAddresses into their tenant.",
                    "type": "boolean",
                    "default": false
                },
                "sourceAddress": {
                    "title": "Source address",
                    "description": "Accepts either a string or a reference to an Address_List which contains source addresses from which this virtual will listen. A reference to an Address_List is only supported on BIG-IP 14.1 and later. If an Address_List is provided, BIG-IP AS3 will create a traffic-matching-criteria for the virtual. If you also include the virtualAddresses property, those addresses cannot include the accept-from-subnet field.",
                    "oneOf": [
                        {
                            "type": "string",
                            "format": "f5ip"
                        },
                        {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Pointer_Address_List"
                                },
                                {
                                    "f5PostProcess": {
                                        "tag": "minVersion",
                                        "data": {
                                            "version": "14.1",
                                            "strict": true
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                },
                "enable": {
                    "title": "Enable",
                    "description": "Virtual server handles traffic only when enabled (default)",
                    "type": "boolean",
                    "default": true
                },
                "maxConnections": {
                    "title": "Maximum connections",
                    "description": "Specifies the maximum number of concurrent connections you want to allow for the virtual server",
                    "type": "integer",
                    "minimum": 0,
                    "default": 0
                },
                "snat": {
                    "title": "SNAT",
                    "description": "Name of built-in SNAT method or BIG-IP AS3 pointer to SNAT pool. If 'self', the system uses the virtual-server address as SNAT address",

                    "if": { "not": { "type": "object" } },
                    "then": {
                        "type": "string",
                        "enum": [ "none", "self", "auto" ]
                    },
                    "else": {
                        "type": "object",
                        "properties": {
                            "use": {
                                "title": "Use",
                                "description": "BIG-IP AS3 pointer to SNAT pool declaration",
                                "type": "string",
                                "minLength": 1,
                                "f5PostProcess": {
                                    "tag": "pointer",
                                    "data": {
                                        "properties": {
                                            "class": { "const": "SNAT_Pool" }
                                        },
                                        "required": [ "class" ]
                                    }
                                }
                            },
                            "bigip": {
                                "title": "BIG-IP SNAT pool",
                                "description": "Pathname of existing BIG-IP SNAT pool",
                                "type": "string",
                                "format": "f5bigip"
                            }
                        },
                        "additionalProperties": false,
                        "minProperties": 1,
                        "maxProperties": 1,
                        "f5PostProcess": {
                            "tag": "bigComponent",
                            "data": ["query ltm snatpool"]
                        }
                    },
                    "default": "auto"
                },
                "iRules": {
                    "title": "iRules",
                    "description": "List iRules for this virtual server (order is significant)",
                    "type": "array",
                    "items": {
                        "title": "iRule",
                        "description": "BIG-IP AS3 pointer to iRule (declared separately)",
                        "if": { "type": "string" },
                        "then": {
                            "minLength": 1,
                            "f5PostProcess": {
                                "tag": "pointer",
                                "data": {
                                    "properties": {
                                        "class": { "const": "iRule" }
                                    },
                                    "required": [ "class" ]
                                }
                            }
                        },
                        "else": {
                            "type": "object",
                            "properties": {
                                "bigip": {
                                    "title": "BIG-IP iRule",
                                    "description": "Pathname of existing BIG-IP iRule",
                                    "type": "string",
                                    "format": "f5bigip"
                                },
                                "use": {
                                    "title": "Use",
                                    "description": "BIG-IP AS3 pointer to iRule (declared separately)",
                                    "type": "string",
                                    "minLength": 1,
                                    "f5PostProcess": {
                                        "tag": "pointer",
                                        "data": {
                                            "properties": {
                                                "class": { "const": "iRule" }
                                            },
                                            "required": [
                                                "class"
                                            ]
                                        }
                                    }
                                }
                            },
                            "additionalProperties": false,
                            "minProperties": 1,
                            "maxProperties": 1,
                            "f5PostProcess": {
                                "tag": "bigComponent",
                                "data": ["query ltm rule"]
                            }
                        }
                    },
                    "$comment": "uniqueItems: true"
                },
                "pool": {
                    "title": "Pool",
                    "description": "BIG-IP AS3 pointer to pool if any (declared separately)",
                    "if": { "type": "string" },
                    "then": {
                        "f5PostProcess": {
                            "tag": "pointer",
                            "data": {
                                "properties": {
                                    "class": { "const": "Pool" }
                                },
                                "required": [ "class" ]
                            }
                        }
                    },
                    "else": {
                        "type": "object",
                        "properties": {
                            "bigip": {
                                "title": "BIG-IP pool",
                                "description": "Pathname of existing BIG-IP pool",
                                "type": "string",
                                "format": "f5bigip"
                            },
                            "use": {
                                "title": "Use",
                                "description": "BIG-IP AS3 pointer to pool if any (declared separately)",
                                "type": "string",
                                "minLength": 1,
                                "f5PostProcess": {
                                    "tag": "pointer",
                                    "data": {
                                        "properties": {
                                            "class": {
                                                "const": "Pool"
                                            }
                                        },
                                        "required": [
                                            "class"
                                        ]
                                    }
                                }
                            }
                        },
                        "additionalProperties": false,
                        "minProperties": 1,
                        "maxProperties": 1,
                        "f5PostProcess": {
                            "tag": "bigComponent",
                            "data": ["query ltm pool"]
                        }
                    }
                },
                "addressStatus": {
                    "title": "Address status",
                    "description": "Specifies whether the virtual server will contribute to the operational status of the associated virtual address",
                    "type": "boolean",
                    "default": true
                },
                "mirroring": {
                    "title": "Mirroring",
                    "description": "Controls connection-mirroring for high-availability",
                    "type": "string",
                    "enum": [ "none", "L4" ],
                    "default": "none"
                },

                "policyBandwidthControl": {
                    "title": "Bandwidth Control Policy",
                    "description": "BIG-IP AS3 pointer to Bandwidth Control Policy (policy must be static)",
                    "allOf": [
                        { "$ref": "#/definitions/Pointer_Bandwidth_Control_Policy" }
                    ]
                },
                "policyFirewallEnforced": {
                    "title": "Firewall policy (enforced)",
                    "allOf": [
                        {
                            "f5PostProcess": {
                                "tag": "modules",
                                "data": ["afm"]
                            }
                        },
                        { "$ref": "#/definitions/Pointer_Firewall_Policy" }
                    ]
                },
                "policyFirewallStaged": {
                    "title": "Firewall policy (staged)",
                    "allOf": [
                        {
                            "f5PostProcess": {
                                "tag": "modules",
                                "data": ["afm"]
                            }
                        },
                        { "$ref": "#/definitions/Pointer_Firewall_Policy" }
                    ]
                },
                "policyNAT": {
                    "description": "BIG-IP AS3 pointer to NAT policy declaration",
                    "type": "object",
                    "properties": {
                        "bigip": {
                            "title": "BIG-IP NAT policy",
                            "description": "Pathname of existing BIG-IP NAT policy",
                            "type": "string",
                            "format": "f5bigip"
                        },
                        "use": {
                            "title": "Use",
                            "description": "BIG-IP AS3 pointer to NAT policy declaration",
                            "type": "string",
                            "minLength": 1,
                            "f5PostProcess": {
                                "tag": "pointer",
                                "data": {
                                    "properties": {
                                        "class": { "const": "NAT_Policy" }
                                    },
                                    "required": [ "class" ]
                                }
                            }
                        }
                    },
                    "additionalProperties": false,
                    "minProperties": 1,
                    "maxProperties": 1,
                    "allOf": [
                        {
                            "f5PostProcess": {
                                "tag": "modules",
                                "data": ["afm"]
                            }
                        },
                        {
                            "f5PostProcess": {
                                "tag": "bigComponent",
                                "data": ["query security nat policy"]
                            }
                        }
                    ]
                },
                "policyIdleTimeout": { "$ref": "#/definitions/Pointer_Idle_Timeout_Policy" },
                "lastHop": {
                    "title": "Last hop",
                    "description": "Name of built-in last-hop method or BIG-IP AS3 pointer to last-hop pool (default 'default' means use system setting)",

                    "if": { "not": { "type": "object" } },
                    "then": {
                        "type": "string",
                        "enum": [ "default", "auto", "disable" ]
                    },
                    "else": {
                        "type": "object",
                        "properties": {
                            "use": {
                                "title": "Use",
                                "description": "BIG-IP AS3 pointer to last-hop pool declaration",
                                "type": "string",
                                "minLength": 1,
                                "f5PostProcess": {
                                    "tag": "pointer",
                                    "data": {
                                        "properties": {
                                            "class": { "const": "Pool" }
                                        },
                                        "required": [ "class" ]
                                    }
                                }
                            },
                            "bigip": {
                                "title": "BIG-IP last-hop pool",
                                "description": "Pathname of existing BIG-IP pool",
                                "type": "string",
                                "format": "f5bigip"
                            }
                        },
                        "additionalProperties": false,
                        "minProperties": 1,
                        "maxProperties": 1,
                        "f5PostProcess": {
                            "tag": "bigComponent",
                            "data": ["query ltm pool"]
                        }
                    },

                    "default": "default"
                },

                "translateClientPort": {
                    "title": "Translate client port",
                    "description": "If true, hide client's port number from server.  A value of true is the same as the string 'change' while a value of false is the same as the string 'preserve'.  The value 'preserve-strict' is the only other allowed value for a string",
                    "type": [ "boolean", "string" ],
                    "default": false,
                    "oneOf": [
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "string",
                            "enum": [ "change", "preserve", "preserve-strict" ]
                        }
                    ]
                },
                "translateServerAddress": {
                    "title": "Translate server address",
                    "description": "If true (default), make server-side connection to server address (otherwise, treat server as gateway to virtual-server address)",
                    "type": "boolean",
                    "default": true
                },
                "translateServerPort": {
                    "title": "Translate server port",
                    "description": "If true (default), make server-side connection to server port (otherwise, connect to server on virtual-server port)",
                    "type": "boolean",
                    "default": true
                },
                "nat64Enabled": {
                    "title": "Translate IPv6 to IPv4",
                    "description": "If true, translate IPv6 traffic into IPv4 (default false)",
                    "type": "boolean",
                    "default": false
                },
                "httpMrfRoutingEnabled": {
                    "title": "HTTP MRF Router",
                    "description": "Specifies whether to use the HTTP message routing framework (MRF) functionality. This property is available on BIGIP 14.1 and above.",
                    "type": "boolean",
                    "default": false
                },

                "persistenceMethods": {
                    "title": "Persistence method(s)",
                    "description": "List of persistence methods (each by name or BIG-IP AS3 pointer).  Element 0 is primary (default) persistence method. Use 'persistenceMethods: []' for no persistence.",
                    "type": "array",
                    "items": { "$ref": "#/definitions/Basic_Persist" },
                    "$comment": "uniqueItems: true"
                },
                "fallbackPersistenceMethod": { "$ref": "#/definitions/Basic_Persist" },

                "allowVlans": {
                    "title":"VLAN list to allow",
                    "description":"Names of existing VLANs to add to this virtual server to allow.",
                    "type": "array",
                    "items": {
                        "bigip": {
                            "title": "BIG-IP VLAN",
                            "description": "Pathname of existing BIG-IP VLAN",
                            "type": "string",
                            "format": "f5bigip"
                        }
                    }
                },
                "rejectVlans": {
                    "title":"VLAN list to reject",
                    "description":"Names of existing VLANs to add to this virtual server to reject.",
                    "type": "array",
                    "items": {
                        "bigip": {
                            "title": "BIG-IP VLAN",
                            "description": "Pathname of existing BIG-IP VLAN",
                            "type": "string",
                            "format": "f5bigip"
                        }
                    }
                },
                "securityLogProfiles": {
                    "title": "Security Log Profiles",
                    "description": "Specifies the log profile applied to the virtual server",
                    "type": "array",
                    "f5PostProcess": {
                        "tag": "modules",
                        "data": ["afm", "asm"]
                    },

                    "items": {
                        "type": "object",
                        "properties": {
                            "use": {
                                "title": "Use",
                                "description": "BIG-IP AS3 pointer to security log profile declaration",
                                "type": "string",
                                "minLength": 1,
                                "f5PostProcess": {
                                    "tag": "pointer",
                                    "data": {
                                        "properties": {
                                            "class": {
                                                "const": "Security_Log_Profile"
                                            }
                                        },
                                        "required": ["class"]
                                    }
                                }
                            },
                            "bigip": {
                                "title": "BIG-IP security log profile",
                                "description": "Pathname of existing BIG-IP security log profile",
                                "type": "string",
                                "format": "f5bigip"
                            }
                        },
                        "additionalProperties": false,
                        "minProperties": 1,
                        "maxProperties": 1,
                        "f5PostProcess": {
                            "tag": "bigComponent",
                            "data": ["query security log profile"]
                        }
                    }
                },
                "profileDiameterEndpoint": {
                    "$ref": "#/definitions/Pointer_Enforcement_Diameter_Endpoint_Profile"
                },
                "profileEnforcement": {
                    "$ref": "#/definitions/Pointer_Enforcement_Profile"
                },
                "profileSubscriberManagement": {
                    "$ref": "#/definitions/Pointer_Enforcement_Subscriber_Management_Profile"
                },
                "profileIPOther": {
                    "$ref": "#/definitions/Pointer_IP_Other_Profile"
                },
                "profileClassification": {
                    "$ref": "#/definitions/Pointer_Classification_Profile"
                },
                "profileDNS": {
                    "$ref": "#/definitions/Pointer_DNS_Profile"
                },
                "profileStatistics": {
                    "$ref": "#/definitions/Pointer_Statistics_Profile"
                },
                "profileTrafficLog": {
                    "$ref": "#/definitions/Pointer_Traffic_Log_Profile"
                },
                "profileRewrite": {
                    "$ref": "#/definitions/Pointer_Rewrite_Profile"
                },
                "profileProtocolInspection": {
                    "description": "BIG-IP AS3 pointer to Protocol Inspection Profile declaration",
                    "allOf": [
                        {
                            "f5PostProcess": {
                                "tag": "modules",
                                "data": ["afm"]
                            }
                        },
                        {
                            "$ref": "#/definitions/Pointer_Protocol_Inspection_Profile"
                        }
                    ]
                },
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "rateLimit": {
                    "description": "Specifies the maximum number of connections per second allowed for a virtual server",
                    "type": "integer",
                    "minimum": 0,
                    "default": 0
                },
                "clonePools": {
                    "$ref": "#/definitions/Clone_Pools"
                },
                "maximumBandwidth": {
                    "description": "Specifies the maximum bandwidth allowed, in Mbps.",
                    "f5PostProcess": {
                        "tag": "modules",
                        "data": ["afm"]
                    },
                    "oneOf": [
                        {
                            "type": "integer",
                            "minimum": 10,
                            "maximum": 1000000
                        },
                        {
                            "type": "string",
                            "const": "infinite"
                        }
                    ]
                },
                "ipIntelligencePolicy": {
                    "allOf": [
                        {
                            "f5PostProcess": {
                                "tag": "modules",
                                "data": ["afm", "asm"]
                            }
                        },
                        {
                            "$ref": "#/definitions/Pointer_IP_Intelligence_Policy"
                        }
                    ]
                },
                "profileIntegratedBotDefense": {
                    "description": "BIG-IP AS3 pointer to an Integrated Bot Defense Profile. These are only supported in tmos version 17.0+.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/Pointer_Integrated_Bot_Defense_Profile"
                        }
                    ]
                },
                "adminState": {
                    "title": "Administration State",
                    "description": "Specifies the state of the Service. When set to disable the Service no longer accepts new connection requests, but will allow current connections to finish processing before going to a down state.",
                    "type": "string",
                    "enum": [
                        "enable",
                        "disable"
                    ],
                    "default": "enable"
                }
            },

            "allOf": [
                {
                    "if" : {
                        "properties" : {
                            "allowVlans": {}
                        },
                        "required": [ "allowVlans" ]
                    },
                    "then": {
                        "not": {
                            "properties": {
                                "rejectVlans": {}
                            },
                            "required": [ "rejectVlans" ]
                        }
                    }
                },
                {
                    "if": {
                        "not": {
                            "required": [ "virtualType" ],
                            "properties": {
                                "virtualType": { "const": "internal" }
                            }
                        }
                    },
                    "then": {
                        "required": [ "virtualAddresses" ]
                    }
                },
                {
                    "if": {
                        "properties" : {
                            "virtualAddresses": {
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "minItems": 2,
                                    "maxItems": 2
                                }
                            }
                        },
                        "required": [ "virtualAddresses" ]
                    },
                    "then": {
                        "not": {
                            "properties": {
                                "sourceAddress": {}
                            },
                            "required": [ "sourceAddress" ]
                        }
                    }
                },
                { "$ref": "#/definitions/Include" }
            ],
            "dependencies": {
                "fallbackPersistenceMethod": [ "persistenceMethods" ]
            }
        },

        "Clone_Pools": {
            "title": "Clone Pools",
            "description": "Specifies a pool that the virtual server uses to replicate either client or server traffic",
            "type": "object",
            "properties": {
                "ingress": {
                    "title": "Ingress Clone Pool",
                    "description": "Ingress (client-side context) clone pool",
                    "allOf": [
                        { "$ref": "#/definitions/Pointer_Pool" }
                    ]
                },
                "egress": {
                    "title": "Egress Clone Pool",
                    "description": "Egress (server-side context) clone pool",
                    "allOf": [
                        { "$ref": "#/definitions/Pointer_Pool" }
                    ]
                }
            },
            "additionalProperties": false,
            "anyOf": [
                { "required": [ "ingress" ] },
                { "required": [ "egress" ] }
            ]
        },


        "Service_Address": {
            "title": "Service_Address",
            "description": "Service IP address definition (BIG-IP virtual-address).  NOTE: When BIG-IP AS3 creates a Service_Address, it is placed in /tenant/serviceAddress (and not /tenant/app/serviceAddress) on the BIG-IP system.",
            "type": "object",

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "Service_Address"
                },
                "label": { "$ref": "#/definitions/Label" },
                "remark": { "$ref": "#/definitions/Remark" },

                "virtualAddress": {
                    "title": "Virtual address",
                    "description": "The virtual IP address. Defaults to mask /32.",
                    "type": "string",
                    "format": "f5ip"
                },
                "arpEnabled": {
                    "title": "Enable ARP",
                    "description": "If true (default), the system services ARP requests on this address",
                    "type": "boolean",
                    "default": true
                },
                "icmpEcho": {
                    "title": "Enable ICMP echo",
                    "description": "If true (default), the system answers ICMP echo requests on this address",
                    "type": "string",
                    "enum": [
                        "enable",
                        "disable",
                        "selective"
                    ],
                    "default": "enable"
                },
                "routeAdvertisement": {
                    "title": "Enable route advertisement",
                    "description": "If true, the route is advertised",
                    "type": "string",
                    "enum": [
                        "enable",
                        "disable",
                        "selective",
                        "always",
                        "any",
                        "all"
                    ],
                    "default": "disable"
                },
                "spanningEnabled": {
                    "title": "Enable spanning",
                    "description": "Enable all BIG-IP systems in device group to listen for and process traffic on the same virtual address",
                    "type": "boolean",
                    "default": false
                },
                "trafficGroup": {
                    "title": "Traffic Group",
                    "description": "Specifies the traffic group which the Service_Address belongs.",
                    "type": "string",
                    "default": "default"
                }
            },
            "dependencies": {
                "arpEnabled": {
                    "$comment": "Only 1 of 2 can be true.",
                    "if": { "properties": { "arpEnabled": { "const": true } } },
                    "then": { "properties" : { "spanningEnabled": { "const": false } } }
                }
            },
            "required": [ "virtualAddress" ],
            "additionalProperties": false
        },

        "WAF_Policy": {
            "title": "WAF_Policy",
            "description": "A Web Application Firewall Policy. Supports both traditional and advanced WAF policies. Advanced WAF policies require TMOS version 16.0 or newer.",
            "type": "object",
            "f5PostProcess": {
                "tag": "modules",
                "data": ["asm"]
            },

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "WAF_Policy"
                },
                "label": { "$ref": "#/definitions/Label" },
                "remark": { "$ref": "#/definitions/Remark" },

                "url": {
                    "title": "URL",
                    "description": "The URL to pull the ASM policy from",
                    "allOf": [{ "$ref": "#/definitions/Resource_URL" }]
                },
                "file": {
                    "title": "File",
                    "description": "The absolute file path for the ASM policy stored on the BIG-IP",
                    "type": "string",
                    "minLength": 3,
                    "allOf": [
                        {
                            "f5PostProcess": {
                                "tag": "expand"
                            }
                        },
                        {
                            "f5PostProcess": {
                                "tag": "fetch",
                                "data": "string"
                            }
                        }
                    ]
                },
                "policy": {
                    "description": "Reference to a WAF Policy",
                    "allOf": [
                        { "$ref": "#/definitions/F5string" },
                        {
                            "f5PostProcess": {
                                "tag": "expand",
                                "data": { "when": "1/expand" }
                            }
                        },
                        {
                            "f5PostProcess": {
                                "tag": "fetch",
                                "data": "string"
                            }
                        }
                    ]
                },
                "ignoreChanges": {
                    "title": "Ignore changes",
                    "description": "If false (default), the system updates the policy in every BIG-IP AS3 declaration deployment. If true, BIG-IP AS3 creates the policy on first deployment, and leaves it untouched afterwards",
                    "type": "boolean",
                    "default": false
                },

                "enforcementMode": {
                    "title": "Enforcement Mode",
                    "description": "Overrides the enforcement mode setting of the WAF policy. Ignored on Advanced WAF policies",
                    "type": "string",
                    "enum": [
                        "blocking",
                        "transparent"
                    ]
                },
                "serverTechnologies": {
                    "title": "Server Technologies",
                    "description": "Define server technologies for the WAF Policy, such as Java Servlets or Apache Struts. Ignored on Advanced WAF policies",
                    "type": "array",
                    "items": {
                        "title": "Server Technology",
                        "type": "string"
                    },
                    "uniqueItems": true
                },
                "disabledSignatures": {
                    "title": "Disabled attack signatures",
                    "description": "Disable various attack signatures by ID. Ignored on Advanced WAF policies",
                    "type": "array",
                    "items": {
                        "title": "Attack Signature ID",
                        "type": "integer",
                        "minimum": 200000000,
                        "maximum": 399999999
                    },
                    "uniqueItems": true
                },
                "expand": {
                    "title": "Expand",
                    "description": "Performs AS3 string expansion on specified values within the WAF Policy. WAF Policies that are not in JSON format will be ignored",
                    "type": "array",
                    "items": {
                        "title": "JSON pointer",
                        "description": "A JSON pointer to a value within the WAF Policy that requires AS3 string expansion. Pointing to a parent property results in AS3 traversing the sub-properties and expanding any strings that it may find",
                        "type": "string"
                    },
                    "uniqueItems": true

                }
            },
            "additionalProperties": false,
            "required": ["class"],
            "oneOf": [
                {
                    "required": [
                        "url"
                    ]
                },
                {
                    "required": [
                        "file"
                    ]
                },
                {
                    "required": [
                        "policy"
                    ]
                }
            ]
        },


        "Basic_Persist": {
            "title": "Basic Persist",
            "description": "Holds name of simple persistence method or BIG-IP AS3 pointer to persistence method",

            "if": { "type": "string" },
            "then": {
                "enum": [
                    "cookie",
                    "destination-address",
                    "msrdp",
                    "source-address",
                    "tls-session-id"
                ]
            },
            "else": {
                "$ref": "#/definitions/Pointer_Persist_Profile"
            }
        },

        "Persist": {
            "title": "Persist",
            "description": "Declares a persistence method",
            "type": "object",

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "Persist"
                },
                "label": { "$ref": "#/definitions/Label" },
                "remark": { "$ref": "#/definitions/Remark" },

                "persistenceMethod": {
                    "title": "Persistence method",
                    "description": "You may customize each basic persistence method",
                    "type": "string",
                    "enum": [
                        "cookie",
                        "destination-address",
                        "hash",
                        "msrdp",
                        "sip-info",
                        "source-address",
                        "tls-session-id",
                        "universal"
                    ]
                },
                "matchAcrossPools": {
                    "title": "Match across pools",
                    "description": "Specifies that the system can use any pool that contains this persistence record",
                    "type": "boolean",
                    "default": false
                },
                "matchAcrossVirtualPorts": {
                    "title": "Match across virtual ports",
                    "description": "Specifies that all persistent connections from a client IP address that go to the same virtual IP address also go to the same node",
                    "type": "boolean",
                    "default": false
                },
                "matchAcrossVirtualAddresses": {
                    "title": "Match across virtual addresses",
                    "description": "Specifies that all persistent connections from the same client IP address go to the same node",
                    "type": "boolean",
                    "default": false
                },
                "mirror": {
                    "title": "Mirror",
                    "description": "If true, try to maintain persistence even after HA failover of ADC (default false)",
                    "type": "boolean",
                    "default": false
                },
                "overrideConnectionLimit": {
                    "title": "Override connection limit",
                    "description": "If true, do not enforce pool member connection limit for persisted connections (default false)",
                    "type": "boolean",
                    "default": false
                }
            },

            "allOf": [
                {
                    "if": { "properties": { "persistenceMethod": { "const": "cookie" } } },
                    "then": { "$ref": "#/definitions/Persist_Cookie" }
                },
                {
                    "if": {
                        "properties": {
                            "persistenceMethod": { "enum": [ "destination-address", "source-address" ] }
                        }
                    },
                    "then": { "$ref": "#/definitions/Persist_Addr" }
                },
                {
                    "if": { "properties": { "persistenceMethod": { "const": "hash" } } },
                    "then": { "$ref": "#/definitions/Persist_Hash" }
                },
                {
                    "if": { "properties": { "persistenceMethod": { "const": "msrdp" } } },
                    "then": { "$ref": "#/definitions/Persist_MSRDP" }
                },
                {
                    "if": { "properties": { "persistenceMethod": { "const": "sip-info" } } },
                    "then": { "$ref": "#/definitions/Persist_SIP" }
                },
                {
                    "if": { "properties": { "persistenceMethod": { "const": "tls-session-id" } } },
                    "then": { "$ref": "#/definitions/Persist_TLS_Session" }
                },
                {
                    "if": { "properties": { "persistenceMethod": { "const": "universal" } } },
                    "then": { "$ref": "#/definitions/Persist_UIE" }
                }
            ],

            "dependencies": {
                "use": { "not": {} },
                "bigip": { "not": {} }
            },
            "required": [ "class", "persistenceMethod" ]
        },

        "Persist_Addr": {
            "title": "Address persistence",
            "description": "Configures an address affinity persistence profile",
            "type": "object",

            "properties": {
                "duration": {
                    "title": "Duration",
                    "description": "Lifetime of persistence record (seconds, default 180)",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 604800,
                    "default": 180
                },
                "hashAlgorithm": {
                    "title": "Hash algorithm",
                    "description": "Specifies the algorithm the system uses for hash persistence load balancing. The hash result is the input for the algorithm.",
                    "type": "string",
                    "enum": [ "carp", "default" ],
                    "default": "default"
                },
                "addressMask": {
                    "title": "Address mask",
                    "description": "Optional mask selects portion of address used by simple persistence (if omitted the system uses all address bits)",
                    "type": "string",
                    "format": "f5ip"
                }
            }
        },

        "Persist_Cookie": {
            "title": "Cookie persistence",
            "description": "Configures a cookie persistence profile",
            "type": "object",

            "properties": {
                "duration": {
                    "title": "Duration",
                    "description": "Lifetime of persistence record (seconds, default 0 means indefinite)",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 604800,
                    "default": 0
                },
                "cookieMethod": {
                    "title": "Method",
                    "description": "Selects cookie processing method (default is insert)",
                    "type": "string",
                    "enum": [ "insert", "hash", "passive", "rewrite" ],
                    "default": "insert"
                },
                "cookieName": {
                    "title": "Cookie name",
                    "description": "Cookie name (for method 'insert', default (empty-string) yields system-generated name)",
                    "type": "string",
                    "pattern": "^[0-9A-Za-z.~#$%^&*_-]*$",
                    "maxLength": 64,
                    "default": ""
                }
            },

            "if": { "properties": { "cookieMethod": { "const": "insert" } } },
            "then": {
                "properties": {
                    "ttl": {
                        "title": "TTL",
                        "description": "Requested cookie lifetime (seconds, default 0 means session cookie)",
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 604800,
                        "default": 0
                    },
                    "httpOnly": {
                        "title": "HTTP only flag",
                        "description": "If true (default) the system sets the HTTPOnly flag",
                        "type": "boolean",
                        "default": true
                    },
                    "secure": {
                        "title": "Secure flag",
                        "description": "If true (default) the system sets the Secure (TLS) flag",
                        "type": "boolean",
                        "default": true
                    },
                    "alwaysSet": {
                        "title": "Always set",
                        "description": "If true, set cookie with every HTTP response (default false)",
                        "type": "boolean",
                        "default": false
                    },
                    "encrypt": {
                        "title": "Encrypt cookie",
                        "description": "If true, prevent disclosure of (or tampering with) ADC info in cookie (default false, to reduce latency)",
                        "type": "boolean",
                        "default": false
                    },
                    "passphrase": {
                        "title": "Passphrase",
                        "description": "Used to create secret key for cookie encryption",
                        "type": "object",
                        "properties": {
                            "allowReuse": {
                                "description": "If true, other declaration objects may reuse this value",
                                "type": "boolean",
                                "default": false
                            }
                        },
                        "allOf": [
                            { "$ref": "#/definitions/Secret" },
                            {
                                "f5PostProcess": {
                                    "tag": "fetch",
                                    "data": "object"
                                }
                            },
                            {
                                "f5PostProcess": {
                                    "tag": "secret"
                                }
                            }
                        ]
                    }
                },
                "if": {
                    "properties": { "encrypt": { "const": true } },
                    "required": ["encrypt"]
                },
                "then": { "required": [ "passphrase" ] }
            },
            "else": {
                "if": { "properties": { "cookieMethod": { "const": "hash" } } },
                "then": {
                    "properties": {
                        "cookieName": {
                            "minLength": 1
                        },
                        "startAt": {
                            "title": "Start at",
                            "description": "Index of first octet in cookie value to hash",
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 4096,
                            "default": 0
                        },
                        "hashCount": {
                            "title": "Hash count",
                            "description": "Number of octets in cookie value to hash; 0 (default) means all",
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 4096,
                            "default": 0
                        }
                    }
                },
                "else": {
                    "$comment": "No extra properties for passive or rewrite."
                }
            }
        },

        "Persist_Hash": {
            "title": "Hash persistence",
            "description": "Configures a hash persistence profile",
            "type": "object",

            "properties": {
                "duration": {
                    "title": "Duration",
                    "description": "Lifetime of persistence record (seconds, default 180)",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 604800,
                    "default": 180
                },
                "hashAlgorithm": {
                    "title": "Hash algorithm",
                    "description": "Specifies the algorithm the system uses for hash persistence load balancing. The hash result is the input for the algorithm.",
                    "type": "string",
                    "enum": [ "carp", "default" ],
                    "default": "default"
                },
                "startAt": {
                    "title": "Start at",
                    "description": "Index of first octet in packet to hash",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535,
                    "default": 0
                },
                "count": {
                    "title": "Hash count",
                    "description": "Number of octets in cookie value to hash; 0 (default) means all",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535,
                    "default": 0
                },
                "startPattern": {
                    "title": "Start pattern",
                    "description": "Regular expression which matches start of data to hash; default \"\" averts matching",
                    "type": "string",
                    "default": ""
                },
                "endPattern": {
                    "title": "End pattern",
                    "description": "Regular expression which matches end of data to hash; default \"\" averts matching",
                    "type": "string",
                    "default": ""
                },
                "bufferLimit": {
                    "title": "Buffer limit",
                    "description": "Number of octets to buffer while pattern-matching",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535,
                    "default": 0
                },
                "iRule": {
                    "title": "iRule",
                    "description": "BIG-IP AS3 pointer to iRule if any (declared separately)",
                    "if": { "type": "string" },
                    "then": {
                        "minLength": 1,
                        "f5PostProcess": {
                            "tag": "pointer",
                            "data": {
                                "properties": {
                                    "class": { "const": "iRule" }
                                },
                                "required": [ "class" ]
                            }
                        }
                    },
                    "else": {
                        "type": "object",
                        "properties": {
                            "bigip": {
                                "title": "BIG-IP iRule",
                                "description": "Pathname of existing BIG-IP iRule",
                                "type": "string",
                                "format": "f5bigip"
                            },
                            "use": {
                                "title": "Use",
                                "description": "BIG-IP AS3 pointer to iRule (declared separately)",
                                "type": "string",
                                "minLength": 1,
                                "f5PostProcess": {
                                    "tag": "pointer",
                                    "data": {
                                        "properties": {
                                            "class": {
                                                "const": "iRule"
                                            }
                                        },
                                        "required": [
                                            "class"
                                        ]
                                    }
                                }
                            }
                        },
                        "additionalProperties": false,
                        "minProperties": 1,
                        "maxProperties": 1,
                        "f5PostProcess": {
                            "tag": "bigComponent",
                            "data": ["query ltm rule"]
                        }
                    }
                }
            }
        },

        "Persist_MSRDP": {
            "title": "MSRDP persistence",
            "description": "Configures a Microsoft(r) Remote Display Protocol (MSRDP) persistence profile",
            "type": "object",

            "properties": {
                "duration": {
                    "title": "Duration",
                    "description": "Lifetime of persistence record (seconds, default 300)",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 604800,
                    "default": 300
                },
                "sessionBroker": {
                    "title": "Session broker",
                    "description": "If true (default), the system will persist the client to the server chosen by session broker",
                    "type": "boolean",
                    "default": true
                }
            }
        },

        "Persist_SIP": {
            "title": "SIP info persistence",
            "description": "Configures a Session Initiation Protocol (SIP) persistence profile",
            "type": "object",

            "properties": {
                "duration": {
                    "title": "Duration",
                    "description": "Lifetime of persistence record (seconds, default 180)",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 604800,
                    "default": 180
                },
                "header": {
                    "title": "SIP header",
                    "description": "Suggested values include: Call-ID, To, From, SIP-ETag, and Subject",
                    "type": "string",
                    "minLength": 1
                }
            },
            "required": [ "header" ]
        },

        "Persist_TLS_Session": {
            "title": "TLS session persistence",
            "description": "Configures a Secure Socket Layer (SSL) persistence profile",
            "type": "object",

            "properties": {
                "duration": {
                    "title": "Duration",
                    "description": "Lifetime of persistence record (seconds, default 300)",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 604800,
                    "default": 300
                }
            }
        },

        "Persist_UIE": {
            "title": "Universal persistence",
            "description": "Configures a universal persistence profile",
            "type": "object",

            "properties": {
                "duration": {
                    "title": "Duration",
                    "description": "Lifetime of persistence record (seconds, default 180)",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 604800,
                    "default": 180
                },
                "iRule": {
                    "title": "iRule",
                    "description": "BIG-IP AS3 pointer to required iRule (declared separately)",
                    "if": { "type": "string" },
                    "then": {
                        "minLength": 1,
                        "f5PostProcess": {
                            "tag": "pointer",
                            "data": {
                                "properties": {
                                    "class": { "const": "iRule" }
                                },
                                "required": [ "class" ]
                            }
                        }
                    },
                    "else": {
                        "type": "object",
                        "properties": {
                            "bigip": {
                                "title": "BIG-IP iRule",
                                "description": "Pathname of existing BIG-IP iRule",
                                "type": "string",
                                "format": "f5bigip"
                            }
                        },
                        "additionalProperties": false,
                        "required": [ "bigip" ],
                        "f5PostProcess": {
                            "tag": "bigComponent",
                            "data": ["query ltm rule"]
                        }
                    }
                }
            },
            "required": [ "iRule" ]
        },


        "Pool": {
            "title": "Pool",
            "description": "Declares a service pool",
            "type": "object",

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "Pool"
                },
                "label": { "$ref": "#/definitions/Label" },
                "remark": { "$ref": "#/definitions/Remark" },
                "allowNATEnabled": {
                    "title": "Enable Allow NAT",
                    "description": "If true (default), NATs are automatically enabled for any connections using this pool.",
                    "type": "boolean",
                    "default": true
                },
                "allowSNATEnabled": {
                    "title": "Enable Allow SNAT",
                    "description": "If true (default), SNATs are automatically enabled for any connections using this pool.",
                    "type": "boolean",
                    "default": true
                },
                "loadBalancingMode": {
                    "title": "LB mode",
                    "description": "Load-balancing mode",
                    "type": "string",
                    "enum": [
                        "dynamic-ratio-member", "dynamic-ratio-node",
                        "fastest-app-response", "fastest-node",
                        "least-connections-member", "least-connections-node",
                        "least-sessions", "observed-member", "observed-node",
                        "predictive-member", "predictive-node",
                        "ratio-least-connections-member",
                        "ratio-least-connections-node",
                        "ratio-member", "ratio-node", "ratio-session",
                        "round-robin", "weighted-least-connections-member",
                        "weighted-least-connections-node"
                    ],
                    "default": "round-robin"
                },
                "minimumMembersActive": {
                    "title": "Minimum active",
                    "description": "Pool is down when fewer than this number of members are up",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535,
                    "default": 1
                },
                "monitors": {
                    "title": "Monitors",
                    "description": "List of health monitors (each by name or BIG-IP AS3 pointer)",
                    "type": "array",
                    "items": { "$ref": "#/definitions/Basic_Monitor" },
                    "$comment": "uniqueItems: true"
                },
                "minimumMonitors": {
                    "title": "Minimum monitors",
                    "description": "Member is down when fewer than minimum monitors report it healthy. Specify 'all' to require all monitors to be up.",
                    "oneOf": [
                        {
                            "type": "string",
                            "const": "all"
                        },
                        {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 63
                        }
                    ]
                },
                "members": {
                    "title": "Members",
                    "description": "Set of Pool members",
                    "type": "array",
                    "items": { "$ref": "#/definitions/Pool_Member" },
                    "$comment": "uniqueItems: true",
                    "f5PostProcess": {
                        "tag": "node"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "reselectTries": {
                    "title": "Reselect tries",
                    "description": "Maximum number of attempts to find a responsive member for a connection",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535,
                    "default": 0
                },
                "serviceDownAction": {
                    "title": "Service-down action",
                    "description": "Specifies connection handling when member is non-responsive",
                    "type": "string",
                    "enum": [ "drop", "none", "reselect", "reset" ],
                    "default": "none"
                },
                "slowRampTime": {
                    "title": "Slow ramp time",
                    "description": "BIG-IP AS3 slowly the connection rate to a newly-active member slowly during this interval (seconds)",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 900,
                    "default": 10
                }
            },
            "additionalProperties": false,

            "if": { "required": [ "monitors" ] },
            "then": { "properties": { "minimumMonitors": { "default": 1 } } },
            "required": [ "class" ]
        },

        "Address_Discovery_Common": {
            "type": "object",
            "allOf": [
                {
                    "if": {
                        "properties": {
                            "addressDiscovery": {
                                "enum": [
                                    "fqdn",
                                    "aws",
                                    "azure",
                                    "gce",
                                    "consul"
                                ]
                            }
                        },
                        "required": [
                            "addressDiscovery"
                        ]
                    },
                    "then": {
                        "properties": {
                            "updateInterval": {
                                "title": "Update interval",
                                "description": "Server-discovery update interval (seconds)",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 3600,
                                "default": 60
                            }
                        },
                        "not": {
                            "required": [
                                "bigip"
                            ]
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "addressDiscovery": {
                                "const": "static"
                            }
                        }
                    },
                    "then": {
                        "oneOf": [
                            {
                                "required": [
                                    "bigip"
                                ]
                            },
                            {
                                "properties": {
                                    "serverAddresses": {
                                        "title": "Server addresses",
                                        "description": "Static IP addresses of servers (nodes). Shorthand for 'servers' where you only want to specify the address property.",
                                        "type": "array",
                                        "items": {
                                            "title": "Server address",
                                            "description": "Static IP address for this server (node)",
                                            "type": "string",
                                            "format": "f5ip"
                                        },
                                        "uniqueItems": true
                                    },
                                    "servers": {
                                        "title": "Servers",
                                        "description": "Same as serverAddresses, but allowing for further specification of each node.",
                                        "type": "array",
                                        "items": {
                                            "title": "Servers",
                                            "description": "Static IP address and other details for this server (node)",
                                            "type": "object",
                                            "properties": {
                                                "address": {
                                                    "title": "Server address",
                                                    "description": "Static IP address for this server (node)",
                                                    "type": "string",
                                                    "format": "f5ip"
                                                },
                                                "name": {
                                                    "title": "Name",
                                                    "type": "string",
                                                    "pattern": "^[A-Za-z][0-9A-Za-z_.-]*$",
                                                    "maxLength": 64
                                                }
                                            },
                                            "required": [
                                                "address"
                                            ],
                                            "additionalProperties": false
                                        }
                                    }
                                },
                                "if": {
                                    "required": [
                                        "monitors"
                                    ]
                                },
                                "then": {
                                    "properties": {
                                        "minimumMonitors": {
                                            "default": 1
                                        }
                                    }
                                },
                                "anyOf": [
                                    {
                                        "required": [ "serverAddresses" ]
                                    },
                                    {
                                        "required": [ "servers" ]
                                    }
                                ]
                            }
                        ]
                    }
                },
                {
                    "if": {
                        "properties": {
                            "addressDiscovery": {
                                "const": "fqdn"
                            }
                        },
                        "required": [
                            "addressDiscovery"
                        ]
                    },
                    "then": {
                        "properties": {
                            "hostname": {
                                "title": "Hostname",
                                "type": "string",
                                "format": "hostname"
                            },
                            "addressFamily": {
                                "title": "Address family",
                                "description": "Selects IPv4/6 and DNS A/AAAA RR's",
                                "type": "string",
                                "enum": [
                                    "IPv4",
                                    "IPv6"
                                ],
                                "default": "IPv4"
                            },
                            "autoPopulate": {
                                "title": "Auto-populate",
                                "description": "If true use multiple server (node) addresses when available, otherwise use only one",
                                "type": "boolean",
                                "default": false
                            },
                            "queryInterval": {
                                "title": "Query interval",
                                "description": "Normal DNS query interval (seconds, default 0 means RR TTL)",
                                "type": "integer",
                                "minimum": 0,
                                "default": 0
                            },
                            "downInterval": {
                                "title": "Down interval",
                                "description": "DNS retry interval after resolution failure (seconds)",
                                "type": "integer",
                                "minimum": 0,
                                "default": 5
                            },
                            "fqdnPrefix": {
                                "description": "String to prepend onto the hostname to create the node name",
                                "type": "string",
                                "oneOf": [
                                    { "pattern": "^[A-Za-z][0-9A-Za-z_.-]*$" },
                                    { "const": "" }
                                ],
                                "default": ""
                            }
                        },
                        "if": {
                            "required": [
                                "monitors"
                            ]
                        },
                        "then": {
                            "properties": {
                                "minimumMonitors": {
                                    "default": 1
                                }
                            }
                        },
                        "required": [
                            "hostname"
                        ]
                    }
                },
                {
                    "if": {
                        "properties": {
                            "addressDiscovery": {
                                "const": "aws"
                            }
                        },
                        "required": [
                            "addressDiscovery"
                        ]
                    },
                    "then": {
                        "$ref": "#/definitions/Service_Discovery_AWS"
                    }
                },
                {
                    "if": {
                        "properties": {
                            "addressDiscovery": {
                                "const": "azure"
                            }
                        },
                        "required": [
                            "addressDiscovery"
                        ]
                    },
                    "then": {
                        "$ref": "#/definitions/Service_Discovery_Azure"
                    }
                },
                {
                    "if": {
                        "properties": {
                            "addressDiscovery": {
                                "const": "gce"
                            }
                        },
                        "required": [
                            "addressDiscovery"
                        ]
                    },
                    "then": {
                        "$ref": "#/definitions/Service_Discovery_GCE"
                    }
                },
                {
                    "if": {
                        "properties": {
                            "addressDiscovery": {
                                "const": "consul"
                            }
                        },
                        "required": [
                            "addressDiscovery"
                        ]
                    },
                    "then": {
                        "$ref": "#/definitions/Service_Discovery_Consul"
                    }
                }
            ]
        },

        "Address_Discovery": {
            "title": "Address_Discovery",
            "description": "Sharable Pool Member information",
            "type": "object",
            "properties": {
                "class": {
                    "type": "string",
                    "const": "Address_Discovery"
                },
                "addressDiscovery": {
                    "title": "Address discovery",
                    "description": "Selects how server (node) addresses are discovered",
                    "type": "string",
                    "enum": [
                        "static",
                        "fqdn",
                        "event",
                        "aws",
                        "gce",
                        "azure",
                        "consul"
                    ],
                    "f5PostProcess": {
                        "tag": "serviceDiscovery"
                    }
                },
                "shareNodes": {
                    "description": "If enabled, nodes are created in /Common instead of the tenant's partition",
                    "type": "boolean",
                    "default": false
                }
            },
            "required": ["addressDiscovery"],
            "allOf": [
                { "$ref": "#/definitions/Address_Discovery_Common" }
            ]
        },
        "Pool_Member": {
            "title": "Pool member",
            "description": "Declares a service-pool member",
            "type": "object",
            "properties": {
                "remark": {
                    "$ref": "#/definitions/Remark"
                },
                "servicePort": {
                    "title": "Service port",
                    "description": "Service L4 port (optional port-discovery may override)",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535
                },
                "bigip": {
                    "title": "BIG-IP node",
                    "description": "If defined, pathname of existing BIG-IP node",
                    "type": "string",
                    "format": "f5bigip"
                },
                "enable": {
                    "description": "Maps to BIG-IP pool member state",
                    "type": "boolean",
                    "default": true
                },
                "connectionLimit": {
                    "title": "Connection limit",
                    "description": "Maximum concurrent connections to member",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 2147483647,
                    "default": 0
                },
                "rateLimit": {
                    "title": "Rate limit",
                    "description": "Value zero prevents use of member",
                    "type": "integer",
                    "minimum": -1,
                    "maximum": 2147483647,
                    "default": -1
                },
                "dynamicRatio": {
                    "title": "Dynamic ratio",
                    "description": "Specifies a range of numbers that you want the system to use in conjunction with the ratio load balancing method",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 100,
                    "default": 1
                },
                "ratio": {
                    "title": "Ratio",
                    "description": "Specifies the weight of the pool member for load balancing purposes",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 100,
                    "default": 1
                },
                "priorityGroup": {
                    "title": "Priority group",
                    "description": "Specifies the priority group within the pool for this pool member",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65535,
                    "default": 0
                },
                "monitors": {
                    "title": "Monitors",
                    "description": "List of monitors (each by name or BIG-IP AS3 pointer)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Basic_Monitor"
                    },
                    "$comment": "uniqueItems: true"
                },
                "minimumMonitors": {
                    "title": "Minimum monitors",
                    "description": "Member is down when fewer than minimum monitors report it healthy",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 63
                },
                "metadata": {
                    "$ref": "#/definitions/Metadata"
                },
                "adminState": {
                    "title": "Administration State",
                    "description": "Setting adminState to enable will create the node in an operational state. Set to disable to disallow new connections but allow existing connections to drain. Set to offline to force immediate termination of all connections.",
                    "type": "string",
                    "enum": [
                        "enable",
                        "disable",
                        "offline"
                    ],
                    "default": "enable"
                },
                "addressDiscovery": {
                    "title": "Address discovery",
                    "description": "Selects how server (node) addresses are discovered",
                    "type": ["string", "object"],
                    "if": { "type": "string" },
                    "then": {
                        "enum": [
                            "static",
                            "fqdn",
                            "event",
                            "aws",
                            "gce",
                            "azure",
                            "consul"
                        ]
                    },
                    "else": { "$ref": "#/definitions/Pointer_Address_Discovery" },
                    "default": "static",
                    "f5PostProcess": {
                        "tag": "serviceDiscovery",
                        "data": {
                            "exceptions": ["static", "fqdn"]
                        }
                    }
                },
                "shareNodes": {
                    "description": "If enabled, nodes are created in /Common instead of the tenant's partition",
                    "type": "boolean",
                    "default": false
                },
                "routeDomain": {
                    "description": "The Route Domain to use for the pool member",
                    "$comment": "Due to the fact the Route Domain id is required for address modification, BIG-IP AS3 does NOT support this route domain reference as anything but the id.",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 65534
                }
            },
            "required": [
                "servicePort"
            ],
            "allOf": [
                {
                    "$ref": "#/definitions/Address_Discovery_Common"
                },
                {
                    "if": {
                        "required": [
                            "bigip"
                        ]
                    },
                    "then": {
                        "if": {
                            "required": [
                                "monitors"
                            ]
                        },
                        "then": {
                            "properties": {
                                "minimumMonitors": {
                                    "default": 1
                                }
                            }
                        }
                    }
                },
                {
                    "f5PostProcess": {
                        "tag": "bigComponent",
                        "data": ["query ltm node"]
                    }
                }
            ]
        },

        "Service_Discovery_Polling_Core": {
            "type": "object",
            "properties": {
                "addressRealm": {
                    "title": "Address realm",
                    "description": "Specifies whether to look for public or private IP addresses",
                    "type": "string",
                    "enum": [ "public", "private" ],
                    "default": "private"
                },
                "credentialUpdate": {
                    "title": "Credential Update",
                    "type": "boolean",
                    "description": "Specifies whether you are updating your credentials",
                    "default": false
                },
                "undetectableAction": {
                    "title": "Undetectable Action",
                    "description": "Action to take when node cannot be detected",
                    "type": "string",
                    "enum": ["disable", "remove"],
                    "default": "remove"
                }
            }
        },


        "Service_Discovery_Polling_Core_Tagged": {
            "properties": {
                "tagKey": {
                    "title": "Tag key",
                    "type": "string",
                    "minLength": 1,
                    "description": "The tag key associated with the node to add to this pool"
                },
                "tagValue": {
                    "title": "Tag value",
                    "type": "string",
                    "minLength": 1,
                    "description": "The tag value associated with the node to add to this pool"
                }
            },

            "allOf": [ { "$ref": "#/definitions/Service_Discovery_Polling_Core" } ]
        },


        "Service_Discovery_AWS": {
            "description": "Service Discovery properties for Amazon Web Services (AWS)",
            "properties": {
                "region": {
                    "title": "AWS region",
                    "description": "Empty string (default) means region in which ADC is running",
                    "type": "string",
                    "default": ""
                },
                "roleARN": {
                    "title": "Role Amazon Resource Name",
                    "description": "Assume a role (also requires the externalId field)",
                    "type": "string",
                    "minLength": 1
                },
                "externalId": {
                    "title": "External Id",
                    "description": "External Id",
                    "type": "string",
                    "minLength": 1
                },
                "accessKeyId": {
                    "title": "Access Key Id",
                    "description": "Information for discovering AWS nodes that are not in the same region as your BIG-IP (also requires the secretAccessKey field",
                    "type": "string",
                    "minLength": 1
                },
                "secretAccessKey": {
                    "title": "Secret Access Key",
                    "description": "Will be stored in the declaration as an encrypted string",
                    "oneOf": [
                        {
                            "type": "string",
                            "minLength": 1
                        },
                        {
                            "allOf": [
                                { "required": ["ciphertext"] },
                                { "$ref": "#/definitions/Secret" }
                            ]
                        }
                    ],
                    "f5PostProcess": {
                        "tag": "longSecret"
                    }
                }
            },

            "dependencies": {
                "roleARN": {
                    "required": ["externalId"]
                },
                "externalId": {
                    "required": ["roleARN"]
                },
                "accessKeyId": {
                    "required": ["secretAccessKey"]
                },
                "secretAccessKey" : {
                    "required": ["accessKeyId"]
                }
            },

            "if": { "required": [ "monitors" ] },
            "then": { "properties": { "minimumMonitors": { "type": "integer", "default": 1 } } },

            "required": [ "region", "tagKey", "tagValue" ],

            "allOf": [ { "$ref": "#/definitions/Service_Discovery_Polling_Core_Tagged" } ]
        },


        "Service_Discovery_Azure": {
            "description": "Service Discovery properties for Azure",
            "properties": {
                "resourceGroup": {
                    "title": "Resource group",
                    "description": "Azure Resource Group name",
                    "type": "string"
                },
                "subscriptionId": {
                    "title": "Subscription ID",
                    "description": "Azure subscription ID",
                    "type": "string"
                },
                "useManagedIdentity": {
                    "title": "Use Managed Identity",
                    "description": "Use Azure managed identity rather than directoryId, applicationId, and apiAccessKey",
                    "type": "boolean",
                    "default": false
                },
                "directoryId": {
                    "title": "(Azure) Directory ID",
                    "description": "Azure Active Directory ID (AKA tenant ID)",
                    "type": "string"
                },
                "applicationId": {
                    "title": "(Azure) Application ID",
                    "description": "Azure registered application ID (AKA client ID)",
                    "type": "string"
                },
                "apiAccessKey": {
                    "title": "Azure API access key",
                    "description": "Azure registered application API access key (AKA service principal secret). Will be stored in the declaration in an encrypted format.",
                    "oneOf": [
                        {
                            "type": "string",
                            "minLength": 1
                        },
                        {
                            "allOf": [
                                { "required": ["ciphertext"] },
                                { "$ref": "#/definitions/Secret" }
                            ]
                        }
                    ],
                    "f5PostProcess": {
                        "tag": "longSecret"
                    }
                },
                "resourceType": {
                    "description": "Type of resource identified by resourceId. This can be used in place of tagKey/tagValue.",
                    "type": "string",
                    "enum": ["tag", "scaleSet"]
                },
                "resourceId": {
                    "description": "ID of resource to find nodes by.",
                    "type": "string"
                },
                "environment": {
                    "title": "Azure environment",
                    "description": "Azure environment name. Required if environment should not be determined by instance metadata.",
                    "type": "string",
                    "default": "Azure"
                }
            },

            "required": [
                "resourceGroup",
                "subscriptionId"
            ],

            "allOf": [
                { "$ref": "#/definitions/Service_Discovery_Polling_Core_Tagged" },
                {
                    "if": { "required": [ "monitors" ] },
                    "then": { "properties": { "minimumMonitors": { "type": "integer", "default": 1 } } }
                },
                {
                    "if": {
                        "required": ["tagKey", "tagValue"]
                    },
                    "then": {
                        "not": {
                            "required": ["resourceId", "resourceType"]
                        }
                    },
                    "else": {
                        "required": ["resourceId", "resourceType"],
                        "not": {
                            "required": ["tagKey", "tagValue"]
                        }
                    }
                },
                {
                    "if": { "properties": { "useManagedIdentity": { "const": true } } },
                    "then": {
                        "allOf": [
                            { "not": { "required": ["directoryId"] } },
                            { "not": { "required": ["applicationId"] } },
                            { "not": { "required": ["apiAccessKey"] } }
                         ]
                    },
                    "else": {
                        "required": ["directoryId", "applicationId", "apiAccessKey"]
                    }
                }
            ]
        },


        "Service_Discovery_GCE": {
            "description": "Service Discovery properties for Google Compute Engine (GCE)",
            "properties": {
                "region": {
                    "title": "GCE region",
                    "description": "Empty string (default) means region in which ADC is running",
                    "type": "string"
                },
                "encodedCredentials": {
                    "title": "Encoded Service Account Credentials",
                    "description": "Base 64 encoded service account credentials JSON",
                    "oneOf": [
                        {
                            "type": "string",
                            "minLength": 1
                        },
                        {
                            "allOf": [
                                { "required": ["ciphertext"] },
                                { "$ref": "#/definitions/Secret" }
                            ]
                        }
                    ],
                    "f5PostProcess": {
                        "tag": "longSecret"
                    }
                },
                "projectId": {
                    "title": "Project Id",
                    "description": "For Google Cloud Engine (GCE) only: The ID of the project in which the members are located",
                    "type": "string"
                }
            },

            "if": { "required": [ "monitors" ] },
            "then": { "properties": { "minimumMonitors": { "type": "integer", "default": 1 } } },

            "required": [ "region", "tagKey", "tagValue" ],

            "allOf": [ { "$ref": "#/definitions/Service_Discovery_Polling_Core_Tagged" } ]
        },


        "Service_Discovery_Consul": {
            "description": "Service Discovery properties for Consul",
            "properties": {
                "uri": {
                    "title": "URI",
                    "type": "string",
                    "minLength": 1,
                    "description": "The location of the node data"
                },
                "encodedToken": {
                    "title": "Encoded ACL Token",
                    "description": "Base 64 encoded bearer token to make requests to the Consul API. Will be stored in the declaration in an encrypted format.",
                    "oneOf": [
                        {
                            "type": "string",
                            "minLength": 1
                        },
                        {
                            "allOf": [
                                { "required": ["ciphertext"] },
                                { "$ref": "#/definitions/Secret" }
                            ]
                        }
                    ],
                    "f5PostProcess": {
                        "tag": "longSecret"
                    }
                },
                "trustCA": {
                    "title": "Trusted CA bundle",
                    "description": "CA Bundle to validate server certificates",
                    "allOf": [
                        { "$ref": "#/definitions/Pointer_CA_Bundle" }
                    ]
                },
                "rejectUnauthorized": {
                    "title": "Reject Unauthorized Connection",
                    "description": "If true, the server certificate is verified against the list of supplied/default CAs when making requests to the Consul API.",
                    "type": "boolean",
                    "default": true
                },
               "jmesPathQuery": {
                    "title": "JMESPath Query",
                    "type": "string",
                    "description": "Custom JMESPath Query"
                }
            },

            "if": { "required": [ "monitors" ] },
            "then": { "properties": { "minimumMonitors": { "type": "integer", "default": 1 } } },

            "required": [ "uri" ],

            "allOf": [ { "$ref": "#/definitions/Service_Discovery_Polling_Core" } ]
        },

        "TLS_Server": {
            "title": "TLS_Server",
            "description": "TLS server parameters (connections arriving to ADC)",
            "type": "object",

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "TLS_Server"
                },
                "label": { "$ref": "#/definitions/Label" },
                "remark": { "$ref": "#/definitions/Remark" },

                "requireSNI": {
                    "title": "Require SNI",
                    "description": "When a client sends no or unknown SNI and Require SNI is false (default), the system uses the primary certificate, otherwise the system rejects the client",
                    "type": "boolean",
                    "default": false
                },
                "alertTimeout": {
                    "title": "Alert Timeout",
                    "description": "Specifies the duration of time, in seconds, for the system to try to close an SSL connection before resetting the connection. The default is 'indefinite'. You can also specify 'immediate', or an integer.",
                    "oneOf": [
                        {
                            "type": "integer",
                            "maximum": 4294967294,
                            "minimum": 1
                        },
                        {
                            "type": "string",
                            "enum": [
                                "immediate",
                                "indefinite"
                            ]
                        }
                    ],
                    "default": "indefinite"
                },
                "cacheTimeout": {
                    "title": "Cache Timeout",
                    "description": "Sets the cache timeout (in seconds)",
                    "type": "integer",
                    "maximum": 86400,
                    "minimum": 0,
                    "default": 3600
                },
                "certificates": {
                    "title": "Certificates",
                    "description": "Primary and (optional) additional certificates (order is significant, element 0 is primary cert)",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "matchToSNI": {
                                "title": "Match to SNI",
                                "description": "If value is FQDN (wildcard okay), ignore all names in certificate and select this cert when SNI matches value (or by default)",
                                "type": "string"
                            },
                            "sniDefault": {
                                "title": "Default SNI",
                                "description": "When true, this profile is the default SSL profile when a client connection does not specify a known server name, or does not specify any server name at all. The default value is false",
                                "type": "boolean",
                                "default": false
                            },
                            "enabled": {
                                "title": "Enabled",
                                "description": "Enables SSL processing",
                                "type": "boolean",
                                "default": true
                            },
                            "certificate": {
                                "title": "Certificate",
                                "description": "BIG-IP AS3 pointer to Certificate declaration",
                                "type": "string",
                                "minLength": 1,
                                "f5PostProcess": {
                                    "tag": "pointer",
                                    "data": {
                                        "properties": {
                                            "class": { "const": "Certificate" }
                                        },
                                        "required": [ "class" ]
                                    }
                                }
                            },
                            "proxyCertificate": {
                                "title": "Proxy Certificate",
                                "description": "BIG-IP AS3 pointer to Certificate declaration for SSL forward proxy",
                                "type": "string",
                                "minLength": 1,
                                "f5PostProcess": {
                                    "tag": "pointer",
                                    "data": {
                                        "properties": {
                                            "class": { "const": "Certificate" }
                                        },
                                        "required": [ "class" ]
                                    }
                                }
                            }
                        },
                        "additionalProperties": false,
                        "required": [ "certificate" ]
                    },
                    "minItems": 1,
                    "$comment": "uniqueItems: true"
                },
                "ciphers": {
                    "title": "Ciphers",
                    "description": "Ciphersuite selection string. ciphers and cipherGroup are mutually exclusive, only use one.",
                    "type": "string"
                },
                "cipherGroup": {
                    "description": "Pointer to a cipherGroup. cipherGroup and ciphers are mutually exclusive, only use one.",
                    "$ref": "#/definitions/Pointer_Cipher_Group"
                },
                "authenticationMode": {
                    "title": "Authentication mode",
                    "description": "Client certificate authentication mode",
                    "type": "string",
                    "enum": [ "ignore", "request", "require" ],
                    "default": "ignore"
                },
                "authenticationFrequency": {
                    "title": "Authentication frequency",
                    "description": "Client certificate authentication frequency",
                    "type": "string",
                    "enum": [ "one-time", "every-time" ],
                    "default": "one-time"
                },
                "authenticationTrustCA": {
                    "title": "Authentication trust CA",
                    "description": "BIG-IP AS3 pointer to declaration of CA Bundle used to validate client certificates",
                    "if": { "type": "string" },
                    "then": {
                        "minLength": 1,
                        "f5PostProcess": {
                            "tag": "pointer",
                            "data": {
                                "properties": {
                                    "class": { "const": "CA_Bundle" }
                                },
                                "required": [ "class" ]
                            }
                        }
                    },
                    "else": {
                        "type": "object",
                        "properties": {
                            "bigip": {
                                "title": "BIG-IP CA bundle",
                                "description": "Pathname of existing BIG-IP CA bundle",
                                "type": "string",
                                "format": "f5bigip"
                            }
                        },
                        "additionalProperties": false,
                        "required": [ "bigip" ],
                        "f5PostProcess": {
                            "tag": "bigComponent",
                            "data": ["query sys file ssl-cert"]
                        }
                    }
                },
                "authenticationInviteCA": {
                    "title": "Authentication invite CA",
                    "description": "BIG-IP AS3 pointer to declaration of CA Bundle used to invite client certificates",
                    "if": { "type": "string" },
                    "then": {
                        "minLength": 1,
                        "f5PostProcess": {
                            "tag": "pointer",
                            "data": {
                                "properties": {
                                    "class": { "const": "CA_Bundle" }
                                },
                                "required": [ "class" ]
                            }
                        }
                    },
                    "else": {
                        "type": "object",
                        "properties": {
                            "bigip": {
                                "title": "BIG-IP CA bundle",
                                "description": "Pathname of existing BIG-IP CA bundle",
                                "type": "string",
                                "format": "f5bigip"
                            }
                        },
                        "additionalProperties": false,
                        "required": [ "bigip" ],
                        "f5PostProcess": {
                            "tag": "bigComponent",
                            "data": ["query sys file ssl-cert"]
                        }
                    }
                },
                "crlFile": {
                    "title": "Certificate Revocation List (CRL) File",
                    "description": "Specifies the name of a file containing a list of revoked client certificates",
                    "allOf": [
                        { "$ref": "#/definitions/Pointer_SSL_CRL_File" }
                    ]
                },
                "allowExpiredCRL": {
                    "title": "Allow Expired CRL",
                    "description": "Specifies if the CRL can be used even if it has expired",
                    "type": "boolean",
                    "default": false
                },
                "cacheCertificateEnabled": {
                    "title": "Cache Certificate Enabled",
                    "description": "Enables or disables (default) caching certificates by IP address and port number",
                    "type": "boolean",
                    "default": false
                },
                "c3dOCSPUnknownStatusAction": {
                    "title": "C3D OCSP Unknown Status Action",
                    "description": "Specifies the BIG-IP action when the OCSP returns unknown status. The default is drop",
                    "type": "string",
                    "enum": ["drop", "ignore"],
                    "default": "drop"
                },
                "c3dOCSP": {
                    "title": "C3D OCSP",
                    "description": "Specifies SSL Client Certificate Constrained Delegation (C3D) OCSP object that the BIG-IP SSL should use to connect to the OCSP responder and check the client certificate status",
                    "allOf": [
                        { "$ref": "#/definitions/Pointer_Certificate_Validator_OCSP" }
                    ]
                },
                "c3dEnabled": {
                    "title": "C3D Delegation Enabled",
                    "description": "Enables or disables SSL Client Certificate Constrained Delegation (C3D). The default is false",
                    "type": "boolean",
                    "default": false
                },
                "forwardProxyEnabled": {
                    "title": "Forward Proxy Enabled",
                    "description": "Enables or disables (default) SSL forward proxy",
                    "type": "boolean",
                    "default": false
                },
                "forwardProxyBypassEnabled": {
                    "title": "Forward Proxy Bypass Enabled",
                    "description": "Enables or disables (default) SSL forward proxy bypass",
                    "type": "boolean",
                    "default": false
                },
                "forwardProxyBypassAllowlist": {
                    "title": "Forward Proxy Bypass Allowlist",
                    "description": "Specifies the data group name of hostname allowlist when both SSL forwardProxyEnabled & forwardProxyBypassEnabled features are set to true.",
                    "allOf": [
                        { "$ref": "#/definitions/Pointer_Data_Group" }
                    ]
                },
                "ldapStartTLS": {
                    "title": "Client-LDAP Profile",
                    "description": "Creates a client LDAP profile with the specified activation mode STARTTLS.",
                    "type": "string",
                    "enum": [ "none", "allow", "require" ]
                },
                "smtpsStartTLS": {
                    "title": "Simple Mail Transfer Protocol Security (SMTPS) profile",
                    "description": "Creates a SMTPS profile with the specified activation mode STARTTTLS. Because HTTP profile is not compatible with SMTPS use with Service_TCP instead of Service_HTTPS. Also incompatible with ldapStartTLS. Use only one of the two.",
                    "type": "string",
                    "enum": [ "none", "allow", "require" ]
                },
                "staplerOCSPEnabled": {
                    "description": "Specifies whether to enable OCSP stapling",
                    "type": "boolean",
                    "default": false
                },
                "insertEmptyFragmentsEnabled": {
                    "title": "Insert Empty Fragments Enabled",
                    "description": "Enables a countermeasure against an SSL 3.0/TLS 1.0 protocol vulnerability affecting CBC ciphers. These ciphers cannot be handled by certain broken SSL implementations.",
                    "type": "boolean",
                    "default": false
                },
                "singleUseDhEnabled": {
                    "title": "Single Use DH Enabled",
                    "description": "Creates a new key when using temporary/ephemeral DH parameters. This option must be used to prevent small subgroup attacks, when the DH parameters were not generated using strong primes (for example. when using DSA-parameters). If strong primes were used, it is not strictly necessary to generate a new DH key during each handshake, but F5 Networks recommends it. Enable the Single DH Use option whenever temporary or ephemeral DH parameters are used.",
                    "type": "boolean",
                    "default": false
                },
                "tls1_3Enabled": {
                    "title": "TLS 1.3",
                    "description": "Allow TLS 1.3 Protocol. Note: tls1_3Enabled is only supported in tmos version 14.0+.",
                    "type": "boolean",
                    "default": false
                },
                "tls1_2Enabled": {
                    "title": "TLS 1.2",
                    "description": "Allow TLS 1.2 Protocol.",
                    "type": "boolean",
                    "default": true
                },
                "tls1_1Enabled": {
                    "title": "TLS 1.1",
                    "description": "Allow TLS 1.1 Protocol.",
                    "type": "boolean",
                    "default": true
                },
                "tls1_0Enabled": {
                    "title": "TLS 1.0",
                    "description": "Allow TLS 1.0 Protocol.",
                    "type": "boolean",
                    "default": true
                },
                "renegotiationEnabled": {
                    "title": "Renegotiation",
                    "description": "Controls on a per-connection basis how the system responds to mid-stream SSL reconnection requests.",
                    "type": "boolean",
                    "default": true
                },
                "retainCertificateEnabled": {
                    "title": "Retain Certificate",
                    "description": "When enabled, server certificate is retained in SSL session.",
                    "type": "boolean",
                    "default": true
                },
                "namingScheme": {
                    "description": "Scheme to use when naming generated tmsh configuration",
                    "type": "string",
                    "enum": ["numbered", "certificate"],
                    "default": "numbered"
                },
                "sslEnabled": {
                    "title": "SSL",
                    "description": "Allow SSL protocol",
                    "type": "boolean",
                    "default": true
                },
                "ssl3Enabled": {
                    "title": "SSL v3",
                    "description": "Allow SSL v3 protocol",
                    "type": "boolean",
                    "default": true
                },
                "proxySslEnabled": {
                    "title": "Proxy SSL Enabled",
                    "description": "When enabled, further modification of application traffic within an SSL tunnel is allowed while still allowing the server to perform necessary authorization, authentication, and auditing steps. Requires a corresponding TLS_Client with this enabled to perform transparent SSL decryption.",
                    "type": "boolean",
                    "default": false
                },
                "proxySslPassthroughEnabled": {
                    "title": "Proxy SSL Passthrough Enabled",
                    "description": "When enabled, it allows Proxy SSL to passthrough the traffic when ciphersuite negotiated between the client and server is not supported. Requires a corresponding TLS_Client with this enabled to perform transparent SSL decryption.",
                    "type": "boolean",
                    "default": false
                },
                "secureRenegotiation": {
                    "title": "Secure Renegotiation",
                    "description": "Specifies the secure renegotiation mode. When set to require, any client attempting to renegotiate that does not support secure renegotiation will have its connection aborted. When set to require-strict, any client attempting to connect that does not support secure renegotiation will have its initial handshake denied. When set to request, unpatched clients will be permitted to renegotiate. Setting to request is not recommended as it is subject to active man-in-the-middle attacks.",
                    "type": "string",
                    "enum": [ "request", "require", "require-strict" ],
                    "default": "require"
                },
                "uncleanShutdownEnabled": {
                    "title": "Unclean Shutdown Enabled",
                    "description": "When enabled, the profile performs unclean shutdowns of all SSL connections, which means the underlying TCP connections are closed without exchanging the required SSL shutdown alerts.",
                    "type": "boolean",
                    "default": true
                },
                "dtlsEnabled": {
                    "title": "DTLS Enabled",
                    "description": "Allows the DTLS protocol.",
                    "type": "boolean",
                    "default": true
                },
                "dtls1_2Enabled": {
                    "title": "DTLS1.2 Enabled",
                    "description": "Allows the DTLS 1.2 protocol.",
                    "type": "boolean",
                    "default": true
                },
                "certificateExtensions": {
                    "title": "Certificate Extensions",
                    "description": "Specifies the extensions of the web server certificates to be included in the generated certificates using SSL Forward Proxy.",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "authority-key-identifier",
                            "basic-constraints",
                            "certificate-policies",
                            "crl-distribution-points",
                            "extended-key-usage",
                            "fresh-crl",
                            "issuer-alternative-name",
                            "key-usage",
                            "subject-alternative-name",
                            "subject-directory-attribute",
                            "subject-key-identifier"
                        ]
                    }
                },
                "nonSslConnectionsEnabled": {
                    "title": "Allow Non-SSL Connections",
                    "description": "Specifies if non-SSL connections are allowed.",
                    "type": "boolean",
                    "default": false
                },
                "allowDynamicRecordSizing": {
                    "title": "Allow Dynamic Record Sizing",
                    "description": "Enables or disables dynamic application record sizing.",
                    "type": "boolean",
                    "default": false
                },
                "dataZeroRoundTripTime": {
                    "title": "Data Zero Round Trip Time",
                    "description": "Specifies if TLSv1.3 should accept 0-RTT with early data, with or without anti-replay. To protect against packet replay, F5 recommends that you enable anti-replay. The default value is disabled, which means TLSv1.3 will discard any early data.",
                    "type": "string",
                    "enum": [
                        "disabled",
                        "enabled-with-anti-replay",
                        "enabled-no-anti-replay"
                    ],
                    "default": "disabled"
                },
                "renegotiateMaxRecordDelay": {
                    "title": "Renegotiate Max Record Delay",
                    "description": "Specifies the maximum number of SSL records that the traffic management system can receive before it renegotiates an SSL session. After the system receives this number of SSL records, it closes the connection. This setting applies to client profiles only.",
                    "oneOf": [
                        {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 4294967295
                        },
                        {
                            "type": "string",
                            "const": "indefinite"
                        }
                    ],
                    "default": "indefinite"
                },
                "renegotiatePeriod": {
                    "title": "Renegotiate Period",
                    "description": "Specifies the number of seconds required to renegotiate an SSL session.",
                    "oneOf": [
                        {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 4294967295
                        },
                        {
                            "type": "string",
                            "const": "indefinite"
                        }
                    ],
                    "default": "indefinite"
                },
                "renegotiateSize": {
                    "title": "Renegotiate Size",
                    "description": "Specifies the size of the application data, in megabytes, that is transmitted over the secure channel. If the size of the data is higher than this value, the traffic management system must renegotiate the SSL session.",
                    "oneOf": [
                        {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 4294967295
                        },
                        {
                            "type": "string",
                            "const": "indefinite"
                        }
                    ],
                    "default": "indefinite"
                },
                "sslSignHash": {
                    "title": "SSL Sign Hash",
                    "description": "Specifies SSL sign hash algorithm which is used to sign and verify SSL Server Key Exchange and Certificate Verify messages for the specified SSL profiles.",
                    "type": "string",
                    "enum": [
                        "any",
                        "sha1",
                        "sha256",
                        "sha384"
                    ],
                    "default": "any"
                },
                "handshakeTimeout": {
                    "title": "Handshake Timeout",
                    "description": "Specifies the handshake timeout in seconds.",
                    "oneOf": [
                        {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 4294967295
                        },
                        {
                            "type": "string",
                            "const": "indefinite"
                        }
                    ],
                    "default": 10
                }
            },
            "additionalProperties": false,
            "dependencies": {
                "forwardProxyBypassAllowlist": {
                    "properties": {
                        "forwardProxyEnabled": { "const": true },
                        "forwardProxyBypassEnabled": { "const": true }
                    }
                },
                "smtpsStartTLS": {
                    "not": {
                        "required": ["ldapStartTLS"]
                    }
                }
            },
            "allOf": [
                {
                    "if": {
                        "properties": { "c3dEnabled": { "const": true } },
                        "required": ["c3dEnabled"]
                    },
                    "then": {
                        "properties": { "authenticationMode": { "enum": [ "request", "require" ] } }
                    }
                },
                {
                    "if": {
                        "properties": { "authenticationMode": { "enum": [ "request", "require" ] } },
                        "required": ["authenticationMode"]
                    },
                    "then": {
                        "required": [ "authenticationTrustCA" ]
                    }
                },
                {
                    "if": {
                        "required": [
                            "ciphers"
                        ]
                    },
                    "then": {
                        "not": {
                            "required": [
                                "cipherGroup"
                            ]
                        }
                    }
                },
                {
                    "if": {
                        "not": {
                            "required": [
                                "ciphers",
                                "cipherGroup"
                            ]
                        }
                    },
                    "then": {
                        "properties": {
                            "ciphers": {
                                "default": "DEFAULT"
                            }
                        }
                    }
                }
            ],
            "required": [ "class", "certificates" ]
        },


        "TLS_Client": {
            "title": "TLS_Client",
            "description": "TLS client parameters (connections leaving ADC)",
            "type": "object",

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "TLS_Client"
                },
                "label": { "$ref": "#/definitions/Label" },
                "remark": { "$ref": "#/definitions/Remark" },

                "sendSNI": {
                    "title": "Send SNI",
                    "description": "FQDN to send in SNI (optional)",
                    "type": "string",
                    "format": "hostname",
                    "default": "none"
                },
                "sniDefault": {
                    "title": "Default SNI",
                    "description": "When true, this profile is the default SSL profile when a client connection does not specify a known server name, or does not specify any server name at all. The default value is false",
                    "type": "boolean",
                    "default": false
                },
                "requireSNI": {
                    "title": "Require SNI",
                    "description": "When a client sends no or unknown SNI and Require SNI is false (default), the system uses the primary certificate, otherwise the system rejects the client",
                    "type": "boolean",
                    "default": false
                },
                "alertTimeout": {
                    "title": "Alert Timeout",
                    "description": "Specifies the duration of time, in seconds, for the system to try to close an SSL connection before resetting the connection. The default is 'indefinite'. You can also specify 'immediate', or an integer.",
                    "oneOf": [
                        {
                            "type": "integer",
                            "maximum": 4294967294,
                            "minimum": 1
                        },
                        {
                            "type": "string",
                            "enum": [
                                "immediate",
                                "indefinite"
                            ]
                        }
                    ],
                    "default": "indefinite"
                },
                "cacheTimeout": {
                    "title": "Cache Timeout",
                    "description": "Sets the cache timeout (in seconds)",
                    "type": "integer",
                    "maximum": 86400,
                    "minimum": 0,
                    "default": 3600
                },
                "ciphers": {
                    "title": "Ciphers",
                    "description": "Ciphersuite selection string. ciphers and cipherGroup are mutually exclusive, only use one.",
                    "type": "string"
                },
                "cipherGroup": {
                    "description": "Pointer to a cipherGroup. cipherGroup and ciphers are mutually exclusive, only use one.",
                    "$ref": "#/definitions/Pointer_Cipher_Group"
                },
                "authenticationFrequency": {
                    "title": "Authentication frequency",
                    "description": "Client certificate authentication frequency",
                    "type": "string",
                    "enum": [ "one-time", "every-time" ],
                    "default": "one-time"
                },
                "serverName": {
                    "title": "Server name",
                    "description": "FQDN which server certificate must match (optional)",
                    "type": "string",
                    "format": "hostname",
                    "default": "none"
                },
                "validateCertificate": {
                    "title": "Validate certificate",
                    "description": "If false (default) accept any cert from server, else validate server cert against trusted CA bundle",
                    "type": "boolean",
                    "default": false
                },
                "trustCA": {
                    "title": "Trusted CA bundle",
                    "description": "CA's trusted to validate server certificate; 'generic' (default) or else BIG-IP AS3 pointer to declaration of CA Bundle",
                    "if": { "not": { "type": "object" } },
                    "then": {
                        "type": "string",
                        "enum": [ "generic", "none" ],
                        "default": "generic"
                    },
                    "else": {
                        "properties": {
                            "use": {
                                "title": "Use",
                                "description": "BIG-IP AS3 pointer to declaration of CA bundle",
                                "type": "string",
                                "minLength": 1,
                                "f5PostProcess": {
                                    "tag": "pointer",
                                    "data": {
                                        "properties": {
                                            "class": { "const": "CA_Bundle" }
                                        },
                                        "required": [ "class" ]
                                    }
                                }
                            },
                            "bigip": {
                                "title": "BIG-IP CA bundle",
                                "description": "Pathname of existing BIG-IP CA bundle",
                                "type": "string",
                                "format": "f5bigip"
                            }
                        },
                        "additionalProperties": false,
                        "minProperties": 1,
                        "maxProperties": 1,
                        "f5PostProcess": {
                            "tag": "bigComponent",
                            "data": ["query sys file ssl-cert"]
                        }
                    }
                },
                "ignoreExpired": {
                    "title": "Ignored expired",
                    "description": "If false (default) drop connections with expired server certificates",
                    "type": "boolean",
                    "default": false
                },
                "ignoreUntrusted": {
                    "title": "Ignored untrusted",
                    "description": "If false (default) drop connections with untrusted server certificates",
                    "type": "boolean",
                    "default": false
                },
                "sessionTickets": {
                    "title": "Session tickets",
                    "description": "If false (default) do not use rfc5077 session tickets",
                    "type": "boolean",
                    "default": false
                },
                "clientCertificate": {
                    "title": "Client certificate",
                    "description": "BIG-IP AS3 pointer to client Certificate declaration (optional)",
                    "type": "string",
                    "f5PostProcess": {
                        "tag": "pointer",
                        "data": {
                            "properties": {
                                "class": { "const": "Certificate" }
                            },
                            "required": [ "class" ]
                        }
                    }
                },
                "crlFile": {
                    "title": "Certificate Revocation List (CRL) File",
                    "description": "Specifies the name of a file containing a list of revoked client certificates",
                    "allOf": [
                        { "$ref": "#/definitions/Pointer_SSL_CRL_File" }
                    ]
                },
                "allowExpiredCRL": {
                    "title": "Allow Expired CRL",
                    "description": "Specifies if the CRL can be used even if it has expired",
                    "type": "boolean",
                    "default": false
                },
                "c3dCertificateAuthority": {
                    "title": "C3D Certificate Authority",
                    "description": "Pointer to a Certificate class which specifies the Certificate Authority values for C3D",
                    "type": "string",
                    "f5PostProcess": {
                        "tag": "pointer",
                        "data": {
                            "properties": {
                                "class": { "const": "Certificate" }
                            },
                            "required": [ "class" ]
                        }
                    }
                },
                "c3dCertificateExtensions": {
                    "title": "C3D Certificate Extensions",
                    "description": "Specifies the custom extension OID of the client certificates to be included in the generated certificates using SSL C3D",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": ["basic-constraints", "extended-key-usage", "key-usage", "subject-alternative-name"]
                    },
                    "default": [
                        "basic-constraints", "extended-key-usage", "key-usage", "subject-alternative-name"
                    ]
                },
                "c3dCertificateLifespan": {
                    "title": "C3D Certificate Lifespan",
                    "description": "Specifies the lifespan of the certificate generated using the SSL client certificate constrained delegation",
                    "type": "integer",
                    "maximum": 8760,
                    "minimum": 0,
                    "default": 24
                },
                "c3dEnabled": {
                    "title": "C3D Enabled",
                    "description": "Enables or disables SSL Client certificate constrained delegation (C3D). Using C3D eliminates the need for requiring users to provide credentials twice for certain authentication actions",
                    "type": "boolean",
                    "default": false
                },
                "forwardProxyEnabled": {
                    "title": "Forward Proxy Enabled",
                    "description": "Enables or disables (default) SSL forward proxy",
                    "type": "boolean",
                    "default": false
                },
                "forwardProxyBypassEnabled": {
                    "title": "Forward Proxy Bypass Enabled",
                    "description": "Enables or disables (default) SSL forward proxy bypass",
                    "type": "boolean",
                    "default": false
                },
                "ldapStartTLS": {
                    "title": "Server-LDAP Profile",
                    "description": "Creates a client LDAP profile with the specified activation mode STARTTLS.",
                    "type": "string",
                    "enum": [ "none", "allow", "require" ]
                },
                "insertEmptyFragmentsEnabled": {
                    "title": "Insert Empty Fragments Enabled",
                    "description": "Enables a countermeasure against an SSL 3.0/TLS 1.0 protocol vulnerability affecting CBC ciphers. These ciphers cannot be handled by certain broken SSL implementations.",
                    "type": "boolean",
                    "default": false
                },
                "singleUseDhEnabled": {
                    "title": "Single Use DH Enabled",
                    "description": "Creates a new key when using temporary/ephemeral DH parameters. This option must be used to prevent small subgroup attacks, when the DH parameters were not generated using strong primes (for example. when using DSA-parameters). If strong primes were used, it is not strictly necessary to generate a new DH key during each handshake, but F5 Networks recommends it. Enable the Single DH Use option whenever temporary or ephemeral DH parameters are used.",
                    "type": "boolean",
                    "default": false
                },
                "tls1_3Enabled": {
                    "title": "TLS 1.3",
                    "description": "Allow TLS 1.3 Ciphers. Note: tls1_3Enabled is only supported in tmos version 14.0+.",
                    "type": "boolean",
                    "default": false
                },
                "tls1_2Enabled": {
                    "title": "TLS 1.2",
                    "description": "Allow TLS 1.2 Ciphers.",
                    "type": "boolean",
                    "default": true
                },
                "tls1_1Enabled": {
                    "title": "TLS 1.1",
                    "description": "Allow TLS 1.1 Ciphers.",
                    "type": "boolean",
                    "default": true
                },
                "tls1_0Enabled": {
                    "title": "TLS 1.0",
                    "description": "Allow TLS 1.0 Ciphers.",
                    "type": "boolean",
                    "default": true
                },
                "renegotiationEnabled": {
                    "title": "Renegotiation",
                    "description": "Controls on a per-connection basis how the system responds to mid-stream SSL reconnection requests.",
                    "type": "boolean",
                    "default": true
                },
                "retainCertificateEnabled": {
                    "title": "Retain Certificate",
                    "description": "When enabled, server certificate is retained in SSL session.",
                    "type": "boolean",
                    "default": true
                },
                "sslEnabled": {
                    "title": "SSL",
                    "description": "Allow SSL protocol",
                    "type": "boolean",
                    "default": true
                },
                "ssl3Enabled": {
                    "title": "SSL v3",
                    "description": "Allow SSL v3 protocol",
                    "type": "boolean",
                    "default": true
                },
                "proxySslEnabled": {
                    "title": "Proxy SSL Enabled",
                    "description": "When enabled, further modification of application traffic within an SSL tunnel is allowed while still allowing the server to perform necessary authorization, authentication, and auditing steps. Requires a corresponding TLS_Server with this enabled to perform transparent SSL decryption.",
                    "type": "boolean",
                    "default": false
                },
                "proxySslPassthroughEnabled": {
                    "title": "Proxy SSL Passthrough Enabled",
                    "description": "When enabled, it allows Proxy SSL to passthrough the traffic when ciphersuite negotiated between the client and server is not supported. Requires a corresponding TLS_Server with this enabled to perform transparent SSL decryption.",
                    "type": "boolean",
                    "default": false
                },
                "secureRenegotiation": {
                    "title": "Secure Renegotiation",
                    "description": "Specifies the secure renegotiation mode. When set to require, any connection to an unpatched server will be aborted. For TLS_Client, require and require-strict are the same. When set to request, connections to unpatched servers will be permitted. Setting to request is not recommended as it is subject to active man-in-the-middle attacks.",
                    "type": "string",
                    "enum": [ "request", "require", "require-strict" ],
                    "default": "require-strict"
                },
                "uncleanShutdownEnabled": {
                    "title": "Unclean Shutdown Enabled",
                    "description": "When enabled, the profile performs unclean shutdowns of all SSL connections, which means the underlying TCP connections are closed without exchanging the required SSL shutdown alerts.",
                    "type": "boolean",
                    "default": true
                },
                "dtlsEnabled": {
                    "title": "DTLS Enabled",
                    "description": "Allows the DTLS protocol.",
                    "type": "boolean",
                    "default": true
                },
                "dtls1_2Enabled": {
                    "title": "DTLS1.2 Enabled",
                    "description": "Allows the DTLS 1.2 protocol.",
                    "type": "boolean",
                    "default": true
                },
                "dataZeroRoundTripTime": {
                    "title": "Data Zero Round Trip Time",
                    "description": "Specifies if TLSv1.3 should send 0-RTT early data when available.",
                    "type": "boolean",
                    "default": false
                },
                "renegotiatePeriod": {
                    "title": "Renegotiate Period",
                    "description": "Specifies the number of seconds from the initial connect time after which the system renegotiates an SSL session. The default value is indefinite, which means that you do not want the system to renegotiate SSL sessions.",
                    "oneOf": [
                        {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 4294967295
                        },
                        {
                            "type": "string",
                            "const": "indefinite"
                        }
                    ],
                    "default": "indefinite"
                },
                "renegotiateSize": {
                    "title": "Renegotiate Size",
                    "description": "Specifies a throughput size, in megabytes, of SSL renegotiation. This option forces the traffic management system to renegotiate an SSL session based on the size, in megabytes, of application data that is transmitted over the secure channel. The default value is indefinite, which specifies that you do not want a throughput size.",
                    "oneOf": [
                        {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 4294967295
                        },
                        {
                            "type": "string",
                            "const": "indefinite"
                        }
                    ],
                    "default": "indefinite"
                },
                "sslSignHash": {
                    "title": "SSL Sign Hash",
                    "description": "Specifies SSL sign hash algorithm which is used to sign and verify SSL Server Key Exchange and Certificate Verify messages for the specified SSL profiles.",
                    "type": "string",
                    "enum": [
                        "any",
                        "sha1",
                        "sha256",
                        "sha384"
                    ],
                    "default": "any"
                },
                "handshakeTimeout": {
                    "title": "Handshake Timeout",
                    "description": "Specifies the handshake timeout in seconds.",
                    "oneOf": [
                        {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 4294967295
                        },
                        {
                            "type": "string",
                            "const": "indefinite"
                        }
                    ],
                    "default": 10
                }
            },
            "allOf": [
                {
                    "if": {
                        "required": [
                            "ciphers"
                        ]
                    },
                    "then": {
                        "not": {
                            "required": [
                                "cipherGroup"
                            ]
                        }
                    }
                },
                {
                    "if": {
                        "not": {
                            "required": [
                                "ciphers",
                                "cipherGroup"
                            ]
                        }
                    },
                    "then": {
                        "properties": {
                            "ciphers": {
                                "default": "DEFAULT"
                            }
                        }
                    }
                }
            ],
            "additionalProperties": false,
            "required": [ "class" ]
        },

        "Sender_Tag_Mapping": {
            "title": "Sender and Tag Data Group Mapping",
            "description": "Establishes a mapping between a sender value and data group containing tag substitution values",
            "type": "object",

            "properties": {
                "senderId": {
                    "title": "Sender ID",
                    "description": "Specifies sender ID value",
                    "type": "string"
                },
                "tagDataGroup": {
                    "description": "Specifies tag substitution data group",
                    "type": "object",
                    "properties": {
                        "use": {
                            "title": "Use",
                            "description": "BIG-IP AS3 pointer to data group if any (declared separately)",
                            "type": "string",
                            "minLength": 1,
                            "f5PostProcess": {
                                "tag": "pointer",
                                "data": {
                                    "properties": {
                                        "class": { "const": "Data_Group" }
                                    },
                                    "required": [ "class" ]
                                }
                            }
                        },
                        "bigip": {
                            "title": "BIG-IP data group",
                            "description": "Pathname of existing BIG-IP data group",
                            "type": "string",
                            "format": "f5bigip"
                        }
                    },

                    "dependencies": {
                        "bigip": {
                            "properties": {
                                "isExternal": {
                                    "title": "External data group",
                                    "description": "Toggles whether existing data group is internal or external",
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },

                    "if": { "properties": { "isExternal" : { "const": true } } },
                    "then": {
                        "f5PostProcess": {
                            "tag": "bigComponent",
                            "data": ["query ltm data-group external"]
                        }
                    },
                    "else": {
                        "f5PostProcess": {
                            "tag": "bigComponent",
                            "data": ["query ltm data-group internal"]
                        }
                    },
                    "minProperties": 1,
                    "maxProperties": 2
                }
            },
            "additionalProperties": false,
            "required": [ "senderId", "tagDataGroup" ]
        },

        "FIX_Profile": {
            "title": "FIX_Profile",
            "type": "object",
            "description": "Configures a Financial Information eXchange Protocol (FIX) profile",

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "FIX_Profile"
                },
                "label": { "$ref": "#/definitions/Label" },
                "remark": { "$ref": "#/definitions/Remark" },

                "parentProfile": {
                    "description": "Specifies the name of the profile object to inherit the settings from",
                    "allOf": [
                        { "$ref": "#/definitions/Pointer_FIX_Profile" }
                    ],
                    "default": { "bigip": "/Common/fix" }
                },
                "errorAction": {
                    "title": "Error Action",
                    "description": "Specifies the error handling method",
                    "type": "string",
                    "enum": [ "dont-forward", "drop-connection" ],
                    "default": "dont-forward"
                },
                "fullLogonParsingEnabled": {
                    "title": " Fully Parse Logon Message",
                    "description": "Enables or disables logon message as always fully parsed. Other messages are parsed according to the configuration of Quick Parsing",
                    "type": "boolean",
                    "default": true
                },
                "messageLogPublisher": {
                    "title": "Message Log Publisher",
                    "description": "Specifies the publisher for message logging",
                    "allOf": [ { "$ref": "#/definitions/Pointer_Log_Publisher" } ]
                },
                "reportLogPublisher": {
                    "description": "Specifies the publisher for error messages and status reports",
                    "allOf": [ { "$ref": "#/definitions/Pointer_Log_Publisher" } ]
                },
                "quickParsingEnabled": {
                    "title": "Quick Parsing",
                    "description": "Enables or disables quick parsing which parses the basic standard fields and validates message length and checksum",
                    "type": "boolean",
                    "default": false
                },
                "responseParsingEnabled": {
                    "title": "Response Parsing",
                    "description": "Enables or disables response parsing which parses the messages from the FIX server. Applies the same parser configuration and error handling at server side as at client side. If not enabled, server side messages are directly passed through",
                    "type": "boolean",
                    "default": false
                },
                "statisticsSampleInterval": {
                    "title": "Statistics Sample Interval",
                    "description": "Specifies the sample interval of the message rate in seconds",
                    "type": "integer",
                    "default": 20,
                    "minimum": 10,
                    "maximum": 4294967295
                },
                "senderTagMappingList": {
                    "title": "Sender and Tag Substitution Mapping",
                    "description": "Specifies the mappings between sender ID and tag substitution data group.",
                    "type": "array",
                    "items": { "$ref": "#/definitions/Sender_Tag_Mapping" }
                }
            },
            "additionalProperties": false,
            "required": [ "class" ]
        },

        "RTSP_Profile": {
            "title": "RTSP_Profile",
            "type": "object",
            "description": "Real Time Streaming Protocol Profile",

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "RTSP_Profile"
                },
                "label": { "$ref": "#/definitions/Label" },
                "remark": { "$ref": "#/definitions/Remark" },

                "idleTimeout": {
                    "title": "Idle Timeout",
                    "description": "The number of seconds that a Real-time Transport Protocol (RTP) connection is idle before the connection is eligible for deletion",
                    "if": { "type": "integer" },
                    "then": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "else": {
                        "type": "string",
                        "enum": [
                            "indefinite",
                            "immediate"
                        ]
                    },
                    "default": 300
                },
                "maxHeaderSize": {
                    "title": "Maximum Header Size",
                    "description": "The largest RTSP request or response header, in bytes, that the RTSP filter accepts before dropping the connection",
                    "type": "integer",
                    "default": 4096,
                    "minimum": 0,
                    "maximum": 4294967295
                },
                "maxQueuedData": {
                    "title": "Maximum Queued Data",
                    "description": "The maximum amount of data, in bytes, that the RTSP filter buffers before dropping the connection",
                    "type": "integer",
                    "default": 32768,
                    "minimum": 0,
                    "maximum": 4294967295
                },
                "unicastRedirect": {
                    "title": "Unicast Redirect",
                    "description": "When enabled specifies that the client can select the destination port for the streamed data. The destination address for the data is the source of the request.",
                    "type": "boolean",
                    "default": false
                },
                "multicastRedirect": {
                    "title": "Multicast Redirect",
                    "description": "When enabled, if you are using multicast streams, specifies that the client has permission to supply a different destination IP address for the streamed data",
                    "type": "boolean",
                    "default": false
                },
                "sessionReconnect": {
                    "title": "Session Reconnect",
                    "description": "When enabled specifies that the system persists a resumed control connection to the correct server. Typical clients do not support this behavior.",
                    "type": "boolean",
                    "default": false
                },
                "realHTTPPersistence": {
                    "title": "Real HTTP Persistence",
                    "description": "When enabled specifies that the system automatically persists Real Networks-tunneled RTSP data over HTTP, which is over the RTSP port. When disabled, a user can override the default behavior with an iRule.",
                    "type": "boolean",
                    "default": true
                },
                "checkSource": {
                    "title": "Check Source",
                    "description": "When true the system uses the source attribute in the transport header to establish the target address of the RTP stream, and before the response is forwarded to the client, updates the value of the source attribute to be the virtual address of the BIG-IP system. When false the system does not change the source attribute.",
                    "type": "boolean",
                    "default": true
                },
                "proxy": {
                    "title": "Proxy",
                    "description": "Specifies whether the RTSP profile is associated with an RTSP proxy configuration",
                    "type": "string",
                    "enum": [ "external", "internal", "none" ],
                    "default": "none"
                },
                "proxyHeader": {
                    "title": "Proxy Header",
                    "description": "When set, specifies the name of the header in the RTSP proxy configuration that is passed from the client-side virtual server to the server-side virtual server. Note that the name of the header must begin with X-. To use the proxyHeader option, you must specify a value for the proxy option. Note that the system removes this header from the request prior to sending the request to the server for processing.",
                    "type": "string"
                },
                "RTPPort": {
                    "title": "RTP Port",
                    "description": "The number of the port to use for the RTP service",
                    "type": "integer",
                    "default": 0,
                    "minimum": 0,
                    "maximum": 65535
                },
                "RTCPPort": {
                    "title": "RTCP Port",
                    "description": "The number of the port to use for the Real Time Control Protocol (RTCP) service. RTCP allows monitoring of real-time data delivery.",
                    "type": "integer",
                    "default": 0,
                    "minimum": 0,
                    "maximum": 65535
                },
                "algLogProfile": {
                    "description": "ALG log profile pointer",
                    "allOf": [
                        {
                            "f5PostProcess": {
                                "tag": "modules",
                                "data": ["cgnat"]
                            }
                        },
                        {
                            "$ref": "#/definitions/Pointer_ALG_Log_Profile"
                        }
                    ]
                },
                "logPublisher": {
                    "description": "Log publisher pointer",
                    "allOf": [
                        {
                            "f5PostProcess": {
                                "tag": "modules",
                                "data": ["cgnat"]
                            }
                        },
                        {
                            "$ref": "#/definitions/Pointer_Log_Publisher"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "required": [ "class" ],
            "dependencies": {
                "algLogProfile": {
                    "required": ["logPublisher"]
                },
                "logPublisher": {
                    "required": ["algLogProfile"]
                }
            }
        },

        "SIP_Profile": {
            "title": "SIP_Profile",
            "type": "object",
            "description": "Configures a profile you can use to manage Session Initiation Protocol (SIP) traffic.",

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "SIP_Profile"
                },
                "label": { "$ref": "#/definitions/Label" },
                "remark": { "$ref": "#/definitions/Remark" }
            },
            "additionalProperties": false,
            "required": [ "class" ]
        },

        "Statistics_Profile": {
            "title": "Statistics Profile",
            "type": "object",
            "description": "User-defined statistics fields. This object assigns field names for up to 32 fields. You can then use these field names from an iRule to record values.",

            "patternProperties": {
                "^field(3[0-2]|[1-2][0-9]|[1-9])$": {
                    "title": "Field Name",
                    "description": "This regular expression represents 32 field properties named 'field1' through 'field32'.",
                    "type": "string"
                }
            },

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "Statistics_Profile"
                },
                "label": { "$ref": "#/definitions/Label" },
                "remark": { "$ref": "#/definitions/Remark" }
            },

            "additionalProperties": false,
            "required": [ "class" ]
        },

        "TFTP_Profile": {
            "title": "TFTP_Profile",
            "type": "object",
            "description": "Trivial File Transer Protocol (TFTP) profile",

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "TFTP_Profile"
                },
                "label": { "$ref": "#/definitions/Label" },
                "remark": { "$ref": "#/definitions/Remark" },
                "idleTimeout": {
                    "description": "Specifies an idle timeout in seconds. This setting specifies the number of seconds that a connection is idle before the connection is eligible for deletion.",
                    "if": { "type": "integer" },
                    "then": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "else": {
                        "type": "string",
                        "const": "indefinite"
                    },
                    "default": 30
                },
                "algLogProfile": {
                    "description": "ALG log profile pointer",
                    "allOf": [
                        {
                            "f5PostProcess": {
                                "tag": "modules",
                                "data": ["cgnat"]
                            }
                        },
                        {
                            "$ref": "#/definitions/Pointer_ALG_Log_Profile"
                        }
                    ]
                },
                "logPublisher": {
                    "description": "Log publisher pointer",
                    "allOf": [
                        {
                            "f5PostProcess": {
                                "tag": "modules",
                                "data": ["cgnat"]
                            }
                        },
                        {
                            "$ref": "#/definitions/Pointer_Log_Publisher"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "required": [ "class" ],
            "dependencies": {
                "algLogProfile": {
                    "required": ["logPublisher"]
                },
                "logPublisher": {
                    "required": ["algLogProfile"]
                }
            }
        },

        "FTP_Profile": {
            "title": "FTP_Profile",
            "type": "object",
            "description": "File Transfer Protocol (FTP) profile",

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "FTP_Profile"
                },
                "label": { "$ref": "#/definitions/Label" },
                "remark": { "$ref": "#/definitions/Remark" },
                "port": {
                    "description": "Specifies a service for the data channel port used for this profile",
                    "type": "integer",
                    "default": 20,
                    "minimum": 0,
                    "maximum": 65535
                },
                "ftpsMode": {
                    "description": "Specifies the policy for explicit FTPS negotiation on FTP command channel",
                    "type": "string",
                    "enum": ["disallow", "allow", "require"],
                    "default": "disallow"
                },
                "enforceTlsSessionReuseEnabled": {
                    "description": "Enforce data connection to reuse TLS session",
                    "type": "boolean",
                    "default": false,
                    "f5PostProcess": {
                        "tag": "minVersion",
                        "data": "14.0"
                    }
                },
                "activeModeEnabled": {
                    "description": "Specifies if the profile should allow FTP active transfer mode",
                    "type": "boolean",
                    "default": true,
                    "f5PostProcess": {
                        "tag": "minVersion",
                        "data": "14.0"
                    }
                },
                "securityEnabled": {
                    "description": "Specifies whether to enable or disable secure FTP traffic for the BIG-IP Application Security Manager",
                    "type": "boolean",
                    "default": false
                },
                "translateExtendedEnabled": {
                    "description": "Specifies if the profile should automatically translate RFC2428 extended requests EPSV and EPRT to PASV and PORT when communicating with IPv4servers",
                    "type": "boolean",
                    "default": true
                },
                "inheritParentProfileEnabled": {
                    "description": "Specifies if the FTP data channel should inherit the TCP profile used by the control channel",
                    "type": "boolean",
                    "default": false
                },
                "algLogProfile": {
                    "description": "ALG log profile pointer",
                    "allOf": [
                        {
                            "f5PostProcess": {
                                "tag": "modules",
                                "data": ["cgnat"]
                            }
                        },
                        {
                            "$ref": "#/definitions/Pointer_ALG_Log_Profile"
                        }
                    ]
                },
                "logPublisher": {
                    "description": "Log publisher pointer",
                    "allOf": [
                        {
                            "f5PostProcess": {
                                "tag": "modules",
                                "data": ["cgnat"]
                            }
                        },
                        {
                            "$ref": "#/definitions/Pointer_Log_Publisher"
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "required": [ "class" ],
            "dependencies": {
                "algLogProfile": {
                    "required": ["logPublisher"]
                },
                "logPublisher": {
                    "required": ["algLogProfile"]
                }
            }
        },

        "HTML_Rule": {
            "title": "HTML_Rule",
            "type": "object",
            "description": "HTML Rule with configurable options",

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "HTML_Rule"
                },
                "label": { "$ref": "#/definitions/Label" },
                "remark": { "$ref": "#/definitions/Remark" },
                "ruleType": {
                    "title": "Rule type",
                    "description": "Type of rule",
                    "type": "string",
                    "enum": [
                        "comment-raise-event",
                        "comment-remove",
                        "tag-append-html",
                        "tag-prepend-html",
                        "tag-raise-event",
                        "tag-remove",
                        "tag-remove-attribute"
                    ]
                }
            },

            "allOf": [
                {
                    "if": { "properties": { "ruleType": { "const": "tag-append-html" } } },
                    "then": { "$ref": "#/definitions/HTML_Rule_TagAppendHTML" }
                },
                {
                    "if": { "properties": { "ruleType": { "const": "tag-prepend-html" } } },
                    "then": { "$ref": "#/definitions/HTML_Rule_TagPrependHTML" }
                },
                {
                    "if": { "properties": { "ruleType": { "const": "tag-raise-event" } } },
                    "then": { "$ref": "#/definitions/HTML_Rule_TagRaiseEvent" }
                },
                {
                    "if": { "properties": { "ruleType": { "const": "tag-remove" } } },
                    "then": { "$ref": "#/definitions/HTML_Rule_TagRemove" }
                },
                {
                    "if": { "properties": { "ruleType": { "const": "tag-remove-attribute" } } },
                    "then": { "$ref": "#/definitions/HTML_Rule_TagRemoveAttribute" }
                }
            ],

            "required": [ "class", "ruleType" ]
        },

        "HTML_Rule_Match_Attribute_Optional": {
            "title": "HTML_Rule_Match_Attribute_Optional",
            "description": "Matches on the specified tag name, attribute name, and attribute value. Attribute name and value are optional.",
            "type": "object",

            "properties": {
                "match": {
                    "title": "Match",
                    "description": "Properties the rule is to match",
                    "type": "object",
                    "properties": {
                        "attributeName": {
                            "title": "Attribute Name",
                            "description": "Name of attribute",
                            "type": "string"
                        },
                        "attributeValue": {
                            "title": "Attribute Value",
                            "description": "Value of attribute",
                            "type": "string"
                        },
                        "tagName": {
                            "title": "Tag Name",
                            "description": "Name of tag",
                            "type": "string"
                        }
                    },
                    "dependencies": {
                        "attributeValue": {
                            "required": [ "attributeName" ]
                        }
                    },
                    "required": [ "tagName" ]
                }
            },

            "required": [ "match" ]
        },

        "HTML_Rule_Match_Attribute_Required": {
            "title": "HTML_Rule_Match_Attribute_Required",
            "description": "Matches on the specified tag name, attribute name, and attribute value. Attribute name and value are required.",
            "type": "object",

            "properties": {
                "match": {
                    "title": "Match",
                    "description": "Properties the rule is to match",
                    "type": "object",
                    "properties": {
                        "attributeName": {
                            "title": "Attribute Name",
                            "description": "Name of attribute",
                            "type": "string"
                        },
                        "attributeValue": {
                            "title": "Attribute Value",
                            "description": "Value of attribute",
                            "type": "string"
                        },
                        "tagName": {
                            "title": "Tag Name",
                            "description": "Name of tag",
                            "type": "string"
                        }
                    },
                    "required": [ "tagName", "attributeName", "attributeValue" ]
                }
            },

            "required": [ "match" ]
        },

        "HTML_Rule_TagAppendHTML": {
            "title": "Append HTML HTML_Rule",
            "description": "Matches on the specified tag name and optional attribute name and attribute value, and then appends the specified HTML content to the tag delimiter.",
            "type": "object",

            "properties": {
                "content": {
                    "title": "Content",
                    "description": "HTML content to append to tag delimiter",
                    "type": "string"
                }
            },

            "allOf": [{ "$ref": "#/definitions/HTML_Rule_Match_Attribute_Optional" }],
            "required": [ "content" ]
        },

        "HTML_Rule_TagPrependHTML": {
            "title": "HTML_Rule_TagPrependHTML",
            "description": "Matches on the specified tag name and optional attribute name and attribute value, and then prepends the specified HTML content to the tag delimiter.",
            "type": "object",

            "properties": {
                "content": {
                    "title": "Content",
                    "description": "HTML content to prepend to tag delimiter",
                    "type": "string"
                }
            },

            "allOf": [{ "$ref": "#/definitions/HTML_Rule_Match_Attribute_Optional" }],
            "required": [ "content" ]
        },

        "HTML_Rule_TagRaiseEvent": {
            "title": "HTML_Rule_TagRaiseEvent",
            "description": "Matches on the specified tag name and optional attribute name and attribute value, and then raises an event.",
            "type": "object",

            "allOf": [{ "$ref": "#/definitions/HTML_Rule_Match_Attribute_Optional" }]
        },

        "HTML_Rule_TagRemove": {
            "title": "HTML_Rule_TagRemove",
            "description": "Matches on the specified tag name and optional attribute name and attribute value, and then removes the tag.",
            "type": "object",

            "allOf": [{ "$ref": "#/definitions/HTML_Rule_Match_Attribute_Optional" }]
        },

        "HTML_Rule_TagRemoveAttribute": {
            "title": "Append HTML HTML_Rule",
            "description": "Matches on the specified tag name, attribute name, and attribute value, and then removes a specified attribute. Tag name, attribute name, and value are required.",
            "type": "object",

            "properties": {
                "attributeName": {
                    "title": "Attriute Name",
                    "description": "Name of the attribute to be removed",
                    "type": "string"
                }
            },

            "allOf": [{ "$ref": "#/definitions/HTML_Rule_Match_Attribute_Required" }],
            "required": [ "attributeName" ]
        },

        "HTML_Profile": {
            "title": "HTML_Profile",
            "type": "object",
            "description": "HTML profile with configurable options",

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "HTML_Profile"
                },
                "label": { "$ref": "#/definitions/Label" },
                "remark": { "$ref": "#/definitions/Remark" },

                "contentDetectionEnabled": {
                    "title": "Content Detection Enabled",
                    "description": "Scans initial HTTP payload to look for HTML signatures and enables HTML profile if HTML-like patterns are detected",
                    "type": "boolean",
                    "default": false
                },
                "contentSelection": {
                    "title": "Content Selection",
                    "description": "Matches content-type from response header against a list of the content-types and enables HTML profile if a match is found",
                    "type": "array",
                    "items": {
                        "title": "Content Type",
                        "type": "string"
                    },
                    "default": [
                        "text/html",
                        "text/xhtml"
                    ],
                    "uniqueItems": true
                },
                "rules": {
                    "title": "HTML Rules",
                    "description": "HTML Rules followed by the profile",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Pointer_HTML_Rule"
                    }
                }
            },
            "required": [ "class" ],
            "additionalProperties": false
        },

        "WebSocket_Profile": {
            "title": "WebSocket_Profile",
            "type": "object",
            "description": "WebSocket profile with configurable options",

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "WebSocket_Profile"
                },

                "label": { "$ref": "#/definitions/Label" },
                "remark": { "$ref": "#/definitions/Remark" },

                "masking": {
                    "title": "Masking",
                    "description": "Specifies the masking operation for WebSocket frames",
                    "type": "string",
                    "enum": [ "preserve", "unmask", "remask", "selective"],
                    "default": "selective"
                },

                "compressMode": {
                    "title": "Compress Mode",
                    "description": "Available when TMOS version is 16.1 or newer. Specifies the mode that controls what compression operations are performed. Setting 'masking' to 'preserve' and 'compressMode' to 'typed' will not be allowed because it results in an invalid configuration.",
                    "type": "string",
                    "enum": [ "preserved", "typed"],
                    "default": "preserved"
                },
                "compression": {
                    "title": "Compression",
                    "description": "Available when TMOS version is 16.1 or newer and used when compressMode is 'typed'. Specifies whether compress will be negotiated with the endpoint.",
                    "type": "boolean",
                    "default": true
                },
                "maximumWindowSize": {
                    "title": "Maximum Window Size",
                    "description": "Available when TMOS version is 16.1 or newer and used when compressMode is 'typed'. Specifies the maximum sliding window for compression negotiated with the endpoint.",
                    "type": "integer",
                    "minimum": 8,
                    "maximum": 15,
                    "default": 10
                },
                "noDelay": {
                    "title": "No Delay",
                    "description": "Available when TMOS version is 16.1 or newer and used when compressMode is 'typed'. Specifies whether data should be buffered for efficient compression, or compressed without delay.",
                    "type": "boolean",
                    "default": true
                }
            },
            "additionalProperties": false,

            "allOf": [
                {
                    "if": {
                        "properties": { "masking": { "const": "preserve" } },
                        "required": ["masking"]
                    },
                    "then": {
                        "properties": { "compressMode": { "not": {"const": "typed"}}},
                        "required": ["compressMode"]
                    }
                }
            ]
        },

        "Multiplex_Profile": {
            "title": "Multiplex_Profile",
            "type": "object",
            "description": "Multiplex (OneConnect) profile with configurable options",

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "Multiplex_Profile"
                },
                "label": { "$ref": "#/definitions/Label" },
                "remark": { "$ref": "#/definitions/Remark" },

                "sourceMask": {
                    "title": "Source Address Mask",
                    "description": "Idle connection re-use applies to connections whose source address matches this mask",
                    "type": "string",
                    "format": "f5ip"
                },
                "maxConnections": {
                    "title": "Maximum Connections",
                    "description": "Specifies the maximum number of connections that the system holds in the connection reuse pool.",
                    "type": "integer",
                    "minimum": 0,
                    "default": 10000
                },
                "maxConnectionAge": {
                    "title": "Maximum Connection Age",
                    "description": "Specifies the maximum age, in number of seconds, of a connection in the connection reuse pool.",
                    "type": "integer",
                    "minimum": 0,
                    "default": 86400
                },
                "maxConnectionReuse": {
                    "title": "Maximum Connection Reuse",
                    "description": "Specifies the maximum number of times that a server connection can be reused.",
                    "type": "integer",
                    "minimum": 0,
                    "default": 1000
                },
                "idleTimeoutOverride": {
                    "title": "Idle Timeout Override",
                    "description": "Specifies the number of seconds that a connection is idle before the connection flow is eligible for deletion.",
                    "type": "integer",
                    "minimum": 0,
                    "default": 0
                },
                "connectionLimitEnforcement": {
                    "title": "Connection Limit Enforcement",
                    "description": "When the limit is 'none', simultaneous in-flight requests and responses over TCP connections to a pool member are counted toward the limit. When the limit is 'idle', idle connections will be dropped as the TCP connection limit is reached. When the limit is 'strict', idle connections will prevent new TCP connections from being made until they expire (not recommended).",
                    "type": "string",
                    "enum": [ "none", "idle", "strict" ],
                    "default": "none"
                },
                "sharePools": {
                    "title": "Share Pools",
                    "description": "Indicates that TCP connections for the current pool may be shared among similar virtual servers using the same pool.",
                    "type": "boolean",
                    "default": false
                }
            },
            "additionalProperties": false,
            "required": [ "class" ]
        },

        "SOCKS_Profile": {
            "title": "SOCKS_Profile",
            "description": "Configures a SOCKS (Socket Secure) profile",
            "type": "object",

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "SOCKS_Profile"
                },
                "label": { "$ref": "#/definitions/Label" },
                "remark": { "$ref": "#/definitions/Remark" },

                "protocolVersions": {
                    "description": "Specifies the SOCKS protocol versions that are supported",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "socks4",
                            "socks4a",
                            "socks5"
                        ]
                    },
                    "default": [
                        "socks4",
                        "socks4a",
                        "socks5"
                    ],
                    "minItems": 1,
                    "uniqueItems": true
                },
                "resolver": {
                    "title": "DNS resolver",
                    "description": "BIG-IP AS3 pointer to DNS resolver used to resolve hostnames in connect requests",
                    "type": "object",
                    "properties": {
                        "bigip": {
                            "title": "BIG-IP resolver",
                            "description": "Pathname of existing BIG-IP net DNS resolver",
                            "type": "string",
                            "format": "f5bigip"
                        }
                    },
                    "additionalProperties": false,
                    "required": [ "bigip" ],
                    "f5PostProcess": {
                        "tag": "bigComponent",
                        "data": ["query net dns-resolver"]
                    }
                },
                "ipv6First": {
                    "title": "IPv6 first priority",
                    "description": "Specifies the relative order of IPv4 and IPv6 DNS resolutions for URIs. If false (default), then the system performs IPv4 lookup before IPv6.",
                    "type": "boolean",
                    "default": false
                },
                "routeDomain": {
                    "description": "The route domain that will be used for outbound connect requests",
                    "oneOf": [
                      {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 65534
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "default": 0
                },
                "tunnelName": {
                    "title": "Tunnel name",
                    "description": "Name of tunnel used for outbound connect requests",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 63,
                    "default": "socks-tunnel",
                    "f5PostProcess": {
                        "tag": "bigComponent",
                        "data": ["query net tunnels tunnel"]
                    }
                },
                "defaultConnectAction": {
                    "title": "Default Connect Action",
                    "description": "Specifies the behavior of the proxy service for connect requests. If set to 'deny', connect requests will only be honored if there is another virtual server listening for the requested outbound connection. If set to 'allow' outbound connection will be made ragardless of other virtual servers.",
                    "type": "string",
                    "enum": [ "deny", "allow" ],
                    "default": "deny"
                }
            },
            "additionalProperties": false,
            "required": [ "class", "resolver" ]
        },

        "TCP_Profile": {
            "title": "TCP_Profile",
            "description": "Configures a Transmission Control Protocol (TCP) profile",
            "type": "object",
            "$comment": "Configures TCP settings. When deployed on BIG-IP, defaults match f5-tcp-progressive.",

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "TCP_Profile"
                },
                "label": { "$ref": "#/definitions/Label" },
                "remark": { "$ref": "#/definitions/Remark" },

                "abc": {
                    "title": "Appropriate Byte Counting",
                    "description": "If true (default), BIG-IP AS3 adjusts the congestion window per rfc3465",
                    "type": "boolean",
                    "default": true
                },
                "ackOnPush": {
                    "title": "ACK on PSH",
                    "description": "If true (default), the system immediately acknowledges segments with the PSH flag set",
                    "type": "boolean",
                    "default": true
                },
                "autoProxyBufferSize": {
                    "title": "Automatic proxy-buffer size",
                    "description": "If true (default), BIG-IP AS3 adjusts the proxy buffer size automatically to optimize throughput",
                    "type": "boolean",
                    "default": true
                },
                "autoReceiveWindowSize": {
                    "title": "Automatic receive-window size",
                    "description": "If true (default), BIG-IP AS3 adjusts the receive window size automatically to optimize throughput",
                    "type": "boolean",
                    "default": true
                },
                "autoSendBufferSize": {
                    "title": "Automatic send-buffer size",
                    "description": "If true (default), BIG-IP AS3 adjusts the send buffer size automatically to optimize throughput",
                    "type": "boolean",
                    "default": true
                },
                "closeWaitTimeout": {
                    "title": "Close-wait timeout",
                    "description": "Number of seconds (default 5) connection will remain in LAST-ACK state before exiting.  Value -1 means indefinite, limited by maximum retransmission timeout",
                    "type": "integer",
                    "minimum": -1,
                    "maximum": 3600,
                    "default": 5
                },
                "congestionControl": {
                    "title": "Congestion-control algorithm",
                    "description": "Selects TCP congestion-control algorithm (default 'woodside'). The bbr option is available on BIGIP 14.1 and above.",
                    "type": "string",
                    "enum": [
                        "bbr", "cdg", "chd", "cubic", "high-speed",
                        "illinois", "new-reno", "none", "reno",
                        "scalable", "vegas", "westwood", "woodside"
                    ],
                    "default": "woodside"
                },
                "congestionMetricsCache": {
                    "title": "Congestion metrics cache",
                    "description": "If true (default), the system may cache congestion metrics to inform the congestion control algorithm",
                    "type": "boolean",
                    "default": true
                },
                "congestionMetricsCacheTimeout": {
                    "title": "Congestion metrics cache timeout",
                    "description": "Number of seconds for which entries in the congestion metrics cache are valid (default 0 means use system default)",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 1000,
                    "default": 0
                },
                "deferredAccept": {
                    "title": "Deferred accept",
                    "description": "If true, ADC will defer allocating resources to a connection until some payload data has arrived from the client (default false).  This may help minimize the impact of certain DoS attacks but adds undesirable latency under normal conditions.  Note:  'deferredAccept' is incompatible with server-speaks-first application protocols",
                    "type": "boolean",
                    "default": false
                },
                "delayedAcks": {
                    "title": "Delayed ACKs",
                    "description": "If true (default), the system may coalesce multiple adjacent ACK responses",
                    "type": "boolean",
                    "default": true
                },
                "delayWindowControl": {
                    "title": "Delay-window control",
                    "description": "If true, BIG-IP AS3 uses queueing delay as well as packet loss to estimate congestion (default false)",
                    "type": "boolean",
                    "default": false
                },
                "dsack": {
                    "title": "Use D-SACK",
                    "description": "If true, BIG-IP AS3 uses rfc2883 duplicate selective-acknowledgements extension (default false).  Do not enable this option unless you are certain all peers support D-SACK",
                    "type": "boolean",
                    "default": false
                },
                "earlyRetransmit": {
                    "title": "Early retransmit",
                    "description": "If true (default), BIG-IP AS3 uses rfc5827 Early Retransmit recovery",
                    "type": "boolean",
                    "default": true
                },
                "ecn": {
                    "title": "Explicit congestion notification",
                    "description": "If true (default), BIG-IP AS3 may send explicit congestion notification (ECN) flags (CWR, ECE) to peers",
                    "type": "boolean",
                    "default": true
                },
                "enhancedLossRecovery": {
                    "title": "Enhanced loss recovery",
                    "description": "If true (default), BIG-IP AS3 uses Selective ACK data to increase throughput",
                    "type": "boolean",
                    "default": true
                },
                "fastOpen": {
                    "title": "Fast-open",
                    "description": "If true (default), the system can use the TCP Fast Open protocol extension to reduce latency by sending payload data with initial SYN",
                    "type": "boolean",
                    "default": true
                },
                "fastOpenCookieExpiration": {
                    "title": "Fast-open cookie expiration",
                    "description": "Sets maximum lifetime in seconds (default 21600 = six hours) of TCP Fast Open cookies",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1000000,
                    "default": 21600
                },
                "finWaitTimeout": {
                    "title": "FIN-WAIT timeout",
                    "description": "Number of seconds (default 5) connection will remain in FIN-WAIT-1 or closing state before exiting.  Value -1 means indefinite, limited by maximum retransmission timeout",
                    "type": "integer",
                    "minimum": -1,
                    "maximum": 3600,
                    "default": 5
                },
                "finWait2Timeout": {
                    "title": "FIN-WAIT-2 timeout",
                    "description": "Number of seconds (default 300) connection will remain in LAST-ACK state before closing.  Value -1 means indefinite, limited by maximum retransmission timeout",
                    "type": "integer",
                    "minimum": -1,
                    "maximum": 3600,
                    "default": 300
                },
                "idleTimeout": {
                    "title": "Idle timeout",
                    "description": "Number of seconds (default 300; may not be 0) connection may remain idle before it becomes eligible for deletion.  Value -1 (not recommended) means infinite",
                    "type": "integer",
                    "anyOf": [
                        {
                            "minimum": 1,
                            "maximum": 86400
                        },
                        { "const": -1 }
                    ],
                    "default": 300
                },
                "initCwnd": {
                    "title": "Initial congestion-window size",
                    "description": "Sets the initial congestion-window size (default 16) in multiples of MSS (not in octets)",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 64,
                    "default": 16
                },
                "initRwnd": {
                    "title": "Initial receive-window size",
                    "description": "Sets the initial receive-window size (default 16) in multiples of MSS (not in octets)",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 64,
                    "default": 16
                },
                "ipDfMode": {
                    "title": "IP DF mode",
                    "description": "Controls DF (Don't Fragment) flag in outgoing packets.  Value 'pmtu' (default) sets DF based on IP PMTU value.  Value 'preserve' copies DF from received packets.  Value 'set' forces DF true in all outgoing packets.  Value 'clear' forces DF false in all outgoing packets",
                    "type": "string",
                    "enum": [ "clear", "pmtu", "preserve", "set" ],
                    "default": "pmtu"
                },
                "ipTosToClient": {
                    "title": "IP DSCP (TOS) to client",
                    "description": "Specifies the IP DSCP/TOS value in packets sent to clients (default 0).  Numeric values in this property are decimal representations of eight-bit numbers, of which the leftmost six bits are the DSCP per rfc2474 (and the system uses the rightmost two bits for congestion signaling when 'ecn' is true).  You may have to calculate the value of this property by multiplying a DSCP code, such as CS5+EF = 46, by four to obtain the proper 'ipTosToClient' value, such as 184.  Value 'pass-through' sets DSCP from the initial server-side value.  Value 'mimic' copies DSCP from the most-recently received server-side packet (allowing DSCP to vary during the life of a connection)",
                    "oneOf": [
                        {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 252,
                            "multipleOf": 4
                        },
                        {
                            "type": "string",
                            "enum": [
                                "pass-through",
                                "mimic"
                            ]
                        }
                    ],
                    "default": 0
                },
                "keepAliveInterval": {
                    "title": "Keep-alive interval",
                    "description": "Number of seconds (default 1800) between keep-alive probes",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 86400,
                    "default": 1800
                },
                "limitedTransmit": {
                    "title": "Limited transmit recovery",
                    "description": "When true (default), the system can use rfc3042 limited transmit recovery scheme",
                    "type": "boolean",
                    "default": true
                },
                "linkQosToClient": {
                    "title": "Link QOS to client",
                    "description": "Specifies the Layer-2 QOS code in packets sent to clients (default 0).  Ethernet-type networks recognize codes from 0 to 7.  Value 'pass-through' sets QOS from the initial server-side value",
                    "oneOf": [
                        {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 7
                        },
                        {
                            "type": "string",
                            "const": "pass-through"
                        }
                    ],
                    "default": 0
                },
                "maxRetrans": {
                    "title": "Maximum segment retransmissions",
                    "description": "Sets maximum number of times the system may retransmit a segment (default 8)",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 12,
                    "default": 8
                },
                "maxSegmentSize": {
                    "title": "MSS",
                    "description": "Sets MSS advertised to peer.  Value 0 (default) will set MSS automatically in proportion to interface MTU.  Default 0 is usually the best choice",
                    "type": "integer",
                    "anyOf": [
                        {
                            "minimum": 28,
                            "maximum": 8960
                        },
                        { "const": 0 }
                    ],
                    "default": 0
                },
                "md5Signature": {
                    "title": "MD5 signatures",
                    "description": "If true, the system signs TCP headers using MD5 per rfc2385 (default false)",
                    "type": "boolean",
                    "default": false
                },
                "md5SignaturePassphrase": {
                    "title": "MD5 passphrase",
                    "description": "Passphrase from which the system derives the key for MD5 signatures (MACs) when 'md5signature' is true",
                    "type": "object",
                    "properties": {
                        "allowReuse": {
                            "description": "If true, other declaration objects may reuse this value",
                            "type": "boolean",
                            "default": false
                        }
                    },
                    "allOf": [
                        { "$ref": "#/definitions/Secret" },
                        {
                            "f5PostProcess": {
                                "tag": "fetch",
                                "data": "object"
                            }
                        },
                        {
                            "f5PostProcess": {
                                "tag": "secret"
                            }
                        }
                    ]
                },
                "minimumRto": {
                    "title": "Minimum retransmission timeout",
                    "description": "Minimum retransmission timeout in milliseconds (default 1000)",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 5000,
                    "default": 1000
                },
                "mptcp": {
                    "title": "Multipath TCP (MPTCP)",
                    "description": "Value 'disable' (default) excludes use of Multipath TCP (MPTCP) through virtual server.  Value 'enable' means virtual server will accept and participate in MPTCP connections.  Value 'passthrough' means MPTCP packets may pass through virtual server",
                    "type": "string",
                    "enum": [ "disable", "enable", "passthrough" ],
                    "default": "disable"
                },
                "mptcpCsum": {
                    "title": "MPTCP checksums",
                    "description": "If true, the system calculates MPTCP checksums (default false)",
                    "type": "boolean",
                    "default": false
                },
                "mptcpCsumVerify": {
                    "title": "MPTCP checksum verify",
                    "description": "If true, the system verifies MPTCP checksums (default false)",
                    "type": "boolean",
                    "default": false
                },
                "mptcpFallback": {
                    "title": "MPTCP fallback action",
                    "description": "Selects action on fallback from MPTCP to ordinary TCP",
                    "type": "string",
                    "enum": [ "accept", "active-accept", "reset", "retransmit" ],
                    "default": "reset"
                },
                "mptcpFastJoin": {
                    "title": "MPTCP fast join",
                    "description": "If true, the system may send data with MP_JOIN SYN packet, reducing connection latency (default false)",
                    "type": "boolean",
                    "default": false
                },
                "mptcpIdleTimeout": {
                    "title": "Idle timeout",
                    "description": "Number of seconds (default 300) connection may remain idle before it becomes eligible for deletion",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 86400,
                    "default": 300
                },
                "mptcpJoinMax": {
                    "title": "MPTCP join maximum",
                    "description": "Limit on number of subflows which the system may add to the MPTCP connection (default 5)",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 20,
                    "default": 5
                },
                "mptcpMakeAfterBreak": {
                    "title": "MPTCP make-after-break",
                    "description": "If true, the system can add additional subflows during the 'mptcpTimeout' period, even if the ADC is not currently handling an active connection (default false)",
                    "type": "boolean",
                    "default": false
                },
                "mptcpNoJoinDssAck": {
                    "title": "MPTCP fast join",
                    "description": "If true, no DSS option will sent with MP_JOIN ACK packet (default false)",
                    "type": "boolean",
                    "default": false
                },
                "mptcpRtoMax": {
                    "title": "MPTCP RTO maximum",
                    "description": "Maximum number of retransmission timeouts which may occur before the system declares a subflow dead",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 20,
                    "default": 5
                },
                "mptcpRetransmitMin": {
                    "title": "MPTCP retransmit timer",
                    "description": "Minimum value in milliseconds (default 1000) of MPTCP retransmission timer",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 5000,
                    "default": 1000
                },
                "mptcpSubflowMax": {
                    "title": "MPTCP subflow maximum",
                    "description": "Maximum number of subflows per connection (default 6)",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 20,
                    "default": 6
                },
                "mptcpTimeout": {
                    "title": "MPTCP timeout",
                    "description": "Number of seconds (default 3600) after which the system may expunge an MPTCP session with no active flow",
                    "type": "integer",
                    "minimum": 60,
                    "maximum": 3600,
                    "default": 3600
                },
                "nagle": {
                    "title": "Nagle's algorithm",
                    "description": "Value 'enable' means to use Nagle's algorithm to minimize the transmission of short TCP segments (note:  Nagle's algorithm yields undesirable results with many application protocols).  Value 'auto' (default) means the ADC will choose automatically whether to enable Nagle's algorithm.  Value 'disable' averts application of Nagle's algorithm",
                    "type": "string",
                    "enum": [ "disable", "enable", "auto" ],
                    "default": "auto"
                },
                "pktLossIgnoreBurst": {
                    "title": "Packet loss ignore burst",
                    "description": "Modulates use of congestion control when losing multiple packets.  Value 0 (default) means to perform congestion control if any packet loss occurs.  Higher values increase tolerance for lost packets before signaling congestion",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 32,
                    "default": 0
                },
                "pktLossIgnoreRate": {
                    "title": "Packet loss ignore rate",
                    "description": "Sets threshold of packet loss rate (lost-packets/million-packets) above which the system performs congestion control.  Value 0 (default) means to perform congestion control if any packet loss occurs.  Higher values increase tolerance for lost packets before signaling congestion",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 1000000,
                    "default": 0
                },
                "proxyBufferHigh": {
                    "title": "Proxy-buffer high",
                    "description": "The system closes the receive window when the number of octets in proxy buffer rises above this value",
                    "type": "integer",
                    "minimum": 64,
                    "maximum": 33554432,
                    "default": 262144
                },
                "proxyBufferLow": {
                    "title": "Proxy-buffer low",
                    "description": "The system opens the receive window when the number of octets in proxy buffer falls below this value",
                    "type": "integer",
                    "minimum": 64,
                    "maximum": 33554432,
                    "default": 196608
                },
                "proxyMSS": {
                    "title": "Proxy MSS",
                    "description": "If true (default), the MSS value advertised on the server side will match that negotiated with the client, if permitted by MTU and other constraints",
                    "type": "boolean",
                    "default": true
                },
                "proxyOptions": {
                    "title": "Proxy options",
                    "description": "If true, TCP options such as timestamp advertised on the server side will match those negotiated with client (default false)",
                    "type": "boolean",
                    "default": false
                },
                "pushFlag": {
                    "title": "PuSH flag control",
                    "description": "Controls when ADC sets PSH flag in outbound TCP segments.  Limiting the sending of segments with PSH improves performance.  Value 'auto' (recommended) sets PSH according to a system algorithm optimal in most cases.  Value 'default' (not recommended) sets the PUSH flag in every segment which happens to empty the send buffer.  Value 'none' prevents use of the PSH flag, and 'one' means the system sets PSH only when FIN is, at the end of a connection",
                    "type": "string",
                    "enum": [ "auto", "default", "none", "one" ],
                    "default": "auto"
                },
                "ratePace": {
                    "title": "Rate pace",
                    "description": "If true (default), system will automatically pace rate of data transmission to optimize throughput",
                    "type": "boolean",
                    "default": true
                },
                "ratePaceMaxRate": {
                    "title": "Rate pace maximum rate",
                    "description": "Limit maximum data-transmission rate in octets/second to this value when 'ratePace' is true.  Default 0 means choose maximum rate automatically",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295,
                    "$comment": "maximum in future: 137438953472",
                    "default": 0
                },
                "receiveWindowSize": {
                    "title": "Receive-window size",
                    "description": "Maximum size of receive window (octets, default 131072)",
                    "type": "integer",
                    "minimum": 64,
                    "maximum": 33554432,
                    "default": 131072
                },
                "resetOnTimeout": {
                    "title": "Reset on timeout",
                    "description": "If true (default), connections which time out will be reset (that is, the system will send an RST packet to the peer) before the system expunges them.  Value false is not recommended",
                    "type": "boolean",
                    "default": true
                },
                "retransmitThreshold": {
                    "title": "Retransmit threshold",
                    "description": "Specifies the number of duplicate ACKs to start fast recovery",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 12,
                    "default": 3
                },
                "selectiveAcks": {
                    "title": "Selective ACKs",
                    "description": "If true (default), the system negotiates rfc2018 Selective Acknowledgements with peers",
                    "type": "boolean",
                    "default": true
                },
                "selectiveNack": {
                    "title": "Selective NAK",
                    "description": "If true, the system negotiates Selective Negative Acknowledgements with peers (default false)",
                    "type": "boolean",
                    "default": false
                },
                "sendBufferSize": {
                    "title": "Send-buffer size",
                    "description": "Maximum size of send buffer (octets, default 262144)",
                    "type": "integer",
                    "minimum": 64,
                    "maximum": 33554432,
                    "default": 262144
                },
                "slowStart": {
                    "title": "Slow-start",
                    "description": "If true (default), BIG-IP AS3 adjusts the initial window size per rfc3390.  This generally makes connections start more quickly, NOT more slowly",
                    "type": "boolean",
                    "default": true
                },
                "synCookieEnable": {
                    "title": "SYN cookie enable",
                    "description": "If true (default), the system may use SYN cookies to avert connection-table overflow (for example, from DoS attacks)",
                    "type": "boolean",
                    "default": true
                },
                "synCookieAllowlist": {
                    "title": "SYN cookie allowlist",
                    "description": "If true, after a client responds successfully to a SYN cookie challenge, the system accepts additional connection requests from that client without challenge for 30 seconds.",
                    "type": "boolean"
                },
                "synCookieWhitelist": {
                    "title": "SYN cookie whitelist",
                    "description": "Deprecated.  Replaced with functionally equivalent synCookieAllowlist.  If true, after a client responds successfully to a SYN cookie challenge, the system accepts additional connection requests from that client without challenge for 30 seconds.",
                    "type": "boolean",
                    "default": false
                },
                "synMaxRetrans": {
                    "title": "Maximum SYN retransmissions",
                    "description": "Maximum number of times the system retransmits a SYN when it does not receive a SYN+ACK (default 3)",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 12,
                    "default": 3
                },
                "synRtoBase": {
                    "title": "SYN RTO base",
                    "description": "Number of milliseconds (default 3000) to which the system initially sets the SYN retransmission timer.  The system adjusts the timer after each retransmission to implement binary-exponential-backoff",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 5000,
                    "default": 3000
                },
                "tailLossProbe": {
                    "title": "Tail loss probe",
                    "description": "If true (default), the system uses the Tail Loss Probe scheme to reduce retransmission timeouts",
                    "type": "boolean",
                    "default": true
                },
                "tcpOptions": {
                    "title": "TCP options capture for iRules",
                    "description": "Selects which TCP Option values the system captures for reference by iRules",
                    "type": "array",
                    "items": {
                        "title": "Option",
                        "type": "object",
                        "properties": {
                            "option": {
                                "title": "Number",
                                "description": "Specifies the TCP option to capture",
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 255
                            },
                            "when": {
                                "title": "When seen",
                                "description": "Specifies when to capture the TCP option",
                                "type": "string",
                                "enum": [ "first", "last" ]
                            }
                        },
                        "additionalProperties": false
                    },
                    "maxItems": 255,
                    "$comment": "uniqueItems: true"
                },
                "timestamps": {
                    "title": "Timestamps",
                    "description": "If true (default and recommended), BIG-IP AS3 enables rfc1323 timestamps",
                    "type": "boolean",
                    "default": true
                },
                "timeWaitRecycle": {
                    "title": "TIME-WAIT recycle",
                    "description": "If true (default), the system reuses connection resources immediately when it receives a SYN during the TIME-WAIT period",
                    "type": "boolean",
                    "default": true
                },
                "timeWaitTimeout": {
                    "title": "Time-wait timeout",
                    "description": "Number of milliseconds (default 2,000) connection will remain in TIME-WAIT state before closing.  Value -1 means indefinite",
                    "type": "integer",
                    "minimum": -1,
                    "maximum": 600000,
                    "default": 2000
                },
                "ttlMode": {
                    "title": "TTL mode",
                    "description": "Controls IP TTL in outgoing packets.  Value 'set' forces TTL to value of property 'ttlIPv4' or 'ttlIPv6' as appropriate.  Value 'proxy' (default) forces TTL to the default value for IPv4 or IPv6 as appropriate.  Value 'preserve' copies TTL from received packet.  Value 'decrement' sets TTL to one less than received packet's TTL",
                    "type": "string",
                    "enum": [ "decrement", "preserve", "proxy", "set" ],
                    "default": "proxy"
                },
                "ttlIPv4": {
                    "title": "TTL for IPv4",
                    "description": "TTL the system sets in outgoing IPv4 packets",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 255,
                    "default": 255
                },
                "ttlIPv6": {
                    "title": "TTL for IPv6",
                    "description": "TTL the system sets in outgoing IPv6 packets",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 255,
                    "default": 64
                },
                "verifiedAccept": {
                    "title": "Verified accept",
                    "description": "If true, the system must establish a server-side connection before a it accepts a corresponding client-side connection (default false).  Value 'true' is incompatible with iRules",
                    "type": "boolean",
                    "default": false
                },
                "zeroWindowTimeout": {
                    "title": "Zero-window timeout",
                    "description": "Number of milliseconds (default 20,000) connection will persist with window-size of zero (effective timeout is value rounded up to the nearest multiple of 5000).  Value -1 means indefinite",
                    "type": "integer",
                    "minimum": -1,
                    "maximum": 86400000,
                    "default": 20000
                }
            },
            "additionalProperties": false,
            "required": [ "class" ],
            "f5PostProcess": {
                "tag": "aliases",
                "data": {
                    "synCookieAllowlist": "synCookieWhitelist"
                }
            }
        },

        "Classification_Profile": {
            "title": "Classification_Profile",
            "description": "Configures a classification profile",
            "type": "object",

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "Classification_Profile"
                },
                "label": { "$ref": "#/definitions/Label" },
                "remark": { "$ref": "#/definitions/Remark" },
                "parentProfile": {
                    "description": "Specifies the name of the object to inherit the settings from",
                    "allOf": [
                        { "$ref": "#/definitions/Pointer_Classification_Profile" }
                    ],
                    "default": { "bigip": "/Common/classification" }
                },
                "appDetectionEnabled": {
                    "description": "Enables/disables Application Detection feature",
                    "type": "boolean",
                    "default": true
                },
                "urlCategorizationEnabled": {
                    "description": "Enables/disables URL Categorization feature",
                    "type": "boolean",
                    "default": false
                },
                "iRuleEventEnabled": {
                    "description": "Enables/disables CLASSIFICATION_DETECTED iRule event generation",
                    "type": "boolean",
                    "default": false
                },
                "logPublisher": {
                    "$ref": "#/definitions/Pointer_Log_Publisher"
                },
                "logUnclassifiedDomain": {
                    "description": "Enables/disables unclassified domain logging",
                    "type": "boolean",
                    "default": false
                },
                "preset": {
                    "allOf": [
                        { "$ref": "#/definitions/Pointer_Classification_Preset" }
                    ],
                    "default": { "bigip": "/Common/ce" }
                },
                "statisticsCollectionEnabled": {
                    "description": "Enables/disables statistics collection",
                    "type": "boolean",
                    "default": false
                },
                "statisticsPublisher": {
                    "$ref": "#/definitions/Pointer_Log_Publisher"
                }
            },
            "additionalProperties": false,
            "required": [ "class" ]
        },

        "Radius_Profile": {
            "title": "Radius_Profile",
            "description": "Configures a RADIUS profile for network traffic load balancing",
            "type": "object",

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "Radius_Profile"
                },
                "label": { "$ref": "#/definitions/Label" },
                "remark": { "$ref": "#/definitions/Remark" },
                "parentProfile": {
                    "description": "Specifies the name of the object to inherit the settings from",
                    "allOf": [
                        { "$ref": "#/definitions/Pointer_Radius_Profile" }
                    ],
                    "default": { "bigip": "/Common/radiusLB" }
                },
                "persistAttribute": {
                    "description": "Specifies the name of the RADIUS attribute on which traffic persists. Acceptable values are ASCII strings from section 5 of RFC 2865 or numeric codes (1-255). A value of none indicates that persistence is disabled.",
                    "oneOf": [
                        {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 255
                        },
                        {
                            "type": "string",
                            "enum": [
                                "none",
                                "User-Name",
                                "User-Password",
                                "NAS-IP-Address",
                                "NAS-Port",
                                "Service-Type",
                                "Framed-Protocol",
                                "Framed-IP-Address",
                                "Framed-IP-Netmask",
                                "Framed-Routing",
                                "Filter-Id",
                                "Framed-MTU",
                                "Framed-Compression",
                                "Login-IP-Host",
                                "Login-Service",
                                "Login-TCP-Port",
                                "Reply-Message",
                                "Callback-Number",
                                "Callback-Id",
                                "Framed-Route",
                                "Framed-IPX-Network",
                                "State",
                                "Class",
                                "Vendor-Specific",
                                "Session-Timeout",
                                "Idle-Timeout",
                                "Termination-Action",
                                "Called-Station-Id",
                                "Calling-Station-Id",
                                "NAS-Identifier",
                                "Proxy-State",
                                "Login-LAT-Service",
                                "Login-LAT-Node",
                                "Login-LAT-Group",
                                "Framed-AppleTalk-Link",
                                "Framed-AppleTalk-Network",
                                "Framed-AppleTalk-Zone",
                                "CHAP-Challenge",
                                "NAS-Port-Type",
                                "Port-Limit",
                                "Login-LAT-Port"
                            ]
                        }
                    ],
                    "default": "none"
                },
                "protocolProfile": {
                    "description": "Specifies PEM protocol profile that defines mapping of RADIUS AVPs to subscriber ID and other PEM subscriber session attributes",
                    "allOf": [
                        {
                            "f5PostProcess": {
                                "tag": "modules",
                                "data": [ "pem", "afm" ]
                            }
                        },
                        { "$ref": "#/definitions/Pointer_Enforcement_Protocol_Profile_Radius" }
                    ],
                    "default": {
                        "bigip": "/Common/_sys_radius_proto_imsi"
                    }
                },
                "subscriberDiscoveryEnabled": {
                    "description": "Specifies whether to enable PEM subscriber discovery based on the content of RADIUS packets",
                    "type": "boolean",
                    "f5PostProcess": {
                        "tag": "modules",
                        "data": [ "pem", "afm" ]
                    },
                    "default": true
                }
            },
            "required": [ "class" ],
            "additionalProperties": false
        },

        "IP_Other_Profile": {
            "title": "IP_Other_Profile",
            "description": "Configures a generic IP profile for non-TCP and non-UDP traffic",
            "type": "object",

            "properties": {
                "class": {
                    "title": "Class",
                    "type": "string",
                    "const": "IP_Other_Profile"
                },
                "label": { "$ref": "#/definitions/Label" },
                "remark": { "$ref": "#/definitions/Remark" },
                "parentProfile": {
                    "description": "Specifies the name of the object to inherit the settings from",
                    "allOf": [
                        { "$ref": "#/definitions/Pointer_IP_Other_Profile" }
                    ],
                    "default": { "bigip": "/Common/ipother" }
                },
                "idleTimeout": {
                    "description": "Specifies the number of seconds a connection can be idle before the connection is eligible for deletion",
                    "$comment": "It might be possible to specify a value of 0 and remove the immediate option",
                    "if": { "type": "integer" },
                    "then": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 4294967295
                    },
                    "else": {
                        "type": "string",
                        "enum": [
                            "indefinite",
                            "immediate"
                        ]
                    },
                    "default": 60
                }
            },
            "additionalProperties": false,
            "required": [ "class" ]
        },

        "Label": {
            "title": "Label",
            "description": "Optional friendly name for this object. Allows 0-64 chars, excluding a few likely to cause trouble with string searching, JS, TCL, or HTML",
            "type": "string",
            "pattern": "^[^\\x00-\\x1f\\x22#&*<>?\\x5b-\\x5d`\\x7f]*$",
            "minLength": 0,
            "maxLength": 64
        },

        "Remark": {
            "title": "Remark",
            "description": "Arbitrary (brief) text pertaining to this object. Allows 0-64 chars, excluding only control characters, double-quote, and backslash.  This is permissive enough that you should worry about XSS attacks",
            "type": "string",
            "pattern": "^[^\\x00-\\x1f\\x22\\x5c\\x7f]*$",
            "minLength": 0,
            "maxLength": 64
        },

        "F5base64": {
            "type": "string",
            "description": "Slightly over-matches both base64-orig and base64-url data",
            "pattern": "^([0-9A-Za-z/+_-]*|[0-9A-Za-z/+_-]+={1,2})$"
        },

        "F5string": {
            "title": "String value",
            "description": "String value optionally in base64 or from URL or BIG-IP AS3 pointer",

            "if": { "not": { "type": "object" } },
            "then": {
                "type": "string"
            },
            "else": {
                "$comment": "May add 'cryptogram' in future.",
                "properties": {
                    "base64": {
                        "title": "Base64",
                        "description": "Base64-encoded value (in JSON string)",
                        "type": "string",
                        "allOf": [{ "$ref": "#/definitions/F5base64" }]
                    },
                    "text": {
                        "title": "Text",
                        "description": "UTF-8 text (in JSON string)",
                        "type": "string"
                    },
                    "url": { "$ref": "#/definitions/Resource_URL" },
                    "copyFrom": {
                        "title": "Copy from",
                        "description": "BIG-IP AS3 pointer to declaration object/property from which to copy value",
                        "type": "string",
                        "format": "f5pointer"
                    },
                    "bigip": {
                        "title": "BIG-IP component pathname",
                        "description": "Pathname of existing BIG-IP component",
                        "type": "string",
                        "format": "f5bigip"
                    }
                },
                "additionalProperties": false,
                "minProperties": 1,
                "maxProperties": 1
            }
        },

        "Metadata": {
            "title":"Metadata",
            "type":"object",
            "description": "Useful datapoints for tracking, tagging, and organizing declarations.",
            "$comment":"Properties are arbitrarily set by the user.",
            "additionalProperties": {
                "type":"object",
                "properties": {
                    "value": {
                        "type": "string"
                    },
                    "persist": {
                        "type":"boolean",
                        "default": true
                    }
                },
                "required": ["value"],
                "additionalProperties": false
            }
        },

        "Rewrite_Profile": {
            "title": "Rewrite_Profile",
            "type": "object",
            "description": "Configures a rewrite profile",

            "properties": {
                "class": {
                    "type": "string",
                    "const": "Rewrite_Profile"
                },
                "label": { "$ref": "#/definitions/Label" },
                "remark": { "$ref": "#/definitions/Remark" },
                "bypassList": {
                    "description": "List of URIs that are bypassed in a web page when a rewrite mode of portal is used",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "clientCachingType": {
                    "description": "The type of client caching used",
                    "type": "string",
                    "enum": ["cache-all", "cache-css-js", "cache-img-css-js", "no-cache"],
                    "default": "cache-css-js"
                },
                "javaCaFile": {
                    "description": "The CA Bundle used to verify Java applets signature certificates",
                    "allOf": [
                        { "$ref": "#/definitions/Pointer_CA_Bundle" }
                    ],
                    "default": { "bigip": "/Common/ca-bundle.crt" }
                },
                "javaSignKeyPassphrase": {
                    "description": "Passphrase if any for query authentication",
                    "type": "object",
                    "properties": {
                        "allowReuse": {
                            "description": "If true, other declaration objects may reuse this value",
                            "type": "boolean",
                            "default": false
                        }
                    },
                    "allOf": [
                        { "$ref": "#/definitions/Secret" },
                        {
                            "f5PostProcess": {
                                "tag": "fetch",
                                "data": "object"
                            }
                        },
                        {
                            "f5PostProcess": {
                                "tag": "secret"
                            }
                        }
                    ]
                },
                "certificate": {
                    "description": "BIG-IP AS3 pointer to client Certificate declaration (optional)",
                    "type": "string",
                    "f5PostProcess": {
                        "tag": "pointer",
                        "data": {
                            "properties": {
                                "class": { "const": "Certificate" }
                            },
                            "required": [ "class" ]
                        }
                    }
                },
                "locationSpecificEnabled": {
                    "description": "Specifies if this contains an attribute with values specific to the location that the BIG-IP device resides",
                    "type": "boolean",
                    "default": false
                },
                "requestSettings": {
                    "description": "The request settings used for uri-translation",
                    "allOf": [
                        { "$ref": "#/definitions/Rewrite_Profile_Request_Settings" }
                    ],
                    "default": {}
                },
                "responseSettings": {
                    "description": "The response settings used for uri-translation",
                    "allOf": [
                        { "$ref": "#/definitions/Rewrite_Profile_Response_Settings" }
                    ],
                    "default": {}
                },
                "rewriteList": {
                    "description": "List of URIs that are rewritten inside a web page when a rewrite mode of portal is used",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "rewriteMode": {
                    "description": "The mode of rewriting that is used.uri-translation is a rules-based rewrite mode. portal is for use with Portal Access",
                    "type": "string",
                    "enum": ["portal", "uri-translation"],
                    "default": "portal"
                },
                "setCookieRules": {
                    "description": "The rules for rewriting HTTP Set-Cookie headers. Used with a rewrite mode of uri-translation",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Rewrite_Profile_Set_Cookie_Rule"
                    }
                },
                "splitTunnelingEnabled": {
                    "description": "Determines if the profile provides for split tunneling",
                    "type": "boolean",
                    "default": false
                },
                "uriRules": {
                    "description": "The rules for rewriting request and response headers and response bodies. Used with a rewrite mode of uri-translation",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Rewrite_Profile_Uri_Rule"
                    }
                }
            },
            "required": [ "class" ],
            "additionalProperties": false
        },

        "Rewrite_Profile_Set_Cookie_Rule": {
            "description": "A Set-Cookie rule",
            "type": "object",
            "properties": {
                "client": {
                    "description": "The client domain and path",
                    "type": "object",
                    "properties": {
                        "domain": {
                            "description": "The domain of the client",
                            "type": "string",
                            "minLength": 1
                        },
                        "path": {
                            "description": "The path of the client. Must be an absolute directory path",
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "required": ["domain", "path"],
                    "additionalProperties": false
                },
                "server": {
                    "description": "The server domain and path",
                    "type": "object",
                    "properties": {
                        "domain": {
                            "description": "The domain of the server",
                            "type": "string",
                            "minLength": 1
                        },
                        "path": {
                            "description": "The path of the server. Must be an absolute directory path",
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "required": ["domain", "path"],
                    "additionalProperties": false
                }
            },
            "required": ["client", "server"],
            "additionalProperties": false
        },

        "Rewrite_Profile_Uri_Rule": {
            "description": "A URI rule",
            "type": "object",
            "properties": {
                "type": {
                    "description": "The type of rule. request will affect request headers only, response will affect response headers and bodies, and both will do request and response",
                    "type": "string",
                    "enum": ["both", "request", "response"],
                    "default": "both"
                },
                "client": {
                    "description": "The client URI",
                    "type": "object",
                    "properties": {
                        "scheme": {
                            "description": "The scheme of the client URI",
                            "type": "string"
                        },
                        "host": {
                            "description": "The host of the client URI",
                            "type": "string",
                            "minLength": 1
                        },
                        "port": {
                            "description": "The port of the client URI",
                            "type": "string"
                        },
                        "path": {
                            "description": "The path of the client URI. Must be an absolute directory path",
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "required": ["path"],
                    "dependencies": {
                        "host": { "required": ["path", "scheme"] },
                        "scheme": { "required": ["path", "host"] },
                        "port": { "required": ["path", "host", "scheme"] }
                    },
                    "additionalProperties": false
                },
                "server": {
                    "description": "The server URI",
                    "type": "object",
                    "properties": {
                        "scheme": {
                            "description": "The scheme of the server URI",
                            "type": "string"
                        },
                        "host": {
                            "description": "The host of the server URI",
                            "type": "string",
                            "minLength": 1
                        },
                        "port": {
                            "description": "The port of the server URI",
                            "type": "string"
                        },
                        "path": {
                            "description": "the path of the server URI. Must be an absolute directory path",
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "required": ["path"],
                    "dependencies": {
                        "host": { "required": ["path", "scheme"] },
                        "scheme": { "required": ["path", "host"] },
                        "port": { "required": ["path", "host", "scheme"] }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": false
        },

        "Rewrite_Profile_Request_Settings": {
            "description": "Request settings for Rewrite_Profile",
            "type": "object",
            "properties": {
                "insertXforwardedForEnabled": {
                    "description": "Determines if X-Forwarded-For header",
                    "type": "boolean",
                    "default": true
                },
                "insertXforwardedHostEnabled": {
                    "description": "Determines if X-Forwarded-Proto header",
                    "type": "boolean",
                    "default": false
                },
                "insertXforwardedProtoEnabled": {
                    "description": "Determines if X-Forwarded-Host header",
                    "type": "boolean",
                    "default": false
                },
                "rewriteHeadersEnabled": {
                    "description": "Determines if request headers are rewritten",
                    "type": "boolean",
                    "default": true
                }
            },
            "additionalProperties": false
        },

        "Rewrite_Profile_Response_Settings": {
            "description": "Response settings for Rewrite_Profile",
            "type": "object",
            "properties": {
                "rewriteContentEnabled": {
                    "description": "Determines if response content should be rewritten",
                    "type": "boolean",
                    "default": true
                },
                "rewriteHeadersEnabled": {
                    "description": "Determines if response headers should be rewritten",
                    "type": "boolean",
                    "default": true
                }
            },
            "additionalProperties": false
        },

        "Stream_Profile": {
            "title": "Stream_Profile",
            "description": "Configures a Stream profile",
            "type": "object",
            "properties": {
                "class": {
                    "type": "string",
                    "const": "Stream_Profile"
                },
                "label": {
                    "$ref": "#/definitions/Label"
                },
                "remark": {
                    "$ref": "#/definitions/Remark"
                },
                "parentProfile": {
                    "description": "Specifies the profile that this profile will inherit values from",
                    "allOf": [
                        {
                            "$ref": "#/definitions/Pointer_Stream_Profile"
                        }
                    ],
                    "default": {
                        "bigip": "/Common/stream"
                    }
                },
                "chunkingEnabled": {
                    "description": "Specifies that incoming data should be parsed in chunks",
                    "type": "boolean",
                    "default": false
                },
                "chunkSize": {
                    "description": "The maximum size that a parsed chunk can be",
                    "type": "integer",
                    "minimum": 1024,
                    "maximum": 65535,
                    "default": 4096
                },
                "source": {
                    "description": "Specifies the string to rewrite",
                    "type": "string"
                },
                "target": {
                    "description": "Specifies the new string that will replace the source string",
                    "type": "string"
                }
            },
            "required": ["class"],
            "additionalProperties": false
        },

        "Access_Profile": {
            "title": "Access_Profile",
            "description": "Configures an Access Profile",
            "type": "object",
            "f5PostProcess": {
                "tag": "modules",
                "data": ["apm"]
            },
            "properties": {
                "class": {
                    "type": "string",
                    "const": "Access_Profile"
                },
                "label": {
                    "$ref": "#/definitions/Label"
                },
                "remark": {
                    "$ref": "#/definitions/Remark"
                },
                "url": {
                    "title": "URL",
                    "description": "The URL to pull the Access Profile from",
                    "allOf": [{ "$ref": "#/definitions/Resource_URL" }]
                },
                "ssloCreated": {
                    "title": "SSL Orchestrator Created",
                    "description": "Set to true if the profile was created by SSL Orchestrator. If true the non-configurable Kerberos Request-Based Authentication (/Common/rba) and WebSSO (/Common/websso) profiles will not be attached to Services when this profile is attached",
                    "type": "boolean",
                    "default": false
                },
                "ignoreChanges": {
                    "title": "Ignore changes",
                    "description": "If false (default), the system updates the profile in every BIG-IP AS3 declaration deployment. If true, BIG-IP AS3 creates the profile on first deployment, and leaves it untouched afterwards. However, if enable is set to true, the policy will be applied even if ignoreChanges is true",
                    "type": "boolean",
                    "default": false
                },
                "enable": {
                    "title": "Enable",
                    "description": "Apply the profile after updating it. If false (default), the system only updates the profile. Also note 'ignoreChanges'.",
                    "type": "boolean",
                    "default": false
                }
            },
            "required": ["class", "url"],
            "additionalProperties": false
        },

        "Per_Request_Access_Policy": {
            "title": "Per_Request_Access_Policy",
            "description": "Configures a Per Flow Request Access Policy",
            "type": "object",
            "f5PostProcess": {
                "tag": "modules",
                "data": ["apm"]
            },

            "properties": {
                "class": {
                    "type": "string",
                    "const": "Per_Request_Access_Policy"
                },
                "label": {
                    "$ref": "#/definitions/Label"
                },
                "remark": {
                    "$ref": "#/definitions/Remark"
                },
                "url": {
                    "title": "URL",
                    "description": "The URL to pull the policy from",
                    "allOf": [{ "$ref": "#/definitions/Resource_URL" }]
                },
                "ignoreChanges": {
                    "title": "Ignore changes",
                    "description": "If false (default), the system updates the profile in every BIG-IP AS3 declaration deployment. If true, BIG-IP AS3 creates the profile on first deployment, and leaves it untouched afterwards",
                    "type": "boolean",
                    "default": false
                }
            },
            "required": ["class", "url"],
            "additionalProperties": false
        },

        "ICAP_Profile": {
            "title": "ICAP_Profile",
            "description": "Configures an ICAP profile",
            "type": "object",
            "properties": {
                "class": {
                    "type": "string",
                    "const": "ICAP_Profile"
                },
                "label": {
                    "$ref": "#/definitions/Label"
                },
                "uri": {
                    "description": "Specifies the absolute URI that contains both the complete hostname and the path of the resource to use in the ICAP header. Macro expansion is supported for all attribute values in the ICAP header (e.g. icap://${SERVER_IP}:${SERVER_PORT}/videoOptimization)",
                    "type": "string"
                },
                "fromHeader": {
                    "description": "Specifies the 'From' attribute to use in the ICAP header",
                    "type": "string"
                },
                "hostHeader": {
                    "description": "Specifies the 'Host' attribute to use in the ICAP header",
                    "type": "string"
                },
                "refererHeader": {
                    "description": "Specifies the 'Referer' attribute to use in the ICAP header",
                    "type": "string"
                },
                "userAgentHeader": {
                    "description": "Specifies the 'User-Agent' attribute to use in the ICAP header",
                    "type": "string"
                },
                "previewLength": {
                    "description": "Specifies the length of the preview in the transaction",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295,
                    "default": 0
                }
            },
            "required": ["class"],
            "additionalProperties": false
        },

        "Adapt_Profile": {
            "title": "Adapt_Profile",
            "description": "Configures a request or response Adapt profile or both",
            "type": "object",
            "properties": {
                "class": {
                    "type": "string",
                    "const": "Adapt_Profile"
                },
                "label": {
                    "$ref": "#/definitions/Label"
                },
                "messageType": {
                    "description": "The type of Adapt profile. Use both to create a request and response profile with the same property values",
                    "type": "string",
                    "enum": ["response", "request", "request-and-response"]
                },
                "enableHttpAdaptation": {
                    "description": "Enable or disable the adaptation of HTTP requests/responses. They will be forwarded to the internal service",
                    "type": "boolean",
                    "default": true
                },
                "internalService": {
                    "description": "Specifies the name of the internal service to use for adapting the request/response",
                    "allOf": [
                        {
                            "$ref": "#/definitions/Pointer_Service"
                        }
                    ]
                },
                "previewSize": {
                    "description": "Specifies the maximum size of the preview buffer",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295,
                    "default": 1024
                },
                "serviceDownAction": {
                    "description": "Specifies the action to take if the internal service doesn't exist or is down",
                    "type": "string",
                    "enum": ["ignore", "reset", "drop"],
                    "default": "ignore"
                },
                "timeout": {
                    "description": "Specifies how long in miliseconds to wait for the internal service before a timeout error will occur",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295,
                    "default": 0
                },
                "allowHTTP10": {
                    "description": "Specifies whether to forward HTTP 1.0 requests/responses",
                    "type": "boolean",
                    "default": false
                }
            },
            "required": ["class", "messageType"]
        },

        "Cipher_Rule": {
            "title": "Cipher_Rule",
            "description": "Configures a cipher rule",
            "type": "object",
            "properties": {
                "class": {
                    "type": "string",
                    "const": "Cipher_Rule"
                },
                "label": {
                    "$ref": "#/definitions/Label"
                },
                "remark": {
                    "$ref": "#/definitions/Remark"
                },
                "cipherSuites": {
                    "description": "Specifies the cipher suites",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "namedGroups": {
                    "description": "Specifies the Elliptic Curve Diffie Hellman key agreement algorithms used to negotiate SSL/TLS connections. namedGroups are only supported on BIG-IP 14.0 and later.",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "DEFAULT",
                            "P256",
                            "P384",
                            "X25519"
                        ]
                    }
                },
                "signatureAlgorithms": {
                    "description": "Specifies the digital signature algorithms used for authentication. signatureAlgorithms are only supported on BIG-IP 14.0 and later.",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "DEFAULT",
                            "DSA-SHA1",
                            "DSA-SHA256",
                            "DSA-SHA384",
                            "DSA-SHA512",
                            "ECDSA-SHA1",
                            "ECDSA-SHA256",
                            "ECDSA-SHA384",
                            "ECDSA-SHA512",
                            "RSA-PKCS1-SHA1",
                            "RSA-PKCS1-SHA256",
                            "RSA-PKCS1-SHA384",
                            "RSA-PKCS1-SHA512",
                            "RSA-PSS-SHA256",
                            "RSA-PSS-SHA384",
                            "RSA-PSS-SHA512"
                        ]
                    }
                }
            },
            "required": ["class"],
            "anyOf": [
                {
                    "required": ["cipherSuites"]
                },
                {
                    "required": ["namedGroups"]
                },
                {
                    "required": ["signatureAlgorithms"]
                }
            ],
            "additionalProperties": false
        },

        "Cipher_Group": {
            "title": "Cipher_Group",
            "description": "Configures a Cipher Group",
            "type": "object",
            "properties": {
                "class": {
                    "type": "string",
                    "const": "Cipher_Group"
                },
                "label": {
                    "$ref": "#/definitions/Label"
                },
                "remark": {
                    "$ref": "#/definitions/Remark"
                },
                "order": {
                    "description": "Configure the order of the specified Cipher Rules.",
                    "type": "string",
                    "enum": [
                        "default",
                        "speed",
                        "strength",
                        "fips",
                        "hardware"
                    ],
                    "default": "default"
                },
                "allowCipherRules": {
                    "description": "Allow the following Cipher Rules.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Pointer_Cipher_Rule"
                    },
                    "default": [
                        { "bigip": "/Common/f5-default" }
                    ]
                },
                "excludeCipherRules": {
                    "description": "Exclude the following Cipher_Rules from the Allowed list.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Pointer_Cipher_Rule"
                    }
                },
                "requireCipherRules": {
                    "description": "Restrict the Allowed list to the following Cipher_Rules.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Pointer_Cipher_Rule"
                    }
                }
            },
            "required": [ "class" ],
            "additionalProperties": false
        },

        "iFile": {
            "title": "iFile",
            "description": "An iFile",
            "type": "object",
            "properties": {
                "class": {
                    "type": "string",
                    "const": "iFile"
                },
                "label": { "$ref": "#/definitions/Label" },
                "remark": { "$ref": "#/definitions/Remark" },
                "iFile": {
                    "description": "Reference to an iFile",
                    "allOf": [
                        {
                            "$ref": "#/definitions/F5string"
                        },
                        {
                            "f5PostProcess": {
                                "tag": "fetch",
                                "data": "string"
                            }
                        }
                    ]
                }
            },
            "additionalProperties": false,
            "required": [ "class", "iFile" ]
        }
    }
}
